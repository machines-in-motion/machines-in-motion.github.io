<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="wrapper_8py" kind="file" language="Python">
    <compoundname>wrapper.py</compoundname>
    <innerclass refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper" prot="public">python::py_pinocchio_bullet::wrapper::PinBulletWrapper</innerclass>
    <innernamespace refid="namespacepython_1_1py__pinocchio__bullet_1_1wrapper">python::py_pinocchio_bullet::wrapper</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#///////////////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#//<sp/>BSD<sp/>3-Clause<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#//<sp/>Copyright<sp/>(C)<sp/>2018-2019,<sp/>New<sp/>York<sp/>University<sp/>,<sp/>Max<sp/>Planck<sp/>Gesellschaft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#//<sp/>Copyright<sp/>note<sp/>valid<sp/>unless<sp/>otherwise<sp/>stated<sp/>in<sp/>individual<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#///////////////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pybullet<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>p</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pinocchio<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>se3</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>time<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sleep</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pinocchio.utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>zero</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper" kindref="compound">PinBulletWrapper</ref>(object):</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>robot_id,<sp/>pinocchio_robot,<sp/>joint_names,<sp/>endeff_names,<sp/>useFixedBase=False):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a991baba630bdd4a7d6d5be186d695b15" kindref="member">nq</ref><sp/>=<sp/>pinocchio_robot.nq</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a935e2794645c3142ada1e291ba71669a" kindref="member">nv</ref><sp/>=<sp/>pinocchio_robot.nv</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1acad3358e0076a280c0b4a3ee6f04e8f2" kindref="member">nj</ref><sp/>=<sp/>len(joint_names)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1aa1df78496c40d13f5c21ffb647cd1c44" kindref="member">nf</ref><sp/>=<sp/>len(endeff_names)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a88cff7be8db6447db6a003e93a8be3e2" kindref="member">robot_id</ref><sp/>=<sp/>robot_id</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a2a125c40aecef05dc101bcf5df1acd4a" kindref="member">pinocchio_robot</ref><sp/>=<sp/>pinocchio_robot</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a7d3dd146b61385b8918ca169caa186de" kindref="member">useFixedBase</ref><sp/>=<sp/>useFixedBase</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a7c8f9529af82c7800dd09937f2845488" kindref="member">joint_names</ref><sp/>=<sp/>joint_names</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1ad5840b635e53996b2f811ff377765420" kindref="member">endeff_names</ref><sp/>=<sp/>endeff_names</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bullet_joint_map<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ji<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(p.getNumJoints(robot_id)):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bullet_joint_map[p.getJointInfo(robot_id,<sp/>ji)[1].decode(</highlight><highlight class="stringliteral">&apos;UTF-8&apos;</highlight><highlight class="normal">)]<sp/>=<sp/>ji</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a1a6ce8db04a37ee71171676092771df9" kindref="member">bullet_joint_ids</ref><sp/>=<sp/>np.array([bullet_joint_map[name]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>joint_names])</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a8213dc2be44eb764b4abb5a28b7d59b4" kindref="member">pinocchio_joint_ids</ref><sp/>=<sp/>np.array([pinocchio_robot.model.getJointId(name)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>joint_names])</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a66629feee901449769b8ad08355c556f" kindref="member">pin2bullet_joint_only_array</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a7d3dd146b61385b8918ca169caa186de" kindref="member">useFixedBase</ref>:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(2,<sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1acad3358e0076a280c0b4a3ee6f04e8f2" kindref="member">nj</ref><sp/>+<sp/>2):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pin2bullet_joint_only_array.append(np.where(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a8213dc2be44eb764b4abb5a28b7d59b4" kindref="member">pinocchio_joint_ids</ref><sp/>==<sp/>i)[0][0])</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,<sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1acad3358e0076a280c0b4a3ee6f04e8f2" kindref="member">nj</ref><sp/>+<sp/>1):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pin2bullet_joint_only_array.append(np.where(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a8213dc2be44eb764b4abb5a28b7d59b4" kindref="member">pinocchio_joint_ids</ref><sp/>==<sp/>i)[0][0])</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>the<sp/>velocity<sp/>control<sp/>on<sp/>the<sp/>joints<sp/>as<sp/>we<sp/>use<sp/>torque<sp/>control.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.setJointMotorControlArray(robot_id,<sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a1a6ce8db04a37ee71171676092771df9" kindref="member">bullet_joint_ids</ref>,<sp/>p.VELOCITY_CONTROL,<sp/>forces=np.zeros(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1acad3358e0076a280c0b4a3ee6f04e8f2" kindref="member">nj</ref>))</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>In<sp/>pybullet,<sp/>the<sp/>contact<sp/>wrench<sp/>is<sp/>measured<sp/>at<sp/>a<sp/>joint.<sp/>In<sp/>our<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>joint<sp/>is<sp/>fixed<sp/>joint.<sp/>Pinocchio<sp/>doesn&apos;t<sp/>add<sp/>fixed<sp/>joints<sp/>into<sp/>the<sp/>joint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>list.<sp/>Therefore,<sp/>the<sp/>computation<sp/>is<sp/>done<sp/>wrt<sp/>to<sp/>the<sp/>frame<sp/>of<sp/>the<sp/>fixed<sp/>joint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a5e929f341225057ec66f9d88f5bf4649" kindref="member">bullet_endeff_ids</ref><sp/>=<sp/>[bullet_joint_map[name]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>endeff_names]</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1afd4d3e0702d0e46f9898ff3334d225d2" kindref="member">pinocchio_endeff_ids</ref><sp/>=<sp/>[pinocchio_robot.model.getFrameId(name)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>endeff_names]</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_action(self,<sp/>pos,<sp/>rot):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>np.zeros((6,<sp/>6))</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[:3,<sp/>:3]<sp/>=<sp/>rot</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[3:,<sp/>3:]<sp/>=<sp/>rot</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[3:,<sp/>:3]<sp/>=<sp/>se3.utils.skew(np.array(pos)).dot(rot)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1ab91d7c32be024c5d90bbb7af527313fb" kindref="member">get_force</ref>(self):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Returns<sp/>the<sp/>force<sp/>readings<sp/>as<sp/>well<sp/>as<sp/>the<sp/>set<sp/>of<sp/>active<sp/>contacts<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active_contacts_frame_ids<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contact_forces<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>the<sp/>contact<sp/>model<sp/>using<sp/>the<sp/>p.getContactPoints()<sp/>api.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">sign(x):</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x<sp/>&gt;=<sp/>0:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>p.getContactPoints()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>reversed(cp):</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contact_normal<sp/>=<sp/>ci[7]</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal_force<sp/>=<sp/>ci[9]</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lateral_friction_direction_1<sp/>=<sp/>ci[11]</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lateral_friction_force_1<sp/>=<sp/>ci[10]</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lateral_friction_direction_2<sp/>=<sp/>ci[13]</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lateral_friction_force_2<sp/>=<sp/>ci[12]</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ci[3]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a5e929f341225057ec66f9d88f5bf4649" kindref="member">bullet_endeff_ids</ref>:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>np.where(np.array(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a5e929f341225057ec66f9d88f5bf4649" kindref="member">bullet_endeff_ids</ref>)<sp/>==<sp/>ci[3])[0][0]</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>ci[4]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a5e929f341225057ec66f9d88f5bf4649" kindref="member">bullet_endeff_ids</ref>:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>np.where(np.array(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a5e929f341225057ec66f9d88f5bf4649" kindref="member">bullet_endeff_ids</ref>)<sp/>==<sp/>ci[4])[0][0]</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1afd4d3e0702d0e46f9898ff3334d225d2" kindref="member">pinocchio_endeff_ids</ref>[i]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>active_contacts_frame_ids:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active_contacts_frame_ids.append(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1afd4d3e0702d0e46f9898ff3334d225d2" kindref="member">pinocchio_endeff_ids</ref>[i])</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force<sp/>=<sp/>np.zeros(6)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>force[:3]<sp/>=<sp/>normal_force<sp/>*<sp/>np.array(contact_normal)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lateral_friction_force_1<sp/>*<sp/>np.array(lateral_friction_direction_1)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lateral_friction_force_2<sp/>*<sp/>np.array(lateral_friction_direction_2)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contact_forces.append(force)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>active_contacts_frame_ids[::-1],<sp/>contact_forces[::-1]</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1af3f64a253e479c47111b4cba94dfd77a" kindref="member">get_base_velocity_world</ref>(self):</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Returns<sp/>the<sp/>velocity<sp/>of<sp/>the<sp/>base<sp/>in<sp/>the<sp/>world<sp/>frame.</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.array((6,1))<sp/>with<sp/>the<sp/>translation<sp/>and<sp/>angular<sp/>velocity</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel,<sp/>orn<sp/>=<sp/>p.getBaseVelocity(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a88cff7be8db6447db6a003e93a8be3e2" kindref="member">robot_id</ref>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.array(vel<sp/>+<sp/>orn).reshape(6,<sp/>1)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get_state(self):</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Returns<sp/>a<sp/>pinocchio<sp/>like<sp/>representation<sp/>of<sp/>the<sp/>q,<sp/>dq<sp/>matrixes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>zero(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a991baba630bdd4a7d6d5be186d695b15" kindref="member">nq</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dq<sp/>=<sp/>zero(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a935e2794645c3142ada1e291ba71669a" kindref="member">nv</ref>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a7d3dd146b61385b8918ca169caa186de" kindref="member">useFixedBase</ref>:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/>orn<sp/>=<sp/>p.getBasePositionAndOrientation(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a88cff7be8db6447db6a003e93a8be3e2" kindref="member">robot_id</ref>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[:3]<sp/>=<sp/>pos</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[3:7]<sp/>=<sp/>orn</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel,<sp/>orn<sp/>=<sp/>p.getBaseVelocity(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a88cff7be8db6447db6a003e93a8be3e2" kindref="member">robot_id</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dq[:3]<sp/>=<sp/>vel</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dq[3:6]<sp/>=<sp/>orn</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Pinocchio<sp/>assumes<sp/>the<sp/>base<sp/>velocity<sp/>to<sp/>be<sp/>in<sp/>the<sp/>body<sp/>frame<sp/>-&gt;<sp/>rotate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rot<sp/>=<sp/>np.array(p.getMatrixFromQuaternion(q[3:7])).reshape((3,<sp/>3))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dq[0:3]<sp/>=<sp/>rot.T.dot(dq[0:3])</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dq[3:6]<sp/>=<sp/>rot.T.dot(dq[3:6])</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Query<sp/>the<sp/>joint<sp/>readings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>joint_states<sp/>=<sp/>p.getJointStates(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a88cff7be8db6447db6a003e93a8be3e2" kindref="member">robot_id</ref>,<sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a1a6ce8db04a37ee71171676092771df9" kindref="member">bullet_joint_ids</ref>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a7d3dd146b61385b8918ca169caa186de" kindref="member">useFixedBase</ref>:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1acad3358e0076a280c0b4a3ee6f04e8f2" kindref="member">nj</ref>):</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[5<sp/>+<sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a8213dc2be44eb764b4abb5a28b7d59b4" kindref="member">pinocchio_joint_ids</ref>[i]]<sp/>=<sp/>joint_states[i][0]</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dq[4<sp/>+<sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a8213dc2be44eb764b4abb5a28b7d59b4" kindref="member">pinocchio_joint_ids</ref>[i]]<sp/>=<sp/>joint_states[i][1]</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1acad3358e0076a280c0b4a3ee6f04e8f2" kindref="member">nj</ref>):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a8213dc2be44eb764b4abb5a28b7d59b4" kindref="member">pinocchio_joint_ids</ref>[i]<sp/>-<sp/>1]<sp/>=<sp/>joint_states[i][0]</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dq[self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a8213dc2be44eb764b4abb5a28b7d59b4" kindref="member">pinocchio_joint_ids</ref>[i]<sp/>-<sp/>1]<sp/>=<sp/>joint_states[i][1]</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>q,<sp/>dq</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a2c79661f50580185498007e5755c774d" kindref="member">update_pinocchio</ref>(self,<sp/>q,<sp/>dq):</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Updates<sp/>the<sp/>pinocchio<sp/>robot.</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>includes<sp/>updating:</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>kinematics</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>joint<sp/>and<sp/>frame<sp/>jacobian</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>centroidal<sp/>momentum</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q:<sp/>Pinocchio<sp/>generalized<sp/>position<sp/>vect.</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dq:<sp/>Pinocchio<sp/>generalize<sp/>velocity<sp/>vector.</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pinocchio_robot.computeJointJacobians(q)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pinocchio_robot.framesForwardKinematics(q)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pinocchio_robot.centroidalMomentum(q,<sp/>dq)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1ab4ea626824c8043f48aa3c57b7504426" kindref="member">get_state_update_pinocchio</ref>(self):</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Get<sp/>state<sp/>from<sp/>pybullet<sp/>and<sp/>update<sp/>pinocchio<sp/>robot<sp/>internals.</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>gets<sp/>the<sp/>state<sp/>from<sp/>the<sp/>pybullet<sp/>simulator<sp/>and<sp/>forwards</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>kinematics,<sp/>jacobians,<sp/>centroidal<sp/>moments<sp/>on<sp/>the<sp/>pinocchio<sp/>robot</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>forward_pinocchio<sp/>for<sp/>details<sp/>on<sp/>computed<sp/>quantities).<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q,<sp/>dq<sp/>=<sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a35ba3a21b8b36df34d1ad8389f4c4caa" kindref="member">get_state</ref>()</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a2c79661f50580185498007e5755c774d" kindref="member">update_pinocchio</ref>(q,<sp/>dq)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>q,<sp/>dq</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">reset_state(self,<sp/>q,<sp/>dq):</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec2list<sp/>=<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>m:<sp/>np.array(m.T).reshape(-1).tolist()</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a7d3dd146b61385b8918ca169caa186de" kindref="member">useFixedBase</ref>:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.resetBasePositionAndOrientation(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a88cff7be8db6447db6a003e93a8be3e2" kindref="member">robot_id</ref>,<sp/>vec2list(q[:3]),<sp/>vec2list(q[3:7]))</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Pybullet<sp/>assumes<sp/>the<sp/>base<sp/>velocity<sp/>to<sp/>be<sp/>aligned<sp/>with<sp/>the<sp/>world<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rot<sp/>=<sp/>np.array(p.getMatrixFromQuaternion(q[3:7])).reshape((3,<sp/>3))</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.resetBaseVelocity(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a88cff7be8db6447db6a003e93a8be3e2" kindref="member">robot_id</ref>,<sp/>vec2list(rot.dot(dq[:3])),<sp/>vec2list(rot.dot(dq[3:6])))</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>bullet_joint_id<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a1a6ce8db04a37ee71171676092771df9" kindref="member">bullet_joint_ids</ref>):</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.resetJointState(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a88cff7be8db6447db6a003e93a8be3e2" kindref="member">robot_id</ref>,<sp/>bullet_joint_id,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[5<sp/>+<sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a8213dc2be44eb764b4abb5a28b7d59b4" kindref="member">pinocchio_joint_ids</ref>[i]],</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dq[4<sp/>+<sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a8213dc2be44eb764b4abb5a28b7d59b4" kindref="member">pinocchio_joint_ids</ref>[i]])</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>bullet_joint_id<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a1a6ce8db04a37ee71171676092771df9" kindref="member">bullet_joint_ids</ref>):</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.resetJointState(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a88cff7be8db6447db6a003e93a8be3e2" kindref="member">robot_id</ref>,<sp/>bullet_joint_id,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a8213dc2be44eb764b4abb5a28b7d59b4" kindref="member">pinocchio_joint_ids</ref>[i]<sp/>-<sp/>1],</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dq[self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a8213dc2be44eb764b4abb5a28b7d59b4" kindref="member">pinocchio_joint_ids</ref>[i]<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">send_joint_command(self,<sp/>tau):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Apply<sp/>the<sp/>torques<sp/>on<sp/>the<sp/>base<sp/>towards<sp/>the<sp/>simulator<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a7d3dd146b61385b8918ca169caa186de" kindref="member">useFixedBase</ref>:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(tau.shape[0]<sp/>==<sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a935e2794645c3142ada1e291ba71669a" kindref="member">nv</ref><sp/>-<sp/>6)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(tau.shape[0]<sp/>==<sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a935e2794645c3142ada1e291ba71669a" kindref="member">nv</ref>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zeroGains<sp/>=<sp/>tau.shape[0]<sp/>*<sp/>(0.,)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.setJointMotorControlArray(self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a88cff7be8db6447db6a003e93a8be3e2" kindref="member">robot_id</ref>,<sp/>self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a1a6ce8db04a37ee71171676092771df9" kindref="member">bullet_joint_ids</ref>,<sp/>p.TORQUE_CONTROL,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forces=tau[self.<ref refid="classpython_1_1py__pinocchio__bullet_1_1wrapper_1_1PinBulletWrapper_1a66629feee901449769b8ad08355c556f" kindref="member">pin2bullet_joint_only_array</ref>],</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>positionGains=zeroGains,<sp/>velocityGains=zeroGains)</highlight></codeline>
    </programlisting>
    <location file="python/py_pinocchio_bullet/wrapper.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="filter__plot_8py" kind="file" language="Python">
    <compoundname>filter_plot.py</compoundname>
    <innernamespace refid="namespacefilter__plot">filter_plot</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy.signal<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>butter,<sp/>lfilter,<sp/>freqz</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">butter_lowpass(cutoff,<sp/>fs,<sp/>order=5):</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>nyq<sp/>=<sp/>0.5<sp/>*<sp/>fs</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>normal_cutoff<sp/>=<sp/>cutoff<sp/>/<sp/>nyq</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>b,<sp/>a<sp/>=<sp/>butter(order,<sp/>normal_cutoff,<sp/>btype=</highlight><highlight class="stringliteral">&apos;low&apos;</highlight><highlight class="normal">,<sp/>analog=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b,<sp/>a</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">butter_lowpass_filter(data,<sp/>cutoff,<sp/>fs,<sp/>order=5):</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>b,<sp/>a<sp/>=<sp/>butter_lowpass(cutoff,<sp/>fs,<sp/>order=order)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>lfilter(b,<sp/>a,<sp/>data)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Filter<sp/>requirements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">order<sp/>=<sp/>6</highlight></codeline>
<codeline lineno="20"><highlight class="normal">fs<sp/>=<sp/>30.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sample<sp/>rate,<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">cutoff<sp/>=<sp/>5.226<sp/><sp/></highlight><highlight class="comment">#<sp/>desired<sp/>cutoff<sp/>frequency<sp/>of<sp/>the<sp/>filter,<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Get<sp/>the<sp/>filter<sp/>coefficients<sp/>so<sp/>we<sp/>can<sp/>check<sp/>its<sp/>frequency<sp/>response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">b,<sp/>a<sp/>=<sp/>butter_lowpass(cutoff,<sp/>fs,<sp/>order)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>frequency<sp/>response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">w,<sp/>h<sp/>=<sp/>freqz(b,<sp/>a,<sp/>worN=8000)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">plt.subplot(2,<sp/>1,<sp/>1)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">plt.plot(0.5*fs*w/np.pi,<sp/>np.abs(h),<sp/></highlight><highlight class="stringliteral">&apos;b&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">plt.plot(cutoff,<sp/>0.5*np.sqrt(2),<sp/></highlight><highlight class="stringliteral">&apos;ko&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">plt.axvline(cutoff,<sp/>color=</highlight><highlight class="stringliteral">&apos;k&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">plt.xlim(0,<sp/>0.5*fs)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">plt.title(</highlight><highlight class="stringliteral">&quot;Lowpass<sp/>Filter<sp/>Frequency<sp/>Response&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">plt.xlabel(</highlight><highlight class="stringliteral">&apos;Frequency<sp/>[Hz]&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">plt.grid()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Demonstrate<sp/>the<sp/>use<sp/>of<sp/>the<sp/>filter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">#<sp/>First<sp/>make<sp/>some<sp/>data<sp/>to<sp/>be<sp/>filtered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">T<sp/>=<sp/>5.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">n<sp/>=<sp/>int(T<sp/>*<sp/>fs)<sp/></highlight><highlight class="comment">#<sp/>total<sp/>number<sp/>of<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">t<sp/>=<sp/>np.linspace(0,<sp/>T,<sp/>n,<sp/>endpoint=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">#<sp/>&quot;Noisy&quot;<sp/>data.<sp/><sp/>We<sp/>want<sp/>to<sp/>recover<sp/>the<sp/>1.2<sp/>Hz<sp/>signal<sp/>from<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">data<sp/>=<sp/>np.sin(1.2*2*np.pi*t)<sp/>+<sp/>1.5*np.cos(9*2*np.pi*t)<sp/>+<sp/>0.5*np.sin(12.0*2*np.pi*t)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Filter<sp/>the<sp/>data,<sp/>and<sp/>plot<sp/>both<sp/>the<sp/>original<sp/>and<sp/>filtered<sp/>signals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">y<sp/>=<sp/>butter_lowpass_filter(data,<sp/>cutoff,<sp/>fs,<sp/>order)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">plt.subplot(2,<sp/>1,<sp/>2)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">plt.plot(t,<sp/>data,<sp/></highlight><highlight class="stringliteral">&apos;b-&apos;</highlight><highlight class="normal">,<sp/>label=</highlight><highlight class="stringliteral">&apos;data&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">plt.plot(t,<sp/>y,<sp/></highlight><highlight class="stringliteral">&apos;g-&apos;</highlight><highlight class="normal">,<sp/>linewidth=2,<sp/>label=</highlight><highlight class="stringliteral">&apos;filtered<sp/>data&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">plt.xlabel(</highlight><highlight class="stringliteral">&apos;Time<sp/>[sec]&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">plt.grid()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">plt.legend()</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">plt.subplots_adjust(hspace=0.35)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">plt.show()</highlight></codeline>
    </programlisting>
    <location file="python/dg_blmc_robots/plot/filter_plot.py"/>
  </compounddef>
</doxygen>

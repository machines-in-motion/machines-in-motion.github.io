<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dgm__teststand_8cpp" kind="file" language="C++">
    <compoundname>dgm_teststand.cpp</compoundname>
    <includes local="no">dynamic_graph_manager/ros_init.hh</includes>
    <includes refid="dgm__teststand_8hpp" local="yes">dg_blmc_robots/dgm_teststand.hpp</includes>
    <incdepgraph>
      <node id="151">
        <label>dynamic_graph_manager/ros_init.hh</label>
      </node>
      <node id="153">
        <label>dynamic_graph_manager/dynamic_graph_manager.hh</label>
      </node>
      <node id="155">
        <label>dg_blmc_robots/JointCalibration.h</label>
      </node>
      <node id="152">
        <label>dg_blmc_robots/dgm_teststand.hpp</label>
        <link refid="dgm__teststand_8hpp_source"/>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>blmc_robots/teststand.hpp</label>
      </node>
      <node id="156">
        <label>yaml_cpp_catkin/yaml_cpp_fwd.hpp</label>
      </node>
      <node id="150">
        <label>src/dgm_teststand.cpp</label>
        <link refid="dgm_teststand.cpp"/>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacedg__blmc__robots">dg_blmc_robots</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#include<sp/>&lt;dynamic_graph_manager/ros_init.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dg_blmc_robots/dgm_teststand.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedg__blmc__robots" kindref="compound">dg_blmc_robots</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1ae6b6e00fbd3460f7083977ae9befb6fd" kindref="member">DGMTeststand::DGMTeststand</ref>():<sp/>was_in_safety_mode_(false)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a8699f157b5a05c92a5de2b2c80ba70af" kindref="member">DGMTeststand::~DGMTeststand</ref>()</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a8495e1f1eb764ff3118d0e8dc60bc686" kindref="member">DGMTeststand::initialize_hardware_communication_process</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Vector2d<sp/>joint_index_to_zero;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>YAML::ReadParameter(params_[</highlight><highlight class="stringliteral">&quot;hardware_communication&quot;</highlight><highlight class="normal">][</highlight><highlight class="stringliteral">&quot;calibration&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;index_to_zero_angle&quot;</highlight><highlight class="normal">,<sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a788ef9391e891af10ab9b76f18139e5c" kindref="member">zero_to_index_angle_from_file_</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>hardware<sp/>communication<sp/>ros<sp/>node<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle&amp;<sp/>ros_node_handle<sp/>=<sp/>dynamic_graph::ros_init(</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dynamic_graph::DynamicGraphManager::hw_com_ros_node_name_);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>ros_user_commands_.push_back(ros_node_handle.advertiseService(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;calibrate_joint_position&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classdg__blmc__robots_1_1DGMTeststand_1a133087f3899672101df62fbf95fac292" kindref="member">DGMTeststand::calibrate_joint_position_callback</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.initialize();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a90fd2d9a7e579cbeb9daf2f0ba0d2a02" kindref="member">DGMTeststand::is_in_safety_mode</ref>()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a5821be382bfd2ec8b5bb668b2aacc2ea" kindref="member">was_in_safety_mode_</ref><sp/>|=<sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.get_joint_velocities().cwiseAbs().maxCoeff()<sp/>&gt;<sp/>10000.;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classdg__blmc__robots_1_1DGMTeststand_1a5821be382bfd2ec8b5bb668b2aacc2ea" kindref="member">was_in_safety_mode_</ref><sp/>||<sp/>DynamicGraphManager::is_in_safety_mode())<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a5821be382bfd2ec8b5bb668b2aacc2ea" kindref="member">was_in_safety_mode_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1ac0f85de90afcf35c01930f3504c8ac0e" kindref="member">DGMTeststand::get_sensors_to_map</ref>(dynamic_graph::VectorDGMap&amp;<sp/>map)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.acquire_sensors();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;joint_positions&quot;</highlight><highlight class="normal">)<sp/>=<sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.get_joint_positions();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;joint_velocities&quot;</highlight><highlight class="normal">)<sp/>=<sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.get_joint_velocities();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;joint_torques&quot;</highlight><highlight class="normal">)<sp/>=<sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.get_joint_torques();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;joint_target_torques&quot;</highlight><highlight class="normal">)<sp/>=<sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.get_joint_target_torques();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;joint_encoder_index&quot;</highlight><highlight class="normal">)<sp/>=<sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.get_joint_encoder_index();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;contact_sensors&quot;</highlight><highlight class="normal">)<sp/>=<sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.get_contact_sensors_states();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;slider_positions&quot;</highlight><highlight class="normal">)<sp/>=<sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.get_slider_positions();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;height_sensors&quot;</highlight><highlight class="normal">)<sp/>=<sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.get_height_sensors();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;ati_force&quot;</highlight><highlight class="normal">)<sp/>=<sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.get_ati_force();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;ati_torque&quot;</highlight><highlight class="normal">)<sp/>=<sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.get_ati_torque();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>acquiring<sp/>the<sp/>sensors<sp/>data\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Setting<sp/>all<sp/>of<sp/>them<sp/>0.0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;joint_positions&quot;</highlight><highlight class="normal">).fill(0.0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;joint_velocities&quot;</highlight><highlight class="normal">).fill(0.0);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;joint_torques&quot;</highlight><highlight class="normal">).fill(0.0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;joint_target_torques&quot;</highlight><highlight class="normal">).fill(0.0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;joint_encoder_index&quot;</highlight><highlight class="normal">).fill(0.0);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;contact_sensors&quot;</highlight><highlight class="normal">).fill(0.0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;slider_positions&quot;</highlight><highlight class="normal">).fill(0.0);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;height_sensors&quot;</highlight><highlight class="normal">).fill(0.0);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;ati_force&quot;</highlight><highlight class="normal">).fill(0.0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map.at(</highlight><highlight class="stringliteral">&quot;ati_torque&quot;</highlight><highlight class="normal">).fill(0.0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a8b0ec086e17a6aae248c5c05014ad8a5" kindref="member">DGMTeststand::set_motor_controls_from_map</ref>(</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamic_graph::VectorDGMap&amp;<sp/>map)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a7c5db196b671570171458720ea4341a8" kindref="member">ctrl_joint_torques_</ref><sp/>=<sp/>map.at(</highlight><highlight class="stringliteral">&quot;ctrl_joint_torques&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.send_target_joint_torque(<ref refid="classdg__blmc__robots_1_1DGMTeststand_1a7c5db196b671570171458720ea4341a8" kindref="member">ctrl_joint_torques_</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...){</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>sending<sp/>controls\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a133087f3899672101df62fbf95fac292" kindref="member">DGMTeststand::calibrate_joint_position_callback</ref>(</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>dg_blmc_robots::JointCalibration::Request&amp;<sp/>req,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>dg_blmc_robots::JointCalibration::Response&amp;<sp/>res)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>and<sp/>register<sp/>the<sp/>command<sp/>for<sp/>further<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>add_user_command(std::bind(&amp;<ref refid="classdg__blmc__robots_1_1DGMTeststand_1a0bce1340d617bfd6665cebef4d091ab1" kindref="member">DGMTeststand::calibrate_joint_position</ref>,<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a788ef9391e891af10ab9b76f18139e5c" kindref="member">zero_to_index_angle_from_file_</ref>));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>whatever<sp/>the<sp/>user<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>res.sanity_check<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>service<sp/>has<sp/>been<sp/>executed<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a0bce1340d617bfd6665cebef4d091ab1" kindref="member">DGMTeststand::calibrate_joint_position</ref>(</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::Vector2d&amp;<sp/>zero_to_index_angle)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" kindref="member">teststand_</ref>.calibrate(zero_to_index_angle);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dg_blmc_robots</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/dgm_teststand.cpp"/>
  </compounddef>
</doxygen>

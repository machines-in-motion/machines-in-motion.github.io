<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classdg__blmc__robots_1_1DGMTeststand" kind="class" language="C++" prot="public">
    <compoundname>dg_blmc_robots::DGMTeststand</compoundname>
    <basecompoundref prot="public" virt="non-virtual">DynamicGraphManager</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" prot="private" static="no" mutable="no">
        <type>blmc_robots::Teststand</type>
        <definition>blmc_robots::Teststand dg_blmc_robots::DGMTeststand::teststand_</definition>
        <argsstring></argsstring>
        <name>teststand_</name>
        <briefdescription>
<para>Entries for the real hardware. </para>        </briefdescription>
        <detaileddescription>
<para>test_bench_ the real test bench hardware drivers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dg_blmc_robots/dgm_teststand.hpp" line="88" column="1" bodyfile="include/dg_blmc_robots/dgm_teststand.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdg__blmc__robots_1_1DGMTeststand_1a7c5db196b671570171458720ea4341a8" prot="private" static="no" mutable="no">
        <type>Eigen::Vector2d</type>
        <definition>Eigen::Vector2d dg_blmc_robots::DGMTeststand::ctrl_joint_torques_</definition>
        <argsstring></argsstring>
        <name>ctrl_joint_torques_</name>
        <briefdescription>
<para>ctrl_joint_torques_ the joint torques to be sent </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dg_blmc_robots/dgm_teststand.hpp" line="93" column="1" bodyfile="include/dg_blmc_robots/dgm_teststand.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdg__blmc__robots_1_1DGMTeststand_1a788ef9391e891af10ab9b76f18139e5c" prot="private" static="no" mutable="no">
        <type>Eigen::Vector2d</type>
        <definition>Eigen::Vector2d dg_blmc_robots::DGMTeststand::zero_to_index_angle_from_file_</definition>
        <argsstring></argsstring>
        <name>zero_to_index_angle_from_file_</name>
        <briefdescription>
<para>These are the calibration value extracted from the paramters. </para>        </briefdescription>
        <detaileddescription>
<para>They represent the distance between the theorical zero joint angle and the next jont index. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dg_blmc_robots/dgm_teststand.hpp" line="100" column="1" bodyfile="include/dg_blmc_robots/dgm_teststand.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdg__blmc__robots_1_1DGMTeststand_1a5821be382bfd2ec8b5bb668b2aacc2ea" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dg_blmc_robots::DGMTeststand::was_in_safety_mode_</definition>
        <argsstring></argsstring>
        <name>was_in_safety_mode_</name>
        <briefdescription>
<para>was_in_safety_mode_ Toggle to keep in safety mode once it was entered. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dg_blmc_robots/dgm_teststand.hpp" line="105" column="1" bodyfile="include/dg_blmc_robots/dgm_teststand.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdg__blmc__robots_1_1DGMTeststand_1ae6b6e00fbd3460f7083977ae9befb6fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dg_blmc_robots::DGMTeststand::DGMTeststand</definition>
        <argsstring>()</argsstring>
        <name>DGMTeststand</name>
        <briefdescription>
<para><ref refid="classdg__blmc__robots_1_1DGMTeststand" kindref="compound">DGMTeststand</ref> is the constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dg_blmc_robots/dgm_teststand.hpp" line="28" column="1" bodyfile="src/dgm_teststand.cpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classdg__blmc__robots_1_1DGMTeststand_1a8699f157b5a05c92a5de2b2c80ba70af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dg_blmc_robots::DGMTeststand::~DGMTeststand</definition>
        <argsstring>()</argsstring>
        <name>~DGMTeststand</name>
        <briefdescription>
<para>~DGMTeststand is the destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dg_blmc_robots/dgm_teststand.hpp" line="33" column="1" bodyfile="src/dgm_teststand.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classdg__blmc__robots_1_1DGMTeststand_1a8495e1f1eb764ff3118d0e8dc60bc686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dg_blmc_robots::DGMTeststand::initialize_hardware_communication_process</definition>
        <argsstring>()</argsstring>
        <name>initialize_hardware_communication_process</name>
        <briefdescription>
<para>initialize_hardware_communication_process is the function that initialize the hardware. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Load the calibration parameters</para><para>initialize the user commands</para><para>Initialize the hardware</para>        </inbodydescription>
        <location file="include/dg_blmc_robots/dgm_teststand.hpp" line="39" column="1" bodyfile="src/dgm_teststand.cpp" bodystart="22" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classdg__blmc__robots_1_1DGMTeststand_1ac0f85de90afcf35c01930f3504c8ac0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dg_blmc_robots::DGMTeststand::get_sensors_to_map</definition>
        <argsstring>(dynamic_graph::VectorDGMap &amp;map)</argsstring>
        <name>get_sensors_to_map</name>
        <param>
          <type>dynamic_graph::VectorDGMap &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>get_sensors_to_map acquires the sensors data and feeds it to the input/output map </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Joint data</para><para>Additional data</para><para>Joint data</para><para>Additional data</para>        </inbodydescription>
        <location file="include/dg_blmc_robots/dgm_teststand.hpp" line="46" column="1" bodyfile="src/dgm_teststand.cpp" bodystart="57" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classdg__blmc__robots_1_1DGMTeststand_1a8b0ec086e17a6aae248c5c05014ad8a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dg_blmc_robots::DGMTeststand::set_motor_controls_from_map</definition>
        <argsstring>(const dynamic_graph::VectorDGMap &amp;map)</argsstring>
        <name>set_motor_controls_from_map</name>
        <param>
          <type>const dynamic_graph::VectorDGMap &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>set_motor_controls_from_map reads the input map that contains the controls and send these controls to the hardware. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dg_blmc_robots/dgm_teststand.hpp" line="53" column="1" bodyfile="src/dgm_teststand.cpp" bodystart="104" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classdg__blmc__robots_1_1DGMTeststand_1a90fd2d9a7e579cbeb9daf2f0ba0d2a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool dg_blmc_robots::DGMTeststand::is_in_safety_mode</definition>
        <argsstring>()</argsstring>
        <name>is_in_safety_mode</name>
        <briefdescription>
<para>is_in_safety_mode Implement custom safe-mode detection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dg_blmc_robots/dgm_teststand.hpp" line="58" column="1" bodyfile="src/dgm_teststand.cpp" bodystart="46" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classdg__blmc__robots_1_1DGMTeststand_1a133087f3899672101df62fbf95fac292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dg_blmc_robots::DGMTeststand::calibrate_joint_position_callback</definition>
        <argsstring>(dg_blmc_robots::JointCalibration::Request &amp;req, dg_blmc_robots::JointCalibration::Response &amp;res)</argsstring>
        <name>calibrate_joint_position_callback</name>
        <param>
          <type>dg_blmc_robots::JointCalibration::Request &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>dg_blmc_robots::JointCalibration::Response &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
<para>ROS callback. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para></simplesect>
<simplesect kind="return"><para>false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dg_blmc_robots/dgm_teststand.hpp" line="68" column="1" bodyfile="src/dgm_teststand.cpp" bodystart="115" bodyend="128"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdg__blmc__robots_1_1DGMTeststand_1a0bce1340d617bfd6665cebef4d091ab1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dg_blmc_robots::DGMTeststand::calibrate_joint_position</definition>
        <argsstring>(const Eigen::Vector2d &amp;zero_to_index_angle)</argsstring>
        <name>calibrate_joint_position</name>
        <param>
          <type>const Eigen::Vector2d &amp;</type>
          <declname>zero_to_index_angle</declname>
        </param>
        <briefdescription>
<para>Calibrate the robot joint position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>zero_to_index_angle</parametername>
</parameternamelist>
<parameterdescription>
<para>is the angle between the theoretical zero and the next positive angle. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dg_blmc_robots/dgm_teststand.hpp" line="79" column="1" bodyfile="src/dgm_teststand.cpp" bodystart="130" bodyend="134"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="82">
        <label>dg_blmc_robots::DGMTeststand</label>
        <link refid="classdg__blmc__robots_1_1DGMTeststand"/>
        <childnode refid="83" relation="public-inheritance">
        </childnode>
      </node>
      <node id="83">
        <label>dynamic_graph::DynamicGraphManager</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="84">
        <label>dg_blmc_robots::DGMTeststand</label>
        <link refid="classdg__blmc__robots_1_1DGMTeststand"/>
        <childnode refid="85" relation="public-inheritance">
        </childnode>
      </node>
      <node id="85">
        <label>dynamic_graph::DynamicGraphManager</label>
      </node>
    </collaborationgraph>
    <location file="include/dg_blmc_robots/dgm_teststand.hpp" line="23" column="1" bodyfile="include/dg_blmc_robots/dgm_teststand.hpp" bodystart="22" bodyend="106"/>
    <listofallmembers>
      <member refid="classdg__blmc__robots_1_1DGMTeststand_1a0bce1340d617bfd6665cebef4d091ab1" prot="private" virt="non-virtual"><scope>dg_blmc_robots::DGMTeststand</scope><name>calibrate_joint_position</name></member>
      <member refid="classdg__blmc__robots_1_1DGMTeststand_1a133087f3899672101df62fbf95fac292" prot="public" virt="non-virtual"><scope>dg_blmc_robots::DGMTeststand</scope><name>calibrate_joint_position_callback</name></member>
      <member refid="classdg__blmc__robots_1_1DGMTeststand_1a7c5db196b671570171458720ea4341a8" prot="private" virt="non-virtual"><scope>dg_blmc_robots::DGMTeststand</scope><name>ctrl_joint_torques_</name></member>
      <member refid="classdg__blmc__robots_1_1DGMTeststand_1ae6b6e00fbd3460f7083977ae9befb6fd" prot="public" virt="non-virtual"><scope>dg_blmc_robots::DGMTeststand</scope><name>DGMTeststand</name></member>
      <member refid="classdg__blmc__robots_1_1DGMTeststand_1ac0f85de90afcf35c01930f3504c8ac0e" prot="public" virt="non-virtual"><scope>dg_blmc_robots::DGMTeststand</scope><name>get_sensors_to_map</name></member>
      <member refid="classdg__blmc__robots_1_1DGMTeststand_1a8495e1f1eb764ff3118d0e8dc60bc686" prot="public" virt="non-virtual"><scope>dg_blmc_robots::DGMTeststand</scope><name>initialize_hardware_communication_process</name></member>
      <member refid="classdg__blmc__robots_1_1DGMTeststand_1a90fd2d9a7e579cbeb9daf2f0ba0d2a02" prot="public" virt="virtual"><scope>dg_blmc_robots::DGMTeststand</scope><name>is_in_safety_mode</name></member>
      <member refid="classdg__blmc__robots_1_1DGMTeststand_1a8b0ec086e17a6aae248c5c05014ad8a5" prot="public" virt="non-virtual"><scope>dg_blmc_robots::DGMTeststand</scope><name>set_motor_controls_from_map</name></member>
      <member refid="classdg__blmc__robots_1_1DGMTeststand_1a682499397e16186076999d8705e12c95" prot="private" virt="non-virtual"><scope>dg_blmc_robots::DGMTeststand</scope><name>teststand_</name></member>
      <member refid="classdg__blmc__robots_1_1DGMTeststand_1a5821be382bfd2ec8b5bb668b2aacc2ea" prot="private" virt="non-virtual"><scope>dg_blmc_robots::DGMTeststand</scope><name>was_in_safety_mode_</name></member>
      <member refid="classdg__blmc__robots_1_1DGMTeststand_1a788ef9391e891af10ab9b76f18139e5c" prot="private" virt="non-virtual"><scope>dg_blmc_robots::DGMTeststand</scope><name>zero_to_index_angle_from_file_</name></member>
      <member refid="classdg__blmc__robots_1_1DGMTeststand_1a8699f157b5a05c92a5de2b2c80ba70af" prot="public" virt="non-virtual"><scope>dg_blmc_robots::DGMTeststand</scope><name>~DGMTeststand</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

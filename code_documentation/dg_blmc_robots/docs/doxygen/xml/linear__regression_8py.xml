<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="linear__regression_8py" kind="file" language="Python">
    <compoundname>linear_regression.py</compoundname>
    <innernamespace refid="namespacelinear__regression">linear_regression</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>from<sp/>numpy.linalg<sp/>import<sp/>lstq<sp/>as<sp/>least_square</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">x<sp/>=<sp/>np.array([0.9702,<sp/>0.6376,<sp/>0.4024,<sp/>0.1633])</highlight></codeline>
<codeline lineno="5"><highlight class="normal">y<sp/>=<sp/>np.array([0.073,<sp/>0.415,<sp/>0.657,<sp/>0.902])</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>=<sp/>np.vstack([x,<sp/>np.ones(len(x))]).T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>B<sp/>=<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>#<sp/>y<sp/>=<sp/>a*x+b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>a,<sp/>b<sp/>=<sp/>least_square(A,B,rcond=None)[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>print(&quot;y<sp/>=<sp/>&quot;,<sp/>a,<sp/>&quot;<sp/>*<sp/>x<sp/>+<sp/>&quot;,<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Polynomial<sp/>Regression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">polyfit(x,<sp/>y,<sp/>degree):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>results<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>coeffs<sp/>=<sp/>np.polyfit(x,<sp/>y,<sp/>degree)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Polynomial<sp/>Coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>results[</highlight><highlight class="stringliteral">&apos;polynomial&apos;</highlight><highlight class="normal">]<sp/>=<sp/>coeffs.tolist()</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>r-squared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>np.poly1d(coeffs)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fit<sp/>values,<sp/>and<sp/>mean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>yhat<sp/>=<sp/>p(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>or<sp/>[p(z)<sp/>for<sp/>z<sp/>in<sp/>x]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>ybar<sp/>=<sp/>np.sum(y)/len(y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>or<sp/>sum(y)/len(y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>ssreg<sp/>=<sp/>np.sum((yhat-ybar)**2)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>or<sp/>sum([<sp/>(yihat<sp/>-<sp/>ybar)**2<sp/>for<sp/>yihat<sp/>in<sp/>yhat])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>sstot<sp/>=<sp/>np.sum((y<sp/>-<sp/>ybar)**2)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>or<sp/>sum([<sp/>(yi<sp/>-<sp/>ybar)**2<sp/>for<sp/>yi<sp/>in<sp/>y])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>results[</highlight><highlight class="stringliteral">&apos;determination&apos;</highlight><highlight class="normal">]<sp/>=<sp/>ssreg<sp/>/<sp/>sstot</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">print(polyfit(x,y,1))</highlight></codeline>
    </programlisting>
    <location file="python/dg_blmc_robots/teststand/plot_teststand/linear_regression.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="md_doc_dynamic_graph" kind="page">
    <compoundname>md_doc_dynamic_graph</compoundname>
    <title>Dynamic graph</title>
    <detaileddescription>
<para><heading level="2">Introduction</heading>
</para><para>This package provide tools to ease the use of the <ulink url="https://github.com/stack-of-tasks/dynamic-graph">dynamic-graph</ulink> package for building the entities, their python bindings and install them.</para><para><heading level="2">Usage</heading>
</para><para>In order to build a package containing dynamic-graph entities one need to fetch the dependencies first. In order to to this one can use the <ref refid="md_doc_pkg_config" kindref="compound">pkg-config</ref>. <verbatim>catkin_add_required_dependency(&quot;dynamic-graph &gt;= 3.0.0&quot;)
catkin_add_required_dependency(&quot;dynamic-graph-python &gt;= 3.0.0&quot;)
</verbatim></para><para>Then one need to create a library based on C++ and then build the python dynamic graph module: <verbatim>################################
# Build a dynamic graph module #
################################
add_library(a_cpp_library SHARED
    src/my_first_entity.cpp
    src/a_second_controller.cpp
    src/some_dynamic_graph_operators.cpp
)
target_link_libraries(a_cpp_library ${catkin_LIBRARIES})
set_target_properties(a_cpp_library PROPERTIES
    PREFIX &quot;&quot;
    LIBRARY_OUTPUT_DIRECTORY ${DYNAMIC_GRAPH_PLUGIN_DIR}
)
dynamic_graph_python_module(
    &quot;a_cpp_library&quot;    # from dynamic_graph_manager.a_cpp_library import *
    a_cpp_library      # python wrapper dependencies
    a_cpp_library_wrap # python wrapper target name
)
</verbatim></para><para>This little peace of code creates a library called <computeroutput>a_cpp_library</computeroutput> and build the corresponding python dynamic-graph module and install it in <computeroutput>lib/pythonX.X/dist-packages/dynamic_graph_manager</computeroutput>. </para>    </detaileddescription>
  </compounddef>
</doxygen>

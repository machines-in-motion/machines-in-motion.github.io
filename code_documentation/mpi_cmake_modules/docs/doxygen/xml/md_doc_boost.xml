<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="md_doc_boost" kind="page">
    <compoundname>md_doc_boost</compoundname>
    <title>Boost</title>
    <detaileddescription>
<para><heading level="2">Introduction</heading>
</para><para>This package provide a CMake macros which looks for the <ulink url="https://www.boost.org/doc/libs/">Boost</ulink> libraries.</para><para><heading level="2">Usage</heading>
</para><para>Inside your <computeroutput>CMakeLists.txt</computeroutput> one can use: <verbatim>SET(BOOST_COMPONENTS &lt;Boost components list&gt;)
SEARCH_FOR_BOOST(BOOST_COMPONENTS)
</verbatim></para><para>or in lower case: <verbatim>set(BOOST_COMPONENTS &lt;Boost components list&gt;)
search_for_boost()
</verbatim></para><para>This will already define for you the path to the include directories for Boost. It provide the variable <computeroutput>BOOST_LIBRARIES</computeroutput> in order to use the Boost component.</para><para>In order to link a CMake target with boost-python (cf. <ulink url="https://cmake.org/cmake/help/v3.17/command/add_library.html?highlight=add_library">add_library</ulink> or <ulink url="https://cmake.org/cmake/help/v3.17/command/add_executable.html?highlight=add_executable">add_executable</ulink>) one can simply use the following macro:</para><para><verbatim>target_link_boost_python(&lt;target name&gt;) </verbatim> </para>    </detaileddescription>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="md_doc_doxygen" kind="page">
    <compoundname>md_doc_doxygen</compoundname>
    <title>Doxygen</title>
    <detaileddescription>
<para><heading level="2">Introduction</heading>
</para><para>In the machines-in-motion group we use doxygen in order to build all documentations from C/C++ and Python code. The main idea is that we can have a unifyed way to generate the documentation.</para><para><heading level="2">Usage</heading>
</para><para>In order to use this macro one obviously needs to depend on this package through a <computeroutput>find_package</computeroutput> or using <computeroutput>catkin</computeroutput> components. Once the dependency is found the following macro needs to be added to the CMakelists.txt: <verbatim>build_doxygen_documentation()
</verbatim></para><para>This macro is idle by default. To activate it one need to pass the following CMake argument: <verbatim>catkin build --cmake-args -DBUILD_DOCUMENTATION=ON
</verbatim></para><para>The macro will generate a specific target using the name of the project for unicity. The docuementation is located in: <verbatim>workspace/devel/share/&lt;project name&gt;/doc/html/
</verbatim></para><para>In order to visual the built documentation with firefox please run: <verbatim>firefox workspace/devel/share/&lt;project name&gt;/doc/html/index.html
</verbatim></para><para><heading level="2">Writting a documentation</heading>
</para><para>In order to write a decent docuementation one need to make sure that Doxygen do not output warnings. A warning from DOxygen proves that a code item is not documentated. See the <ulink url="https://machines-in-motion.github.io/code_documentation/ci_example_cpp/coding_guidelines_1.html">C++ coding guidelines</ulink> , the <ulink url="https://machines-in-motion.github.io/code_documentation/ci_example_python/coding_guidelines_1.html">Python coding guidelines</ulink> and the <ulink url="https://machines-in-motion.github.io/code_documentation/ci_example_cpp/coding_guidelines_0.html">General coding guidelines</ulink> For more information on how our code style and the good code practice.</para><para>The documentation of your code is combined with several main items:</para><para><itemizedlist>
<listitem><para>First, one need to add the docstring of the language.</para></listitem><listitem><para>Second, one need to provide unittests, these usually are good basis for an external user to understand the API.</para></listitem><listitem><para>Third, one need to provide demos of the API defining the usual use case of the code. These code must contain doc-strings containing the key word, e.g. with C/C++: <verbatim>```C++
/** 
  * \@example &lt;file name&gt; This example provide an exmaple on how to use ...
  * Remarque: remove the `\` before the `@`.
  */
```
</verbatim></para></listitem><listitem><para>Finally whenever you feel like documenting more extensively something and adding graph, image, extensive text explanatin, link, etc, it is way more convenitent to use markdown. Therefore one need to provide a <computeroutput>doc/</computeroutput> folder containing the additionnal documentation.</para></listitem></itemizedlist>
</para><para>For more detail on how to use doxygen here is a list of extremely useful links:<itemizedlist>
<listitem><para><ulink url="http://doxygen.nl/manual/commands.html">List of doxygen commands</ulink></para></listitem><listitem><para><ulink url="http://doxygen.nl/manual/markdown.html#markdown_dox">Doxygen markdown support</ulink></para></listitem></itemizedlist>
</para><para><heading level="2">Implementation details</heading>
</para><para>The <computeroutput>Doxyfile.in</computeroutput> place in this repository&apos;s <computeroutput>resources</computeroutput> folder is reponsible for the parsing paramters and shape of the documentation. The idea here is that upon build Doxygen will go recursively through all the current project files looking for the C/C++/Python/Markdown files and generate the documentation automatically.</para><para>The subtility about python is that we use the <ulink url="https://github.com/Feneric/doxypypy">doxypypy</ulink> package in order to convert the Google docstring in the python code into Doxygen recognizable docstrings. So one need to install this dependency using pip for example. </para>    </detaileddescription>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cond__var__demo_8cpp" kind="file" language="C++">
    <compoundname>cond_var_demo.cpp</compoundname>
    <includes local="no">unistd.h</includes>
    <includes local="no">atomic</includes>
    <includes local="no">condition_variable</includes>
    <includes local="no">iostream</includes>
    <includes local="no">mutex</includes>
    <includes local="no">thread</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="1806">
        <label>atomic</label>
      </node>
      <node id="1807">
        <label>condition_variable</label>
      </node>
      <node id="1805">
        <label>unistd.h</label>
      </node>
      <node id="1811">
        <label>vector</label>
      </node>
      <node id="1804">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/cond_var_demo.cpp</label>
        <link refid="cond_var_demo.cpp"/>
        <childnode refid="1805" relation="include">
        </childnode>
        <childnode refid="1806" relation="include">
        </childnode>
        <childnode refid="1807" relation="include">
        </childnode>
        <childnode refid="1808" relation="include">
        </childnode>
        <childnode refid="1809" relation="include">
        </childnode>
        <childnode refid="1810" relation="include">
        </childnode>
        <childnode refid="1811" relation="include">
        </childnode>
      </node>
      <node id="1808">
        <label>iostream</label>
      </node>
      <node id="1809">
        <label>mutex</label>
      </node>
      <node id="1810">
        <label>thread</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_config" prot="public">Config</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="cond__var__demo_8cpp_1a29b4a301f6a323f1eb8cbb0de3c9218b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* update_vector_async</definition>
        <argsstring>(void *config_)</argsstring>
        <name>update_vector_async</name>
        <param>
          <type>void *</type>
          <declname>config_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/cond_var_demo.cpp" line="20" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/cond_var_demo.cpp" bodystart="20" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="cond__var__demo_8cpp_1ab1a8566f9515d591ff504e9bc81668b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* update_vector</definition>
        <argsstring>(void *config_)</argsstring>
        <name>update_vector</name>
        <param>
          <type>void *</type>
          <declname>config_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/cond_var_demo.cpp" line="59" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/cond_var_demo.cpp" bodystart="59" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="cond__var__demo_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/cond_var_demo.cpp" line="98" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/cond_var_demo.cpp" bodystart="98" bodyend="141"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;condition_variable&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_config" kindref="compound">Config</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>*<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic&lt;bool&gt;<sp/>*<ref refid="class_config_1a32ce04a94d39445c2c35dc28e03006ef" kindref="member">running</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_config_1a0ed2027733c661de1fae2dbe70146ab4" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_config_1a05d75fea9600b821909ef25e947b3167" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::condition_variable<sp/>*<ref refid="class_config_1aa701cf3ea7f432c2879698446754d320" kindref="member">condition</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mutex<sp/>*<ref refid="class_config_1abacf2bdd32d425c995c2ba5b16a896bd" kindref="member">mutex</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cond__var__demo_8cpp_1a29b4a301f6a323f1eb8cbb0de3c9218b" kindref="member">update_vector_async</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*config_)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_config" kindref="compound">Config</ref><sp/>*config<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_config" kindref="compound">Config</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(config_);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*config-&gt;<ref refid="class_config_1a32ce04a94d39445c2c35dc28e03006ef" kindref="member">running</ref>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="class_config_1abacf2bdd32d425c995c2ba5b16a896bd" kindref="member">mutex</ref>-&gt;lock();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>config-&gt;<ref refid="class_config_1a05d75fea9600b821909ef25e947b3167" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>config-&gt;<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref>-&gt;size();<sp/>i++)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*config-&gt;<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref>)[i]<sp/>=<sp/>config-&gt;<ref refid="class_config_1a0ed2027733c661de1fae2dbe70146ab4" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(500);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>config-&gt;<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref>-&gt;size();<sp/>i++)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*config-&gt;<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref>)[i]<sp/>!=<sp/>config-&gt;<ref refid="class_config_1a0ed2027733c661de1fae2dbe70146ab4" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;---<sp/>damn,<sp/>the<sp/>vector<sp/>was<sp/>not<sp/>locked<sp/>!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*config-&gt;<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref>)[i];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="class_config_1abacf2bdd32d425c995c2ba5b16a896bd" kindref="member">mutex</ref>-&gt;unlock();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(10);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cond__var__demo_8cpp_1ab1a8566f9515d591ff504e9bc81668b6" kindref="member">update_vector</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*config_)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_config" kindref="compound">Config</ref><sp/>*config<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_config" kindref="compound">Config</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(config_);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*config-&gt;<ref refid="class_config_1a32ce04a94d39445c2c35dc28e03006ef" kindref="member">running</ref>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(*config-&gt;<ref refid="class_config_1abacf2bdd32d425c995c2ba5b16a896bd" kindref="member">mutex</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="class_config_1aa701cf3ea7f432c2879698446754d320" kindref="member">condition</ref>-&gt;wait(lock);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>config-&gt;<ref refid="class_config_1a05d75fea9600b821909ef25e947b3167" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>config-&gt;<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref>-&gt;size();<sp/>i++)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*config-&gt;<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref>)[i]<sp/>=<sp/>config-&gt;<ref refid="class_config_1a0ed2027733c661de1fae2dbe70146ab4" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(500);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>config-&gt;<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref>-&gt;size();<sp/>i++)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*config-&gt;<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref>)[i]<sp/>!=<sp/>config-&gt;<ref refid="class_config_1a0ed2027733c661de1fae2dbe70146ab4" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n---<sp/>damn,<sp/>the<sp/>vector<sp/>was<sp/>not<sp/>locked<sp/>!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(*config-&gt;<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref>)[i];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="class_config_1aa701cf3ea7f432c2879698446754d320" kindref="member">condition</ref>-&gt;notify_one();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cond__var__demo_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>v(1000000);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic&lt;bool&gt;<sp/><ref refid="class_config_1a32ce04a94d39445c2c35dc28e03006ef" kindref="member">running</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>std::condition_variable<sp/><ref refid="class_config_1aa701cf3ea7f432c2879698446754d320" kindref="member">condition</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mutex<sp/><ref refid="class_config_1abacf2bdd32d425c995c2ba5b16a896bd" kindref="member">mutex</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_config" kindref="compound">Config</ref><sp/>config1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>config1.<ref refid="class_config_1a0ed2027733c661de1fae2dbe70146ab4" kindref="member">value</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>config1.<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref><sp/>=<sp/>&amp;v;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>config1.<ref refid="class_config_1a32ce04a94d39445c2c35dc28e03006ef" kindref="member">running</ref><sp/>=<sp/>&amp;<ref refid="class_config_1a32ce04a94d39445c2c35dc28e03006ef" kindref="member">running</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>config1.<ref refid="class_config_1abacf2bdd32d425c995c2ba5b16a896bd" kindref="member">mutex</ref><sp/>=<sp/>&amp;<ref refid="class_config_1abacf2bdd32d425c995c2ba5b16a896bd" kindref="member">mutex</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>config1.<ref refid="class_config_1a05d75fea9600b821909ef25e947b3167" kindref="member">message</ref><sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;ping&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>config1.<ref refid="class_config_1aa701cf3ea7f432c2879698446754d320" kindref="member">condition</ref><sp/>=<sp/>&amp;<ref refid="class_config_1aa701cf3ea7f432c2879698446754d320" kindref="member">condition</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::thread<sp/>thread1(<ref refid="cond__var__demo_8cpp_1ab1a8566f9515d591ff504e9bc81668b6" kindref="member">update_vector</ref>,<sp/>&amp;config1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_config" kindref="compound">Config</ref><sp/>config2;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>config2.<ref refid="class_config_1a0ed2027733c661de1fae2dbe70146ab4" kindref="member">value</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>config2.<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref><sp/>=<sp/>&amp;v;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>config2.<ref refid="class_config_1a32ce04a94d39445c2c35dc28e03006ef" kindref="member">running</ref><sp/>=<sp/>&amp;<ref refid="class_config_1a32ce04a94d39445c2c35dc28e03006ef" kindref="member">running</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>config2.<ref refid="class_config_1abacf2bdd32d425c995c2ba5b16a896bd" kindref="member">mutex</ref><sp/>=<sp/>&amp;<ref refid="class_config_1abacf2bdd32d425c995c2ba5b16a896bd" kindref="member">mutex</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>config2.<ref refid="class_config_1aa701cf3ea7f432c2879698446754d320" kindref="member">condition</ref><sp/>=<sp/>&amp;<ref refid="class_config_1aa701cf3ea7f432c2879698446754d320" kindref="member">condition</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>config2.<ref refid="class_config_1a05d75fea9600b821909ef25e947b3167" kindref="member">message</ref><sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;pong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>std::thread<sp/>thread2(<ref refid="cond__var__demo_8cpp_1ab1a8566f9515d591ff504e9bc81668b6" kindref="member">update_vector</ref>,<sp/>&amp;config2);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_config" kindref="compound">Config</ref><sp/>config3;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>config3.<ref refid="class_config_1a0ed2027733c661de1fae2dbe70146ab4" kindref="member">value</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>config3.<ref refid="class_config_1a090beefb5d61fbeb32fc116b32df30d7" kindref="member">vector</ref><sp/>=<sp/>&amp;v;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>config3.<ref refid="class_config_1a32ce04a94d39445c2c35dc28e03006ef" kindref="member">running</ref><sp/>=<sp/>&amp;<ref refid="class_config_1a32ce04a94d39445c2c35dc28e03006ef" kindref="member">running</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>config3.<ref refid="class_config_1abacf2bdd32d425c995c2ba5b16a896bd" kindref="member">mutex</ref><sp/>=<sp/>&amp;<ref refid="class_config_1abacf2bdd32d425c995c2ba5b16a896bd" kindref="member">mutex</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>config3.<ref refid="class_config_1a05d75fea9600b821909ef25e947b3167" kindref="member">message</ref><sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;pung&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::thread<sp/>thread3(<ref refid="cond__var__demo_8cpp_1a29b4a301f6a323f1eb8cbb0de3c9218b" kindref="member">update_vector_async</ref>,<sp/>&amp;config3);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(1000);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>condition.notify_one();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(10000000);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tSTOPPING!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>running<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>thread1.join();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>thread2.join();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>thread3.join();</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/cond_var_demo.cpp"/>
  </compounddef>
</doxygen>

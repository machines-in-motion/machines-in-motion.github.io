<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespaceshared__memory_1_1internal" kind="namespace" language="C++">
    <compoundname>shared_memory::internal</compoundname>
    <innerclass refid="classshared__memory_1_1internal_1_1array__members" prot="public">shared_memory::internal::array_members</innerclass>
    <innerclass refid="classshared__memory_1_1internal_1_1array__members_3_01_t_00_010_00_01typename_01std_1_1enable__i0b78bb453aa1c4894c6c714e5f291fcb" prot="public">shared_memory::internal::array_members&lt; T, 0, typename std::enable_if&lt; std::is_fundamental&lt; T &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="classshared__memory_1_1internal_1_1array__members_3_01_t_00_01_s_i_z_e_00_01typename_01std_1_1en156d1526c68ed70465b623c682765180" prot="public">shared_memory::internal::array_members&lt; T, SIZE, typename std::enable_if&lt; std::is_fundamental&lt; T &gt;::value &amp;&amp;SIZE!=0 &gt;::type &gt;</innerclass>
    <innerclass refid="classshared__memory_1_1internal_1_1_exchange__manager__memory" prot="public">shared_memory::internal::Exchange_manager_memory</innerclass>
    <innerclass refid="classshared__memory_1_1internal_1_1_serialized__read" prot="public">shared_memory::internal::Serialized_read</innerclass>
    <innerclass refid="classshared__memory_1_1internal_1_1_serialized__write" prot="public">shared_memory::internal::Serialized_write</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/internal/array_members.hpp" line="15" column="1"/>
  </compounddef>
</doxygen>

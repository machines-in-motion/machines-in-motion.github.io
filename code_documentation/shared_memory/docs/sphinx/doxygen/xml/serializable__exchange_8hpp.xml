<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="serializable__exchange_8hpp" kind="file" language="C++">
    <compoundname>serializable_exchange.hpp</compoundname>
    <includes local="no">cstring</includes>
    <includes local="no">deque</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">string</includes>
    <includes local="yes">shared_memory/serializable.hpp</includes>
    <includes refid="shared__memory_8hpp" local="yes">shared_memory/shared_memory.hpp</includes>
    <includes refid="serializable__exchange_8hxx" local="yes">serializable_exchange.hxx</includes>
    <incdepgraph>
      <node id="2900">
        <label>shared_memory/serializer.hxx</label>
        <link refid="serializer_8hxx"/>
      </node>
      <node id="2896">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="2895">
        <label>shared_memory/serializer.hpp</label>
        <link refid="serializer_8hpp"/>
        <childnode refid="2896" relation="include">
        </childnode>
        <childnode refid="2897" relation="include">
        </childnode>
        <childnode refid="2898" relation="include">
        </childnode>
        <childnode refid="2893" relation="include">
        </childnode>
        <childnode refid="2899" relation="include">
        </childnode>
        <childnode refid="2900" relation="include">
        </childnode>
      </node>
      <node id="2901">
        <label>shared_memory/shared_memory.hxx</label>
        <link refid="shared__memory_8hxx"/>
        <childnode refid="2880" relation="include">
        </childnode>
      </node>
      <node id="2877">
        <label>stdexcept</label>
      </node>
      <node id="2888">
        <label>boost/interprocess/containers/string.hpp</label>
      </node>
      <node id="2878">
        <label>string</label>
      </node>
      <node id="2880">
        <label>shared_memory/shared_memory.hpp</label>
        <link refid="shared__memory_8hpp"/>
        <childnode refid="2881" relation="include">
        </childnode>
        <childnode refid="2882" relation="include">
        </childnode>
        <childnode refid="2883" relation="include">
        </childnode>
        <childnode refid="2878" relation="include">
        </childnode>
        <childnode refid="2884" relation="include">
        </childnode>
        <childnode refid="2885" relation="include">
        </childnode>
        <childnode refid="2886" relation="include">
        </childnode>
        <childnode refid="2887" relation="include">
        </childnode>
        <childnode refid="2888" relation="include">
        </childnode>
        <childnode refid="2889" relation="include">
        </childnode>
        <childnode refid="2890" relation="include">
        </childnode>
        <childnode refid="2891" relation="include">
        </childnode>
        <childnode refid="2894" relation="include">
        </childnode>
        <childnode refid="2895" relation="include">
        </childnode>
        <childnode refid="2901" relation="include">
        </childnode>
      </node>
      <node id="2882">
        <label>map</label>
      </node>
      <node id="2892">
        <label>exception</label>
      </node>
      <node id="2894">
        <label>shared_memory/segment_info.hpp</label>
        <link refid="segment__info_8hpp"/>
        <childnode refid="2890" relation="include">
        </childnode>
        <childnode refid="2881" relation="include">
        </childnode>
      </node>
      <node id="2889">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="2884">
        <label>vector</label>
      </node>
      <node id="2879">
        <label>shared_memory/serializable.hpp</label>
      </node>
      <node id="2887">
        <label>boost/interprocess/containers/deque.hpp</label>
      </node>
      <node id="2899">
        <label>utility</label>
      </node>
      <node id="2893">
        <label>sstream</label>
      </node>
      <node id="2886">
        <label>boost/interprocess/allocators/allocator.hpp</label>
      </node>
      <node id="2881">
        <label>iostream</label>
      </node>
      <node id="2876">
        <label>deque</label>
      </node>
      <node id="2883">
        <label>mutex</label>
      </node>
      <node id="2885">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="2874">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/serializable_exchange.hpp</label>
        <link refid="serializable_exchange.hpp"/>
        <childnode refid="2875" relation="include">
        </childnode>
        <childnode refid="2876" relation="include">
        </childnode>
        <childnode refid="2877" relation="include">
        </childnode>
        <childnode refid="2878" relation="include">
        </childnode>
        <childnode refid="2879" relation="include">
        </childnode>
        <childnode refid="2880" relation="include">
        </childnode>
        <childnode refid="2902" relation="include">
        </childnode>
      </node>
      <node id="2897">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="2890">
        <label>boost/interprocess/managed_shared_memory.hpp</label>
      </node>
      <node id="2875">
        <label>cstring</label>
      </node>
      <node id="2898">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="2902">
        <label>serializable_exchange.hxx</label>
        <link refid="serializable__exchange_8hxx"/>
      </node>
      <node id="2891">
        <label>shared_memory/exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="2892" relation="include">
        </childnode>
        <childnode refid="2881" relation="include">
        </childnode>
        <childnode refid="2893" relation="include">
        </childnode>
        <childnode refid="2878" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classshared__memory_1_1_serializable__exchange" prot="public">shared_memory::Serializable_exchange</innerclass>
    <innernamespace refid="namespaceshared__memory">shared_memory</innernamespace>
    <briefdescription>
<para>Interface to a serializable object. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Vincent Berenz  License BSD-3-Clause </para></simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-05-22 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>SERIALIZABLE_EXCHANGE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERIALIZABLE_EXCHANGE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classshared__memory_1_1_serializable__exchange_1acb92a032cbc772e4d327d98208b214d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared_memory/serializable.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shared__memory_8hpp" kindref="compound">shared_memory/shared_memory.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceshared__memory" kindref="compound">shared_memory</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Serializable&gt;</highlight></codeline>
<codeline lineno="25" refid="classshared__memory_1_1_serializable__exchange_1a42a477866b9e8b79c6b801efe7bd0d9f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classshared__memory_1_1_serializable__exchange" kindref="compound">Serializable_exchange</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1_serializable__exchange_1acb92a032cbc772e4d327d98208b214d3" kindref="member">Serializable_exchange</ref>(std::string<sp/>segment_id,<sp/>std::string<sp/>object_id);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classshared__memory_1_1_serializable__exchange_1a29943c12f26bbd6e876b979d366fd110" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1_serializable__exchange_1a42a477866b9e8b79c6b801efe7bd0d9f" kindref="member">~Serializable_exchange</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_serializable" kindref="compound">Serializable</ref><sp/>&amp;serializable);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1_serializable__exchange_1a3b69842f01b73a15bfefed264b8e3dd3" kindref="member">read</ref>(<ref refid="class_serializable" kindref="compound">Serializable</ref><sp/>&amp;serializable);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36" refid="classshared__memory_1_1_serializable__exchange_1a495d9d0320ec199625deed0f1cd0ea20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classshared__memory_1_1_serializable__exchange_1a495d9d0320ec199625deed0f1cd0ea20" kindref="member">segment_id_</ref>;</highlight></codeline>
<codeline lineno="37" refid="classshared__memory_1_1_serializable__exchange_1a21968aa2fbfc11fa6ecc298320ebfb9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classshared__memory_1_1_serializable__exchange_1a21968aa2fbfc11fa6ecc298320ebfb9a" kindref="member">object_id_</ref>;</highlight></codeline>
<codeline lineno="38" refid="classshared__memory_1_1_serializable__exchange_1a3b69842f01b73a15bfefed264b8e3dd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="classshared__memory_1_1_serializable__exchange_1a1923d2803a05846f61ee4738dac10674" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serializable__exchange_8hxx" kindref="compound">serializable_exchange.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>shared_memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/serializable_exchange.hpp"/>
  </compounddef>
</doxygen>

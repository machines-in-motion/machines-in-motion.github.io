<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="exchange__manager__memory_8hpp" kind="file" language="C++">
    <compoundname>exchange_manager_memory.hpp</compoundname>
    <includes local="no">boost/interprocess/allocators/allocator.hpp</includes>
    <includes local="no">boost/interprocess/containers/string.hpp</includes>
    <includes local="no">boost/interprocess/managed_shared_memory.hpp</includes>
    <includes local="no">boost/lockfree/queue.hpp</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes refid="mutex_8hpp" local="yes">shared_memory/mutex.hpp</includes>
    <includes refid="serializer_8hpp" local="yes">shared_memory/serializer.hpp</includes>
    <includes refid="shared__memory_8hpp" local="yes">shared_memory/shared_memory.hpp</includes>
    <includes refid="exchange__manager__memory_8hxx" local="yes">exchange_manager_memory.hxx</includes>
    <includedby refid="exchange__manager__consumer_8hpp" local="yes">/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exchange_manager_consumer.hpp</includedby>
    <includedby refid="exchange__manager__producer_8hpp" local="yes">/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exchange_manager_producer.hpp</includedby>
    <incdepgraph>
      <node id="2690">
        <label>shared_memory/serializer.hxx</label>
        <link refid="serializer_8hxx"/>
      </node>
      <node id="2686">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="2685">
        <label>shared_memory/serializer.hpp</label>
        <link refid="serializer_8hpp"/>
        <childnode refid="2686" relation="include">
        </childnode>
        <childnode refid="2687" relation="include">
        </childnode>
        <childnode refid="2688" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
        <childnode refid="2689" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
      </node>
      <node id="2691">
        <label>shared_memory/shared_memory.hxx</label>
        <link refid="shared__memory_8hxx"/>
        <childnode refid="2674" relation="include">
        </childnode>
      </node>
      <node id="2671">
        <label>shared_memory/mutex.hpp</label>
        <link refid="mutex_8hpp"/>
        <childnode refid="2672" relation="include">
        </childnode>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
      </node>
      <node id="2666">
        <label>boost/interprocess/containers/string.hpp</label>
      </node>
      <node id="2670">
        <label>string</label>
      </node>
      <node id="2674">
        <label>shared_memory/shared_memory.hpp</label>
        <link refid="shared__memory_8hpp"/>
        <childnode refid="2669" relation="include">
        </childnode>
        <childnode refid="2675" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2670" relation="include">
        </childnode>
        <childnode refid="2677" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2665" relation="include">
        </childnode>
        <childnode refid="2679" relation="include">
        </childnode>
        <childnode refid="2666" relation="include">
        </childnode>
        <childnode refid="2680" relation="include">
        </childnode>
        <childnode refid="2667" relation="include">
        </childnode>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2684" relation="include">
        </childnode>
        <childnode refid="2685" relation="include">
        </childnode>
        <childnode refid="2691" relation="include">
        </childnode>
      </node>
      <node id="2675">
        <label>map</label>
      </node>
      <node id="2682">
        <label>exception</label>
      </node>
      <node id="2684">
        <label>shared_memory/segment_info.hpp</label>
        <link refid="segment__info_8hpp"/>
        <childnode refid="2667" relation="include">
        </childnode>
        <childnode refid="2669" relation="include">
        </childnode>
      </node>
      <node id="2680">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="2672">
        <label>boost/interprocess/sync/named_mutex.hpp</label>
      </node>
      <node id="2692">
        <label>exchange_manager_memory.hxx</label>
        <link refid="exchange__manager__memory_8hxx"/>
      </node>
      <node id="2677">
        <label>vector</label>
      </node>
      <node id="2679">
        <label>boost/interprocess/containers/deque.hpp</label>
      </node>
      <node id="2689">
        <label>utility</label>
      </node>
      <node id="2683">
        <label>sstream</label>
      </node>
      <node id="2664">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/internal/exchange_manager_memory.hpp</label>
        <link refid="exchange_manager_memory.hpp"/>
        <childnode refid="2665" relation="include">
        </childnode>
        <childnode refid="2666" relation="include">
        </childnode>
        <childnode refid="2667" relation="include">
        </childnode>
        <childnode refid="2668" relation="include">
        </childnode>
        <childnode refid="2669" relation="include">
        </childnode>
        <childnode refid="2670" relation="include">
        </childnode>
        <childnode refid="2671" relation="include">
        </childnode>
        <childnode refid="2685" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2692" relation="include">
        </childnode>
      </node>
      <node id="2665">
        <label>boost/interprocess/allocators/allocator.hpp</label>
      </node>
      <node id="2668">
        <label>boost/lockfree/queue.hpp</label>
      </node>
      <node id="2669">
        <label>iostream</label>
      </node>
      <node id="2676">
        <label>mutex</label>
      </node>
      <node id="2678">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="2687">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="2667">
        <label>boost/interprocess/managed_shared_memory.hpp</label>
      </node>
      <node id="2688">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="2673">
        <label>memory</label>
      </node>
      <node id="2681">
        <label>shared_memory/exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="2682" relation="include">
        </childnode>
        <childnode refid="2669" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
        <childnode refid="2670" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2695">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/exchange_manager_consumer.cpp</label>
        <link refid="exchange__manager__consumer_8cpp"/>
      </node>
      <node id="2694">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exchange_manager_consumer.hpp</label>
        <link refid="exchange__manager__consumer_8hpp"/>
        <childnode refid="2695" relation="include">
        </childnode>
        <childnode refid="2696" relation="include">
        </childnode>
        <childnode refid="2697" relation="include">
        </childnode>
      </node>
      <node id="2696">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/exchange_manager_demo.cpp</label>
        <link refid="exchange__manager__demo_8cpp"/>
      </node>
      <node id="2699">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/exchange_manager_clean.cpp</label>
        <link refid="exchange__manager__clean_8cpp"/>
      </node>
      <node id="2697">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/exchange_manager_producer.cpp</label>
        <link refid="exchange__manager__producer_8cpp"/>
      </node>
      <node id="2693">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/internal/exchange_manager_memory.hpp</label>
        <link refid="exchange_manager_memory.hpp"/>
        <childnode refid="2694" relation="include">
        </childnode>
        <childnode refid="2698" relation="include">
        </childnode>
      </node>
      <node id="2698">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exchange_manager_producer.hpp</label>
        <link refid="exchange__manager__producer_8hpp"/>
        <childnode refid="2699" relation="include">
        </childnode>
        <childnode refid="2696" relation="include">
        </childnode>
        <childnode refid="2697" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classshared__memory_1_1internal_1_1_serialized__read" prot="public">shared_memory::internal::Serialized_read</innerclass>
    <innerclass refid="classshared__memory_1_1internal_1_1_serialized__write" prot="public">shared_memory::internal::Serialized_write</innerclass>
    <innerclass refid="classshared__memory_1_1internal_1_1_exchange__manager__memory" prot="public">shared_memory::internal::Exchange_manager_memory</innerclass>
    <innernamespace refid="namespaceshared__memory">shared_memory</innernamespace>
    <innernamespace refid="namespaceshared__memory_1_1internal">shared_memory::internal</innernamespace>
    <briefdescription>
<para>Interprocess exchange of serialized items. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Vincent Berenz (<ulink url="mailto:vberenz@tuebingen.mpg.de">vberenz@tuebingen.mpg.de</ulink>)  License BSD-3-Clause </para></simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-06-07 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classshared__memory_1_1internal_1_1_serialized__read_1ac3e7ef2e90b8ba77562226f3dbcf5dc0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/allocators/allocator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/containers/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/managed_shared_memory.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/lockfree/queue.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classshared__memory_1_1internal_1_1_serialized__read_1ab13f4c5e450bc206ca5f30baa43ed5f6" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mutex_8hpp" kindref="compound">shared_memory/mutex.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serializer_8hpp" kindref="compound">shared_memory/serializer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shared__memory_8hpp" kindref="compound">shared_memory/shared_memory.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">bip<sp/>=<sp/>boost::interprocess;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classshared__memory_1_1internal_1_1_serialized__read_1add7a39a632e0f6868e60109ad58fa3a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceshared__memory" kindref="compound">shared_memory</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Serializable&gt;</highlight></codeline>
<codeline lineno="32" refid="classshared__memory_1_1internal_1_1_serialized__read" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classshared__memory_1_1internal_1_1_serialized__read" kindref="compound">Serialized_read</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__read_1a5f43f35cf34aa27081086c8dafe37f52" kindref="member">Serialized_read</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__read_1ac3e7ef2e90b8ba77562226f3dbcf5dc0" kindref="member">~Serialized_read</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__read_1add7a39a632e0f6868e60109ad58fa3a2" kindref="member">read</ref>(<ref refid="class_serializable" kindref="compound">Serializable</ref><sp/>&amp;serializable);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__read_1a7267b8b68f925787f37fa9c0e369a93b" kindref="member">nb_char_read</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__read_1a664a3d89efb0f985578b3fb4835f97d4" kindref="member">reset_nb_char_read</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43" refid="classshared__memory_1_1internal_1_1_serialized__read_1a2bf4782bcdbbf8a415309b82e9b333c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::deque&lt;char&gt;<sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__read_1a2bf4782bcdbbf8a415309b82e9b333c6" kindref="member">buffer_</ref>;</highlight></codeline>
<codeline lineno="44" refid="classshared__memory_1_1internal_1_1_serialized__read_1acb1db67ffcae257bb009c16726abcbb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__read_1acb1db67ffcae257bb009c16726abcbb7" kindref="member">size_</ref>;</highlight></codeline>
<codeline lineno="45" refid="classshared__memory_1_1internal_1_1_serialized__read_1ae8f179745a0e9c95668c08a092d291ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__read_1ae8f179745a0e9c95668c08a092d291ee" kindref="member">nb_char_read_</ref>;</highlight></codeline>
<codeline lineno="46" refid="classshared__memory_1_1internal_1_1_serialized__read_1a540b0e3a8a12d0167b828010fd7fde3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__read_1a540b0e3a8a12d0167b828010fd7fde3e" kindref="member">serializable_size_</ref>;</highlight></codeline>
<codeline lineno="47" refid="classshared__memory_1_1internal_1_1_serialized__read_1ad267ed8416105a705c1afabd16cb941b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classshared__memory_1_1internal_1_1_serialized__read_1ad267ed8416105a705c1afabd16cb941b" kindref="member">values_</ref>;</highlight></codeline>
<codeline lineno="48" refid="classshared__memory_1_1internal_1_1_serialized__read_1a507ecb659494a31ae4d4744967bcf78d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1_serializer" kindref="compound">Serializer&lt;Serializable&gt;</ref><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__read_1a507ecb659494a31ae4d4744967bcf78d" kindref="member">serializer_</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Serializable&gt;</highlight></codeline>
<codeline lineno="52" refid="classshared__memory_1_1internal_1_1_serialized__read_1a7267b8b68f925787f37fa9c0e369a93b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classshared__memory_1_1internal_1_1_serialized__write" kindref="compound">Serialized_write</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__write" kindref="compound">Serialized_write</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classshared__memory_1_1internal_1_1_serialized__write" kindref="compound">Serialized_write</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>empty();</highlight></codeline>
<codeline lineno="58" refid="classshared__memory_1_1internal_1_1_serialized__write_1a81ac829258145a86e823532a0b2617d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>front();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pop();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_serializable" kindref="compound">Serializable</ref><sp/>&amp;serializable,<sp/>std::size_t<sp/>expected_size);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_char_written();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_nb_char_written();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65" refid="classshared__memory_1_1internal_1_1_serialized__write_1a09aebade690ec6a326a401ab2d2f4f53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::deque&lt;char&gt;<sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__write_1a09aebade690ec6a326a401ab2d2f4f53" kindref="member">buffer_</ref>;</highlight></codeline>
<codeline lineno="66" refid="classshared__memory_1_1internal_1_1_serialized__write_1a975427a803c55aa69b217f7d6e499705" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classshared__memory_1_1internal_1_1_serialized__read_1ad267ed8416105a705c1afabd16cb941b" kindref="member">values_</ref>;</highlight></codeline>
<codeline lineno="67" refid="classshared__memory_1_1internal_1_1_serialized__write_1a7a207fb34addd19507a6b6e9c614115c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__write_1a7a207fb34addd19507a6b6e9c614115c" kindref="member">nb_char_written_</ref>;</highlight></codeline>
<codeline lineno="68" refid="classshared__memory_1_1internal_1_1_serialized__write_1a273f48479dce32197d27efa2cbe637ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__write_1a273f48479dce32197d27efa2cbe637ef" kindref="member">serializable_size_</ref>;</highlight></codeline>
<codeline lineno="69" refid="classshared__memory_1_1internal_1_1_serialized__write_1a57ab5f2496bfff9ac5c5a6246aab7e9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1_serializer" kindref="compound">Serializer&lt;Serializable&gt;</ref><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__write_1a57ab5f2496bfff9ac5c5a6246aab7e9c" kindref="member">serializer_</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classshared__memory_1_1internal_1_1_serialized__write_1a830ed6c58591e8284ecb1b8b2e936e03" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>Used<sp/>internally<sp/>by<sp/>Exchange_manager_consumer</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>and<sp/>Exchange_manager_producer.<sp/>Do<sp/>not<sp/>use<sp/>directly.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Serializable,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QUEUE_SIZE&gt;</highlight></codeline>
<codeline lineno="76" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory" kindref="compound">Exchange_manager_memory</ref></highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78" refid="classshared__memory_1_1internal_1_1_serialized__write_1a58b23378ce903e1aadf7c5e497022e5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::lockfree::queue&lt;char,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::lockfree::fixed_sized&lt;true&gt;,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::lockfree::capacity&lt;QUEUE_SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="81" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1acd7500dc11fa85fdff1c62b3bfec9bb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1acd7500dc11fa85fdff1c62b3bfec9bb5" kindref="member">producer_queue</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::lockfree::queue&lt;int,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::lockfree::fixed_sized&lt;true&gt;,</highlight></codeline>
<codeline lineno="84" refid="classshared__memory_1_1internal_1_1_serialized__write_1a1166684494bff2d969ca16ccbeee486a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::lockfree::capacity&lt;QUEUE_SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="85" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1acfdce096249f1dd920c42d65176ba587" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1acfdce096249f1dd920c42d65176ba587" kindref="member">consumer_queue</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a111ddeef03bfb038bcbc170c28878c08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a111ddeef03bfb038bcbc170c28878c08" kindref="member">Status</ref></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a111ddeef03bfb038bcbc170c28878c08ac60720cbbc2fc2421b210ed6da63eb4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a111ddeef03bfb038bcbc170c28878c08ac60720cbbc2fc2421b210ed6da63eb4a" kindref="member">RESET</ref>,</highlight></codeline>
<codeline lineno="91" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a111ddeef03bfb038bcbc170c28878c08a437ddb419cf9c1a6399e3a98eae3db51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a111ddeef03bfb038bcbc170c28878c08a437ddb419cf9c1a6399e3a98eae3db51" kindref="member">WAITING</ref>,</highlight></codeline>
<codeline lineno="92" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a111ddeef03bfb038bcbc170c28878c08ad7cbdf97bec755c256d0777f729fa0b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="benchmark__common_8hh_1a383e703fc3e9dd425f075cf463ee4c5b" kindref="member">RUNNING</ref></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory" kindref="compound">Exchange_manager_memory</ref>(std::string<sp/>segment_id,<sp/>std::string<sp/>object_id);</highlight></codeline>
<codeline lineno="97" refid="classshared__memory_1_1internal_1_1_serialized__write_1adf6c52536a53dbc1181eab1409a3641b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory" kindref="compound">Exchange_manager_memory</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>read_serialized(<ref refid="class_serializable" kindref="compound">Serializable</ref><sp/>&amp;serializable);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>write_serialized(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_serializable" kindref="compound">Serializable</ref><sp/>&amp;serializable);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_serialized_id(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear();</highlight></codeline>
<codeline lineno="103" refid="classshared__memory_1_1internal_1_1_serialized__write_1a32f8f7e6faabf358283736f51e40b33c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_consumed_ids(std::deque&lt;int&gt;<sp/>&amp;get_ids);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_status(Status<sp/>status);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_status(Status<sp/>&amp;status);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>purge_feedbacks();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clean();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lock();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unlock();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>consumer_queue_empty()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>producer_queue_empty()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>weird_purge();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a4bb976aa1b16314bf4181035bb746869" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>monitoring<sp/>the<sp/>number<sp/>of<sp/>characters<sp/>written/read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_char_count();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_char_written();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__read_1a7267b8b68f925787f37fa9c0e369a93b" kindref="member">nb_char_read</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a954428f2d2e9f7b29cd4201bfb7fa51c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a954428f2d2e9f7b29cd4201bfb7fa51c" kindref="member">nb_char_read_</ref>;</highlight></codeline>
<codeline lineno="129" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a5669c5ec75442d54fd5e004a464233da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a5669c5ec75442d54fd5e004a464233da" kindref="member">nb_char_written_</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clean_mutex(std::string<sp/>segment_id);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clean_memory(std::string<sp/>segment_id);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="136" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a8d9578755fec571f772caec5908fdd38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a8d9578755fec571f772caec5908fdd38" kindref="member">segment_id_</ref>;</highlight></codeline>
<codeline lineno="137" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1ab8c8000af66737cdc65a4a5b6c62cbd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1ab8c8000af66737cdc65a4a5b6c62cbd8" kindref="member">object_id_producer_</ref>;</highlight></codeline>
<codeline lineno="138" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1ae438583144066ca87b4e1d12065b6e83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1ae438583144066ca87b4e1d12065b6e83" kindref="member">object_id_consumer_</ref>;</highlight></codeline>
<codeline lineno="139" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1aa01b4baeff59e90eb679b1fbf3099a02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1aa01b4baeff59e90eb679b1fbf3099a02" kindref="member">object_id_status_</ref>;</highlight></codeline>
<codeline lineno="140" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a91205f52e14b9e843f3ba07b9c3d4d14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bip::managed_shared_memory<sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a91205f52e14b9e843f3ba07b9c3d4d14" kindref="member">segment_</ref>;</highlight></codeline>
<codeline lineno="141" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1ab333730dadc8519f23608e77c0974928" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1acd7500dc11fa85fdff1c62b3bfec9bb5" kindref="member">producer_queue</ref><sp/>*<ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1ab333730dadc8519f23608e77c0974928" kindref="member">produced_</ref>;</highlight></codeline>
<codeline lineno="142" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a2f3336a1a2a55972e4b1c61a81449fcb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::deque&lt;int&gt;<sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a2f3336a1a2a55972e4b1c61a81449fcb" kindref="member">consumed_buffer_</ref>;</highlight></codeline>
<codeline lineno="143" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a859c731d30b829de85eb92ac9866ae36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1acfdce096249f1dd920c42d65176ba587" kindref="member">consumer_queue</ref><sp/>*<ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a859c731d30b829de85eb92ac9866ae36" kindref="member">consumed_</ref>;</highlight></codeline>
<codeline lineno="144" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a32794be03e7f992a26fcad1f550a5b33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a32794be03e7f992a26fcad1f550a5b33" kindref="member">values_</ref>;</highlight></codeline>
<codeline lineno="145" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a44d72a699c2a76b2ef127f02ee37d26b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1_mutex" kindref="compound">shared_memory::Mutex</ref><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a44d72a699c2a76b2ef127f02ee37d26b" kindref="member">locker_</ref>;</highlight></codeline>
<codeline lineno="146" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a3a5127e519eec82ec2a4181eee4ddab5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__read" kindref="compound">Serialized_read&lt;Serializable&gt;</ref><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a3a5127e519eec82ec2a4181eee4ddab5" kindref="member">serialized_read_</ref>;</highlight></codeline>
<codeline lineno="147" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a1999cdf0f4f438e448bec0ef86a153b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1internal_1_1_serialized__write" kindref="compound">Serialized_write&lt;Serializable&gt;</ref><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a1999cdf0f4f438e448bec0ef86a153b3" kindref="member">serialized_write_</ref>;</highlight></codeline>
<codeline lineno="148" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1af2d9740e5a2c4498a3d234175c515f26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1af2d9740e5a2c4498a3d234175c515f26" kindref="member">serializable_size_</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classshared__memory_1_1internal_1_1_exchange__manager__memory_1a8d1197e044147a47f162c28e82ebf18a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exchange__manager__memory_8hxx" kindref="compound">exchange_manager_memory.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>shared_memory</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/internal/exchange_manager_memory.hpp"/>
  </compounddef>
</doxygen>

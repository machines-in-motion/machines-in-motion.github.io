<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classshared__memory_1_1internal_1_1array__members_3_01_t_00_010_00_01typename_01std_1_1enable__i0b78bb453aa1c4894c6c714e5f291fcb" kind="class" language="C++" prot="public">
    <compoundname>shared_memory::internal::array_members&lt; T, 0, typename std::enable_if&lt; std::is_fundamental&lt; T &gt;::value &gt;::type &gt;</compoundname>
    <includes refid="array__members_8hpp" local="no">array_members.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classshared__memory_1_1internal_1_1array__members_3_01_t_00_010_00_01typename_01std_1_1enable__i0b78bb453aa1c4894c6c714e5f291fcb_1af2e2d48d60bf0b97ad542183007fc4e9" prot="protected" static="no" mutable="no">
        <type>T *</type>
        <definition>T* shared_memory::internal::array_members&lt; T, 0, typename std::enable_if&lt; std::is_fundamental&lt; T &gt;::value &gt;::type &gt;::shared_</definition>
        <argsstring></argsstring>
        <name>shared_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/internal/array_members.hpp" line="38" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/internal/array_members.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshared__memory_1_1internal_1_1array__members_3_01_t_00_010_00_01typename_01std_1_1enable__i0b78bb453aa1c4894c6c714e5f291fcb_1a2c26512ea8a02432f5f157e8c4ef7fa9" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceshared__memory_1a391f1de569d6b76979d6ff4591513bfd" kindref="member">FUNDAMENTAL</ref></type>
        <definition>FUNDAMENTAL shared_memory::internal::array_members&lt; T, 0, typename std::enable_if&lt; std::is_fundamental&lt; T &gt;::value &gt;::type &gt;::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/internal/array_members.hpp" line="39" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/internal/array_members.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/internal/array_members.hpp" line="36" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/internal/array_members.hpp" bodystart="32" bodyend="40"/>
    <listofallmembers>
      <member refid="classshared__memory_1_1internal_1_1array__members_3_01_t_00_010_00_01typename_01std_1_1enable__i0b78bb453aa1c4894c6c714e5f291fcb_1af2e2d48d60bf0b97ad542183007fc4e9" prot="protected" virt="non-virtual"><scope>shared_memory::internal::array_members&lt; T, 0, typename std::enable_if&lt; std::is_fundamental&lt; T &gt;::value &gt;::type &gt;</scope><name>shared_</name></member>
      <member refid="classshared__memory_1_1internal_1_1array__members_3_01_t_00_010_00_01typename_01std_1_1enable__i0b78bb453aa1c4894c6c714e5f291fcb_1a2c26512ea8a02432f5f157e8c4ef7fa9" prot="protected" virt="non-virtual"><scope>shared_memory::internal::array_members&lt; T, 0, typename std::enable_if&lt; std::is_fundamental&lt; T &gt;::value &gt;::type &gt;</scope><name>type_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

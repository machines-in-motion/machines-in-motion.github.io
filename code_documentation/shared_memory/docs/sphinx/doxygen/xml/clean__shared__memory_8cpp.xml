<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="clean__shared__memory_8cpp" kind="file" language="C++">
    <compoundname>clean_shared_memory.cpp</compoundname>
    <includes local="no">boost/interprocess/managed_shared_memory.hpp</includes>
    <includes local="no">boost/interprocess/sync/named_mutex.hpp</includes>
    <includes refid="benchmark__common_8hh" local="yes">shared_memory/benchmarks/benchmark_common.hh</includes>
    <incdepgraph>
      <node id="1681">
        <label>cmath</label>
      </node>
      <node id="1676">
        <label>boost/interprocess/sync/named_mutex.hpp</label>
      </node>
      <node id="1674">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/benchmarks/clean_shared_memory.cpp</label>
        <link refid="clean_shared_memory.cpp"/>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1677" relation="include">
        </childnode>
      </node>
      <node id="1679">
        <label>unistd.h</label>
      </node>
      <node id="1683">
        <label>vector</label>
      </node>
      <node id="1678">
        <label>signal.h</label>
      </node>
      <node id="1682">
        <label>iostream</label>
      </node>
      <node id="1680">
        <label>chrono</label>
      </node>
      <node id="1675">
        <label>boost/interprocess/managed_shared_memory.hpp</label>
      </node>
      <node id="1677">
        <label>shared_memory/benchmarks/benchmark_common.hh</label>
        <link refid="benchmark__common_8hh"/>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1682" relation="include">
        </childnode>
        <childnode refid="1683" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="clean__shared__memory_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/benchmarks/clean_shared_memory.cpp" line="16" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/benchmarks/clean_shared_memory.cpp" bodystart="16" bodyend="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Clean the shared memory of the benchmark, the unnittests, ... </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Vincent Berenz  License BSD-3-Clause </para></simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-05-22 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/managed_shared_memory.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/sync/named_mutex.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="benchmark__common_8hh" kindref="compound">shared_memory/benchmarks/benchmark_common.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="clean__shared__memory_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::interprocess::named_mutex::remove(<ref refid="benchmark__common_8hh_1a2eab504a26ce27f25dc75a77486f0291" kindref="member">SHM_NAME</ref>.c_str());</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::interprocess::shared_memory_object::remove(<ref refid="benchmark__common_8hh_1a7b0c439ad35b06a4ef0180f55a6d005a" kindref="member">SHM_OBJECT_NAME</ref>.c_str());</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::interprocess::shared_memory_object::remove(</highlight><highlight class="stringliteral">&quot;main_memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/benchmarks/clean_shared_memory.cpp"/>
  </compounddef>
</doxygen>

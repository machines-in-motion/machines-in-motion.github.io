<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="locked__cond__var__pong_8cpp" kind="file" language="C++">
    <compoundname>locked_cond_var_pong.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">thread</includes>
    <includes refid="locked__condition__variable_8hpp" local="yes">shared_memory/locked_condition_variable.hpp</includes>
    <includes refid="shared__memory_8hpp" local="yes">shared_memory/shared_memory.hpp</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">unistd.h</includes>
    <incdepgraph>
      <node id="2298">
        <label>shared_memory/serializer.hxx</label>
        <link refid="serializer_8hxx"/>
      </node>
      <node id="2294">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="2293">
        <label>shared_memory/serializer.hpp</label>
        <link refid="serializer_8hpp"/>
        <childnode refid="2294" relation="include">
        </childnode>
        <childnode refid="2295" relation="include">
        </childnode>
        <childnode refid="2296" relation="include">
        </childnode>
        <childnode refid="2291" relation="include">
        </childnode>
        <childnode refid="2297" relation="include">
        </childnode>
        <childnode refid="2298" relation="include">
        </childnode>
      </node>
      <node id="2299">
        <label>shared_memory/shared_memory.hxx</label>
        <link refid="shared__memory_8hxx"/>
        <childnode refid="2278" relation="include">
        </childnode>
      </node>
      <node id="2301">
        <label>stdlib.h</label>
      </node>
      <node id="2272">
        <label>shared_memory/locked_condition_variable.hpp</label>
        <link refid="locked__condition__variable_8hpp"/>
        <childnode refid="2273" relation="include">
        </childnode>
        <childnode refid="2274" relation="include">
        </childnode>
        <childnode refid="2275" relation="include">
        </childnode>
        <childnode refid="2276" relation="include">
        </childnode>
        <childnode refid="2277" relation="include">
        </childnode>
        <childnode refid="2278" relation="include">
        </childnode>
      </node>
      <node id="2276">
        <label>boost/interprocess/sync/scoped_lock.hpp</label>
      </node>
      <node id="2277">
        <label>shared_memory/mutex.hpp</label>
        <link refid="mutex_8hpp"/>
        <childnode refid="2275" relation="include">
        </childnode>
        <childnode refid="2273" relation="include">
        </childnode>
        <childnode refid="2278" relation="include">
        </childnode>
      </node>
      <node id="2286">
        <label>boost/interprocess/containers/string.hpp</label>
      </node>
      <node id="2281">
        <label>string</label>
      </node>
      <node id="2278">
        <label>shared_memory/shared_memory.hpp</label>
        <link refid="shared__memory_8hpp"/>
        <childnode refid="2270" relation="include">
        </childnode>
        <childnode refid="2279" relation="include">
        </childnode>
        <childnode refid="2280" relation="include">
        </childnode>
        <childnode refid="2281" relation="include">
        </childnode>
        <childnode refid="2282" relation="include">
        </childnode>
        <childnode refid="2283" relation="include">
        </childnode>
        <childnode refid="2284" relation="include">
        </childnode>
        <childnode refid="2285" relation="include">
        </childnode>
        <childnode refid="2286" relation="include">
        </childnode>
        <childnode refid="2287" relation="include">
        </childnode>
        <childnode refid="2288" relation="include">
        </childnode>
        <childnode refid="2289" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
        <childnode refid="2293" relation="include">
        </childnode>
        <childnode refid="2299" relation="include">
        </childnode>
      </node>
      <node id="2279">
        <label>map</label>
      </node>
      <node id="2290">
        <label>exception</label>
      </node>
      <node id="2274">
        <label>boost/interprocess/sync/named_condition.hpp</label>
      </node>
      <node id="2292">
        <label>shared_memory/segment_info.hpp</label>
        <link refid="segment__info_8hpp"/>
        <childnode refid="2288" relation="include">
        </childnode>
        <childnode refid="2270" relation="include">
        </childnode>
      </node>
      <node id="2287">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="2275">
        <label>boost/interprocess/sync/named_mutex.hpp</label>
      </node>
      <node id="2303">
        <label>unistd.h</label>
      </node>
      <node id="2282">
        <label>vector</label>
      </node>
      <node id="2300">
        <label>signal.h</label>
      </node>
      <node id="2285">
        <label>boost/interprocess/containers/deque.hpp</label>
      </node>
      <node id="2297">
        <label>utility</label>
      </node>
      <node id="2291">
        <label>sstream</label>
      </node>
      <node id="2269">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/locked_cond_var_pong.cpp</label>
        <link refid="locked_cond_var_pong.cpp"/>
        <childnode refid="2270" relation="include">
        </childnode>
        <childnode refid="2271" relation="include">
        </childnode>
        <childnode refid="2272" relation="include">
        </childnode>
        <childnode refid="2278" relation="include">
        </childnode>
        <childnode refid="2300" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2302" relation="include">
        </childnode>
        <childnode refid="2303" relation="include">
        </childnode>
      </node>
      <node id="2302">
        <label>time.h</label>
      </node>
      <node id="2284">
        <label>boost/interprocess/allocators/allocator.hpp</label>
      </node>
      <node id="2270">
        <label>iostream</label>
      </node>
      <node id="2280">
        <label>mutex</label>
      </node>
      <node id="2283">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="2271">
        <label>thread</label>
      </node>
      <node id="2295">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="2288">
        <label>boost/interprocess/managed_shared_memory.hpp</label>
      </node>
      <node id="2296">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="2273">
        <label>memory</label>
      </node>
      <node id="2289">
        <label>shared_memory/exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2270" relation="include">
        </childnode>
        <childnode refid="2291" relation="include">
        </childnode>
        <childnode refid="2281" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="locked__cond__var__pong_8cpp_1a383e703fc3e9dd425f075cf463ee4c5b" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool RUNNING</definition>
        <argsstring></argsstring>
        <name>RUNNING</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/locked_cond_var_pong.cpp" line="12" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/locked_cond_var_pong.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="locked__cond__var__pong_8cpp_1aba399b0a6a6e3bd37af95bd04e8def6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stop</definition>
        <argsstring>(int)</argsstring>
        <name>stop</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/locked_cond_var_pong.cpp" line="14" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/locked_cond_var_pong.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="locked__cond__var__pong_8cpp_1a61af3e60b94ae3e748f6fbac1e794af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/locked_cond_var_pong.cpp" line="19" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/locked_cond_var_pong.cpp" bodystart="19" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="locked__cond__var__pong_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/locked_cond_var_pong.cpp" line="48" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/locked_cond_var_pong.cpp" bodystart="48" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="locked__condition__variable_8hpp" kindref="compound">shared_memory/locked_condition_variable.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shared__memory_8hpp" kindref="compound">shared_memory/shared_memory.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="locked__cond__var__pong_8cpp_1a383e703fc3e9dd425f075cf463ee4c5b" kindref="member">RUNNING</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="locked__cond__var__pong_8cpp_1aba399b0a6a6e3bd37af95bd04e8def6f" kindref="member">stop</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="locked__cond__var__pong_8cpp_1a383e703fc3e9dd425f075cf463ee4c5b" kindref="member">RUNNING</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="locked__cond__var__pong_8cpp_1a61af3e60b94ae3e748f6fbac1e794af7" kindref="member">execute</ref>()</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1_locked_condition_variable" kindref="compound">shared_memory::LockedConditionVariable</ref><sp/>cv(</highlight><highlight class="stringliteral">&quot;main_memory&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>cv.lock_scope();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ping<sp/>was<sp/>waiting<sp/>for<sp/>pong<sp/>to<sp/>start,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>informing<sp/>ping<sp/>it<sp/>can<sp/>go<sp/>ahead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>cv.notify_one();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="locked__cond__var__pong_8cpp_1a383e703fc3e9dd425f075cf463ee4c5b" kindref="member">RUNNING</ref>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv.wait();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_memory::get&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;main_memory&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">,<sp/>count);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_memory::set&lt;int&gt;(</highlight><highlight class="stringliteral">&quot;main_memory&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">,<sp/>count);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t\tpong<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>count<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(2000);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv.notify_one();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>cv.unlock_scope();</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="locked__cond__var__pong_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cleaning<sp/>and<sp/>exit<sp/>on<sp/>ctrl+c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/>cleaning;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>cleaning.sa_handler<sp/>=<sp/><ref refid="locked__cond__var__pong_8cpp_1aba399b0a6a6e3bd37af95bd04e8def6f" kindref="member">stop</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>sigemptyset(&amp;cleaning.sa_mask);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>cleaning.sa_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>sigaction(SIGINT,<sp/>&amp;cleaning,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="locked__cond__var__pong_8cpp_1a61af3e60b94ae3e748f6fbac1e794af7" kindref="member">execute</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/locked_cond_var_pong.cpp"/>
  </compounddef>
</doxygen>

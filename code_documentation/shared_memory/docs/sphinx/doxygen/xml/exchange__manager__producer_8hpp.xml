<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="exchange__manager__producer_8hpp" kind="file" language="C++">
    <compoundname>exchange_manager_producer.hpp</compoundname>
    <includes refid="exchange__manager__memory_8hpp" local="yes">shared_memory/internal/exchange_manager_memory.hpp</includes>
    <includes refid="exchange__manager__producer_8hxx" local="yes">exchange_manager_producer.hxx</includes>
    <includedby refid="exchange__manager__clean_8cpp" local="yes">/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/exchange_manager_clean.cpp</includedby>
    <includedby refid="exchange__manager__demo_8cpp" local="yes">/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/exchange_manager_demo.cpp</includedby>
    <includedby refid="exchange__manager__producer_8cpp" local="yes">/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/exchange_manager_producer.cpp</includedby>
    <incdepgraph>
      <node id="2647">
        <label>exchange_manager_producer.hxx</label>
        <link refid="exchange__manager__producer_8hxx"/>
      </node>
      <node id="2644">
        <label>shared_memory/serializer.hxx</label>
        <link refid="serializer_8hxx"/>
      </node>
      <node id="2640">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="2639">
        <label>shared_memory/serializer.hpp</label>
        <link refid="serializer_8hpp"/>
        <childnode refid="2640" relation="include">
        </childnode>
        <childnode refid="2641" relation="include">
        </childnode>
        <childnode refid="2642" relation="include">
        </childnode>
        <childnode refid="2637" relation="include">
        </childnode>
        <childnode refid="2643" relation="include">
        </childnode>
        <childnode refid="2644" relation="include">
        </childnode>
      </node>
      <node id="2645">
        <label>shared_memory/shared_memory.hxx</label>
        <link refid="shared__memory_8hxx"/>
        <childnode refid="2628" relation="include">
        </childnode>
      </node>
      <node id="2625">
        <label>shared_memory/mutex.hpp</label>
        <link refid="mutex_8hpp"/>
        <childnode refid="2626" relation="include">
        </childnode>
        <childnode refid="2627" relation="include">
        </childnode>
        <childnode refid="2628" relation="include">
        </childnode>
      </node>
      <node id="2620">
        <label>boost/interprocess/containers/string.hpp</label>
      </node>
      <node id="2624">
        <label>string</label>
      </node>
      <node id="2628">
        <label>shared_memory/shared_memory.hpp</label>
        <link refid="shared__memory_8hpp"/>
        <childnode refid="2623" relation="include">
        </childnode>
        <childnode refid="2629" relation="include">
        </childnode>
        <childnode refid="2630" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2631" relation="include">
        </childnode>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2619" relation="include">
        </childnode>
        <childnode refid="2633" relation="include">
        </childnode>
        <childnode refid="2620" relation="include">
        </childnode>
        <childnode refid="2634" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2635" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2645" relation="include">
        </childnode>
      </node>
      <node id="2629">
        <label>map</label>
      </node>
      <node id="2636">
        <label>exception</label>
      </node>
      <node id="2638">
        <label>shared_memory/segment_info.hpp</label>
        <link refid="segment__info_8hpp"/>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2623" relation="include">
        </childnode>
      </node>
      <node id="2634">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="2626">
        <label>boost/interprocess/sync/named_mutex.hpp</label>
      </node>
      <node id="2646">
        <label>exchange_manager_memory.hxx</label>
        <link refid="exchange__manager__memory_8hxx"/>
      </node>
      <node id="2631">
        <label>vector</label>
      </node>
      <node id="2633">
        <label>boost/interprocess/containers/deque.hpp</label>
      </node>
      <node id="2643">
        <label>utility</label>
      </node>
      <node id="2637">
        <label>sstream</label>
      </node>
      <node id="2618">
        <label>shared_memory/internal/exchange_manager_memory.hpp</label>
        <link refid="exchange__manager__memory_8hpp"/>
        <childnode refid="2619" relation="include">
        </childnode>
        <childnode refid="2620" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2622" relation="include">
        </childnode>
        <childnode refid="2623" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2625" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2628" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
      </node>
      <node id="2619">
        <label>boost/interprocess/allocators/allocator.hpp</label>
      </node>
      <node id="2622">
        <label>boost/lockfree/queue.hpp</label>
      </node>
      <node id="2623">
        <label>iostream</label>
      </node>
      <node id="2630">
        <label>mutex</label>
      </node>
      <node id="2632">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="2617">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exchange_manager_producer.hpp</label>
        <link refid="exchange_manager_producer.hpp"/>
        <childnode refid="2618" relation="include">
        </childnode>
        <childnode refid="2647" relation="include">
        </childnode>
      </node>
      <node id="2641">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="2621">
        <label>boost/interprocess/managed_shared_memory.hpp</label>
      </node>
      <node id="2642">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="2627">
        <label>memory</label>
      </node>
      <node id="2635">
        <label>shared_memory/exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2623" relation="include">
        </childnode>
        <childnode refid="2637" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2650">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/exchange_manager_demo.cpp</label>
        <link refid="exchange__manager__demo_8cpp"/>
      </node>
      <node id="2649">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/exchange_manager_clean.cpp</label>
        <link refid="exchange__manager__clean_8cpp"/>
      </node>
      <node id="2651">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/demos/exchange_manager_producer.cpp</label>
        <link refid="exchange__manager__producer_8cpp"/>
      </node>
      <node id="2648">
        <label>/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exchange_manager_producer.hpp</label>
        <link refid="exchange_manager_producer.hpp"/>
        <childnode refid="2649" relation="include">
        </childnode>
        <childnode refid="2650" relation="include">
        </childnode>
        <childnode refid="2651" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classshared__memory_1_1_exchange__manager__producer" prot="public">shared_memory::Exchange_manager_producer</innerclass>
    <innernamespace refid="namespaceshared__memory">shared_memory</innernamespace>
    <briefdescription>
<para>Interprocess exchange of serialized items. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Vincent Berenz (<ulink url="mailto:vberenz@tuebingen.mpg.de">vberenz@tuebingen.mpg.de</ulink>)  License BSD-3-Clause </para></simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-06-07 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>EXCHANGE_MANAGER_PRODUCER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXCHANGE_MANAGER_PRODUCER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exchange__manager__memory_8hpp" kindref="compound">shared_memory/internal/exchange_manager_memory.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">bip<sp/>=<sp/>boost::interprocess;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceshared__memory_1_1internal" kindref="compound">shared_memory::internal</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceshared__memory" kindref="compound">shared_memory</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Serializable,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QUEUE_SIZE&gt;</highlight></codeline>
<codeline lineno="24" refid="classshared__memory_1_1_exchange__manager__producer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classshared__memory_1_1_exchange__manager__producer" kindref="compound">Exchange_manager_producer</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26" refid="classshared__memory_1_1_exchange__manager__producer_1a65119cf07c0c10f167c191c9ee913029" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1internal_1_1_exchange__manager__memory" kindref="compound">Exchange_manager_memory&lt;Serializable, QUEUE_SIZE&gt;</ref><sp/><ref refid="classshared__memory_1_1_exchange__manager__producer_1a65119cf07c0c10f167c191c9ee913029" kindref="member">Memory</ref>;</highlight></codeline>
<codeline lineno="27" refid="classshared__memory_1_1_exchange__manager__producer_1a7f3d7760ca2d1c01fa88e7a6447a38d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Memory&gt;<sp/><ref refid="classshared__memory_1_1_exchange__manager__producer_1a7f3d7760ca2d1c01fa88e7a6447a38d7" kindref="member">Memory_ptr</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1_exchange__manager__producer" kindref="compound">Exchange_manager_producer</ref>(std::string<sp/>segment_id,</highlight></codeline>
<codeline lineno="44" refid="classshared__memory_1_1_exchange__manager__producer_1a2148cfb2e9a1973089d81237ea5735b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>object_id,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>leading,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autolock<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classshared__memory_1_1_exchange__manager__producer" kindref="compound">Exchange_manager_producer</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ready_to_produce();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lock();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unlock();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_serializable" kindref="compound">Serializable</ref><sp/>&amp;serializable);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(std::deque&lt;int&gt;<sp/>&amp;get_consumed_ids);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_char_written();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_char_count();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>producer_queue_empty()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>consumer_queue_empty()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105" refid="classshared__memory_1_1_exchange__manager__producer_1a0f86798dbbb5bead856c566257bd1b07" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110" refid="classshared__memory_1_1_exchange__manager__producer_1a67f2a2c049dabace06c85a35335d1614" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Memory_ptr<sp/><ref refid="classshared__memory_1_1_exchange__manager__producer_1a67f2a2c049dabace06c85a35335d1614" kindref="member">memory_</ref>;</highlight></codeline>
<codeline lineno="111" refid="classshared__memory_1_1_exchange__manager__producer_1a6d89b939f08bbb9180460a0fab2c877f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1_exchange__manager__producer_1a6d89b939f08bbb9180460a0fab2c877f" kindref="member">autolock_</ref>;</highlight></codeline>
<codeline lineno="112" refid="classshared__memory_1_1_exchange__manager__producer_1a4c71d725b7b95e4dd00ecf68232d4ac9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1_exchange__manager__producer_1a4c71d725b7b95e4dd00ecf68232d4ac9" kindref="member">leading_</ref>;</highlight></codeline>
<codeline lineno="113" refid="classshared__memory_1_1_exchange__manager__producer_1a96ce58e9619ac28b31b46a81c53c20c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classshared__memory_1_1_exchange__manager__producer_1a96ce58e9619ac28b31b46a81c53c20c2" kindref="member">segment_id_</ref>;</highlight></codeline>
<codeline lineno="114" refid="classshared__memory_1_1_exchange__manager__producer_1a57ea2e6076963223331f3b6e78cbbc05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classshared__memory_1_1_exchange__manager__producer_1a57ea2e6076963223331f3b6e78cbbc05" kindref="member">object_id_</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clean_mutex(std::string<sp/>segment_id);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clean_memory(std::string<sp/>segment_id);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exchange__manager__producer_8hxx" kindref="compound">exchange_manager_producer.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>shared_memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>EXCHANGE_MANAGER_PRODUCER_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exchange_manager_producer.hpp"/>
  </compounddef>
</doxygen>

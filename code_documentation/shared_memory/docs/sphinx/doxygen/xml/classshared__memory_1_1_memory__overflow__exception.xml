<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classshared__memory_1_1_memory__overflow__exception" kind="class" language="C++" prot="public">
    <compoundname>shared_memory::Memory_overflow_exception</compoundname>
    <basecompoundref prot="public" virt="non-virtual">exception</basecompoundref>
    <includes refid="exceptions_8h" local="no">exceptions.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classshared__memory_1_1_memory__overflow__exception_1ad63afdde056259c8fb0bd3212031783d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string shared_memory::Memory_overflow_exception::error_message_</definition>
        <argsstring></argsstring>
        <name>error_message_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exceptions.h" line="41" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exceptions.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshared__memory_1_1_memory__overflow__exception_1aed67eae5c2822873debe5eb8a7427c0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shared_memory::Memory_overflow_exception::Memory_overflow_exception</definition>
        <argsstring>(const std::string error_message)</argsstring>
        <name>Memory_overflow_exception</name>
        <param>
          <type>const std::string</type>
          <declname>error_message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exceptions.h" line="36" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/src/exceptions.cpp" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classshared__memory_1_1_memory__overflow__exception_1a0277cf7bf09198627d7d747b82f83ade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shared_memory::Memory_overflow_exception::~Memory_overflow_exception</definition>
        <argsstring>()</argsstring>
        <name>~Memory_overflow_exception</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exceptions.h" line="37" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/src/exceptions.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classshared__memory_1_1_memory__overflow__exception_1a378f3443041b2f5fd52e2fd0231d5aea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * shared_memory::Memory_overflow_exception::what</definition>
        <argsstring>() const </argsstring>
        <name>what</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exceptions.h" line="38" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/src/exceptions.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="112">
        <label>shared_memory::Memory_overflow_exception</label>
        <link refid="classshared__memory_1_1_memory__overflow__exception"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="113">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="114">
        <label>shared_memory::Memory_overflow_exception</label>
        <link refid="classshared__memory_1_1_memory__overflow__exception"/>
        <childnode refid="115" relation="public-inheritance">
        </childnode>
      </node>
      <node id="115">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exceptions.h" line="34" column="1" bodyfile="/home/mnaveau/devel/workspace/src/catkin/core_robotics/shared_memory/include/shared_memory/exceptions.h" bodystart="33" bodyend="42"/>
    <listofallmembers>
      <member refid="classshared__memory_1_1_memory__overflow__exception_1ad63afdde056259c8fb0bd3212031783d" prot="private" virt="non-virtual"><scope>shared_memory::Memory_overflow_exception</scope><name>error_message_</name></member>
      <member refid="classshared__memory_1_1_memory__overflow__exception_1aed67eae5c2822873debe5eb8a7427c0b" prot="public" virt="non-virtual"><scope>shared_memory::Memory_overflow_exception</scope><name>Memory_overflow_exception</name></member>
      <member refid="classshared__memory_1_1_memory__overflow__exception_1a378f3443041b2f5fd52e2fd0231d5aea" prot="public" virt="non-virtual"><scope>shared_memory::Memory_overflow_exception</scope><name>what</name></member>
      <member refid="classshared__memory_1_1_memory__overflow__exception_1a0277cf7bf09198627d7d747b82f83ade" prot="public" virt="non-virtual"><scope>shared_memory::Memory_overflow_exception</scope><name>~Memory_overflow_exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

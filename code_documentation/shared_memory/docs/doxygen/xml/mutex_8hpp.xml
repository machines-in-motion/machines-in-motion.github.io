<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="mutex_8hpp" kind="file" language="C++">
    <compoundname>mutex.hpp</compoundname>
    <includes local="no">boost/interprocess/sync/named_mutex.hpp</includes>
    <includes local="no">memory</includes>
    <includes refid="shared__memory_8hpp" local="no">shared_memory/shared_memory.hpp</includes>
    <includedby refid="cond__var__ping_8cpp" local="yes">demos/cond_var_ping.cpp</includedby>
    <includedby refid="cond__var__pong_8cpp" local="yes">demos/cond_var_pong.cpp</includedby>
    <includedby refid="sm__cond__var__demo_8cpp" local="yes">demos/sm_cond_var_demo.cpp</includedby>
    <includedby refid="array_8hpp" local="yes">include/shared_memory/array.hpp</includedby>
    <includedby refid="exchange__manager__memory_8hpp" local="yes">include/shared_memory/internal/exchange_manager_memory.hpp</includedby>
    <includedby refid="lock_8hpp" local="yes">include/shared_memory/lock.hpp</includedby>
    <includedby refid="locked__condition__variable_8hpp" local="yes">include/shared_memory/locked_condition_variable.hpp</includedby>
    <includedby refid="mutex_8cpp" local="yes">src/mutex.cpp</includedby>
    <includedby refid="wrappers_8cpp" local="yes">srcpy/wrappers.cpp</includedby>
    <incdepgraph>
      <node id="1783">
        <label>shared_memory/serializer.hxx</label>
        <link refid="serializer_8hxx_source"/>
      </node>
      <node id="1779">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="1778">
        <label>shared_memory/serializer.hpp</label>
        <link refid="serializer_8hpp_source"/>
        <childnode refid="1779" relation="include">
        </childnode>
        <childnode refid="1780" relation="include">
        </childnode>
        <childnode refid="1781" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1782" relation="include">
        </childnode>
        <childnode refid="1783" relation="include">
        </childnode>
      </node>
      <node id="1784">
        <label>shared_memory/shared_memory.hxx</label>
        <link refid="shared__memory_8hxx"/>
        <childnode refid="1762" relation="include">
        </childnode>
      </node>
      <node id="1759">
        <label>include/shared_memory/mutex.hpp</label>
        <link refid="mutex.hpp"/>
        <childnode refid="1760" relation="include">
        </childnode>
        <childnode refid="1761" relation="include">
        </childnode>
        <childnode refid="1762" relation="include">
        </childnode>
      </node>
      <node id="1771">
        <label>boost/interprocess/containers/string.hpp</label>
      </node>
      <node id="1766">
        <label>string</label>
      </node>
      <node id="1762">
        <label>shared_memory/shared_memory.hpp</label>
        <link refid="shared__memory_8hpp"/>
        <childnode refid="1763" relation="include">
        </childnode>
        <childnode refid="1764" relation="include">
        </childnode>
        <childnode refid="1765" relation="include">
        </childnode>
        <childnode refid="1766" relation="include">
        </childnode>
        <childnode refid="1767" relation="include">
        </childnode>
        <childnode refid="1768" relation="include">
        </childnode>
        <childnode refid="1769" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1772" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
        <childnode refid="1774" relation="include">
        </childnode>
        <childnode refid="1777" relation="include">
        </childnode>
        <childnode refid="1778" relation="include">
        </childnode>
        <childnode refid="1784" relation="include">
        </childnode>
      </node>
      <node id="1764">
        <label>map</label>
      </node>
      <node id="1775">
        <label>exception</label>
      </node>
      <node id="1777">
        <label>shared_memory/segment_info.hpp</label>
        <link refid="segment__info_8hpp_source"/>
        <childnode refid="1773" relation="include">
        </childnode>
        <childnode refid="1763" relation="include">
        </childnode>
      </node>
      <node id="1772">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="1760">
        <label>boost/interprocess/sync/named_mutex.hpp</label>
      </node>
      <node id="1767">
        <label>vector</label>
      </node>
      <node id="1770">
        <label>boost/interprocess/containers/deque.hpp</label>
      </node>
      <node id="1782">
        <label>utility</label>
      </node>
      <node id="1776">
        <label>sstream</label>
      </node>
      <node id="1769">
        <label>boost/interprocess/allocators/allocator.hpp</label>
      </node>
      <node id="1763">
        <label>iostream</label>
      </node>
      <node id="1765">
        <label>mutex</label>
      </node>
      <node id="1768">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="1780">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="1773">
        <label>boost/interprocess/managed_shared_memory.hpp</label>
      </node>
      <node id="1781">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="1761">
        <label>memory</label>
      </node>
      <node id="1774">
        <label>shared_memory/exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="1775" relation="include">
        </childnode>
        <childnode refid="1763" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1766" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1787">
        <label>demos/demo_read_array.cpp</label>
        <link refid="demo__read__array_8cpp"/>
      </node>
      <node id="1791">
        <label>demos/exchange_manager_consumer.cpp</label>
        <link refid="exchange__manager__consumer_8cpp"/>
      </node>
      <node id="1788">
        <label>demos/demo_write_array.cpp</label>
        <link refid="demo__write__array_8cpp"/>
      </node>
      <node id="1790">
        <label>include/shared_memory/exchange_manager_consumer.hpp</label>
        <link refid="exchange__manager__consumer_8hpp"/>
        <childnode refid="1791" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
      </node>
      <node id="1797">
        <label>include/shared_memory/locked_condition_variable.hpp</label>
        <link refid="locked__condition__variable_8hpp_source"/>
      </node>
      <node id="1785">
        <label>include/shared_memory/mutex.hpp</label>
        <link refid="mutex.hpp"/>
        <childnode refid="1786" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1795" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
      </node>
      <node id="1792">
        <label>demos/exchange_manager_demo.cpp</label>
        <link refid="exchange__manager__demo_8cpp"/>
      </node>
      <node id="1796">
        <label>include/shared_memory/condition_variable.hpp</label>
        <link refid="condition__variable_8hpp_source"/>
      </node>
      <node id="1793">
        <label>demos/exchange_manager_producer.cpp</label>
        <link refid="exchange__manager__producer_8cpp"/>
      </node>
      <node id="1789">
        <label>include/shared_memory/internal/exchange_manager_memory.hpp</label>
        <link refid="exchange__manager__memory_8hpp"/>
        <childnode refid="1790" relation="include">
        </childnode>
        <childnode refid="1794" relation="include">
        </childnode>
      </node>
      <node id="1795">
        <label>include/shared_memory/lock.hpp</label>
        <link refid="lock_8hpp_source"/>
        <childnode refid="1796" relation="include">
        </childnode>
      </node>
      <node id="1786">
        <label>include/shared_memory/array.hpp</label>
        <link refid="array_8hpp_source"/>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
      </node>
      <node id="1794">
        <label>include/shared_memory/exchange_manager_producer.hpp</label>
        <link refid="exchange__manager__producer_8hpp"/>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classshared__memory_1_1Mutex" prot="public">shared_memory::Mutex</innerclass>
    <innernamespace refid="namespaceshared__memory">shared_memory</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>Max<sp/>Planck<sp/>Gesellschaft<sp/>and<sp/>New<sp/>York<sp/>University</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Vincent<sp/>Berenz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/sync/named_mutex.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="shared__memory_8hpp" kindref="compound">shared_memory/shared_memory.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceshared__memory" kindref="compound">shared_memory</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::interprocess::named_mutex<sp/>SHMMutex;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>declaration<sp/>for<sp/>usage<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>friend<sp/>keyword</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Lock;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classshared__memory_1_1Mutex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classshared__memory_1_1Mutex" kindref="compound">Mutex</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1Mutex_1a8f1b1cffa2f3bdfb8cd74cf61b0df650" kindref="member">Mutex</ref>(std::string<sp/>mutex_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clean_memory_on_destruction<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classshared__memory_1_1Mutex" kindref="compound">Mutex</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1Mutex_1a6b6ca2e15d379a5e3a8d68d15c04469f" kindref="member">lock</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1Mutex_1a06b9e214880af7ab9703bd78601ac0c6" kindref="member">unlock</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clean(std::string<sp/>mutex_id);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>will<sp/>access<sp/>directly<sp/>SHMMutex<sp/>to<sp/>lock<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1Lock" kindref="compound">Lock</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>mutex_id_;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>SHMMutex<sp/>mutex_;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clean_memory_on_destruction_;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>shared_memory</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/shared_memory/mutex.hpp"/>
  </compounddef>
</doxygen>

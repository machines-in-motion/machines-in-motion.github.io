<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classshared__memory_1_1Allocation__exception" kind="class" language="C++" prot="public">
    <compoundname>shared_memory::Allocation_exception</compoundname>
    <basecompoundref prot="public" virt="non-virtual">exception</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classshared__memory_1_1Allocation__exception_1a57a0e22bd60d77310cd67371a2294028" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string shared_memory::Allocation_exception::error_message_</definition>
        <argsstring></argsstring>
        <name>error_message_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shared_memory/exceptions.h" line="30" column="1" bodyfile="include/shared_memory/exceptions.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshared__memory_1_1Allocation__exception_1ac81ff8567ac6c6cec754fefc5fe79d12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shared_memory::Allocation_exception::Allocation_exception</definition>
        <argsstring>(const std::string &amp;segment_id, const std::string &amp;object_id)</argsstring>
        <name>Allocation_exception</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>segment_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>object_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shared_memory/exceptions.h" line="24" column="1" bodyfile="src/exceptions.cpp" bodystart="15" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classshared__memory_1_1Allocation__exception_1a3c753547b3509c87dbef42974ef02cb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shared_memory::Allocation_exception::~Allocation_exception</definition>
        <argsstring>()</argsstring>
        <name>~Allocation_exception</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shared_memory/exceptions.h" line="26" column="1" bodyfile="src/exceptions.cpp" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classshared__memory_1_1Allocation__exception_1ac0764146f0a70b242491a990fa448dc3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * shared_memory::Allocation_exception::what</definition>
        <argsstring>() const </argsstring>
        <name>what</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shared_memory/exceptions.h" line="27" column="1" bodyfile="src/exceptions.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="74">
        <label>shared_memory::Allocation_exception</label>
        <link refid="classshared__memory_1_1Allocation__exception"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="75">
        <label>exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="76">
        <label>shared_memory::Allocation_exception</label>
        <link refid="classshared__memory_1_1Allocation__exception"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>exception</label>
      </node>
    </collaborationgraph>
    <location file="include/shared_memory/exceptions.h" line="22" column="1" bodyfile="include/shared_memory/exceptions.h" bodystart="21" bodyend="31"/>
    <listofallmembers>
      <member refid="classshared__memory_1_1Allocation__exception_1ac81ff8567ac6c6cec754fefc5fe79d12" prot="public" virt="non-virtual"><scope>shared_memory::Allocation_exception</scope><name>Allocation_exception</name></member>
      <member refid="classshared__memory_1_1Allocation__exception_1a57a0e22bd60d77310cd67371a2294028" prot="private" virt="non-virtual"><scope>shared_memory::Allocation_exception</scope><name>error_message_</name></member>
      <member refid="classshared__memory_1_1Allocation__exception_1ac0764146f0a70b242491a990fa448dc3" prot="public" virt="non-virtual"><scope>shared_memory::Allocation_exception</scope><name>what</name></member>
      <member refid="classshared__memory_1_1Allocation__exception_1a3c753547b3509c87dbef42974ef02cb9" prot="public" virt="non-virtual"><scope>shared_memory::Allocation_exception</scope><name>~Allocation_exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

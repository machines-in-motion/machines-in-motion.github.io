<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cond__var__timeout_8cpp" kind="file" language="C++">
    <compoundname>cond_var_timeout.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">thread</includes>
    <includes refid="locked__condition__variable_8hpp" local="yes">shared_memory/locked_condition_variable.hpp</includes>
    <incdepgraph>
      <node id="933">
        <label>shared_memory/serializer.hxx</label>
        <link refid="serializer_8hxx_source"/>
      </node>
      <node id="929">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="928">
        <label>shared_memory/serializer.hpp</label>
        <link refid="serializer_8hpp_source"/>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="931" relation="include">
        </childnode>
        <childnode refid="926" relation="include">
        </childnode>
        <childnode refid="932" relation="include">
        </childnode>
        <childnode refid="933" relation="include">
        </childnode>
      </node>
      <node id="904">
        <label>demos/cond_var_timeout.cpp</label>
        <link refid="cond_var_timeout.cpp"/>
        <childnode refid="905" relation="include">
        </childnode>
        <childnode refid="906" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
      </node>
      <node id="934">
        <label>shared_memory/shared_memory.hxx</label>
        <link refid="shared__memory_8hxx"/>
        <childnode refid="913" relation="include">
        </childnode>
      </node>
      <node id="907">
        <label>shared_memory/locked_condition_variable.hpp</label>
        <link refid="locked__condition__variable_8hpp_source"/>
        <childnode refid="908" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="910" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
        <childnode refid="912" relation="include">
        </childnode>
        <childnode refid="913" relation="include">
        </childnode>
      </node>
      <node id="911">
        <label>boost/interprocess/sync/scoped_lock.hpp</label>
      </node>
      <node id="912">
        <label>shared_memory/mutex.hpp</label>
        <link refid="mutex_8hpp_source"/>
        <childnode refid="910" relation="include">
        </childnode>
        <childnode refid="908" relation="include">
        </childnode>
        <childnode refid="913" relation="include">
        </childnode>
      </node>
      <node id="921">
        <label>boost/interprocess/containers/string.hpp</label>
      </node>
      <node id="916">
        <label>string</label>
      </node>
      <node id="913">
        <label>shared_memory/shared_memory.hpp</label>
        <link refid="shared__memory_8hpp"/>
        <childnode refid="905" relation="include">
        </childnode>
        <childnode refid="914" relation="include">
        </childnode>
        <childnode refid="915" relation="include">
        </childnode>
        <childnode refid="916" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
        <childnode refid="919" relation="include">
        </childnode>
        <childnode refid="920" relation="include">
        </childnode>
        <childnode refid="921" relation="include">
        </childnode>
        <childnode refid="922" relation="include">
        </childnode>
        <childnode refid="923" relation="include">
        </childnode>
        <childnode refid="924" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="928" relation="include">
        </childnode>
        <childnode refid="934" relation="include">
        </childnode>
      </node>
      <node id="914">
        <label>map</label>
      </node>
      <node id="925">
        <label>exception</label>
      </node>
      <node id="909">
        <label>boost/interprocess/sync/named_condition.hpp</label>
      </node>
      <node id="927">
        <label>shared_memory/segment_info.hpp</label>
        <link refid="segment__info_8hpp_source"/>
        <childnode refid="923" relation="include">
        </childnode>
        <childnode refid="905" relation="include">
        </childnode>
      </node>
      <node id="922">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="910">
        <label>boost/interprocess/sync/named_mutex.hpp</label>
      </node>
      <node id="917">
        <label>vector</label>
      </node>
      <node id="920">
        <label>boost/interprocess/containers/deque.hpp</label>
      </node>
      <node id="932">
        <label>utility</label>
      </node>
      <node id="926">
        <label>sstream</label>
      </node>
      <node id="919">
        <label>boost/interprocess/allocators/allocator.hpp</label>
      </node>
      <node id="905">
        <label>iostream</label>
      </node>
      <node id="915">
        <label>mutex</label>
      </node>
      <node id="918">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="906">
        <label>thread</label>
      </node>
      <node id="930">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="923">
        <label>boost/interprocess/managed_shared_memory.hpp</label>
      </node>
      <node id="931">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="908">
        <label>memory</label>
      </node>
      <node id="924">
        <label>shared_memory/exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="925" relation="include">
        </childnode>
        <childnode refid="905" relation="include">
        </childnode>
        <childnode refid="926" relation="include">
        </childnode>
        <childnode refid="916" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="cond__var__timeout_8cpp_1a0b1eab4421729cd2172885ddca451406" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int thread_callback</definition>
        <argsstring>()</argsstring>
        <name>thread_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/cond_var_timeout.cpp" line="5" column="1" bodyfile="demos/cond_var_timeout.cpp" bodystart="5" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="cond__var__timeout_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/cond_var_timeout.cpp" line="21" column="1" bodyfile="demos/cond_var_timeout.cpp" bodystart="21" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared_memory/locked_condition_variable.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_callback()</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;THREAD:<sp/>create<sp/>the<sp/>condition<sp/>variable&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>a<sp/>condition<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1LockedConditionVariable" kindref="compound">shared_memory::LockedConditionVariable</ref><sp/>cond_var(</highlight><highlight class="stringliteral">&quot;main_memory&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cond_var&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>cond_var.lock_scope();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;THREAD:<sp/>wait&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>cond_var.wait();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;THREAD:<sp/>sleep(11)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(11);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;THREAD:<sp/>notify<sp/>all&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>cond_var.notify_all();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceshared__memory_1a60cbce63ae7fb64a2758b773f9006471" kindref="member">shared_memory::delete_segment</ref>(</highlight><highlight class="stringliteral">&quot;main_memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceshared__memory_1a7c76ec22ab70d3b7487becd3ec9943bc" kindref="member">shared_memory::get_segment</ref>(</highlight><highlight class="stringliteral">&quot;main_memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MAIN:<sp/>create<sp/>thread&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>std::thread<sp/>my_thread(&amp;thread_callback);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MAIN:<sp/>sleep(1)<sp/>so<sp/>THREAD<sp/>goes<sp/>to<sp/>wait&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MAIN:<sp/>create<sp/>the<sp/>condition<sp/>variable&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1LockedConditionVariable" kindref="compound">shared_memory::LockedConditionVariable</ref><sp/>cond_var(</highlight><highlight class="stringliteral">&quot;main_memory&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cond_var&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MAIN:<sp/>notify<sp/>thread&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>cond_var.notify_all();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MAIN:<sp/>timed<sp/>wait&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cond_var.timed_wait(5))</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MAIN:<sp/>TIMED_OUT!!!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MAIN:<sp/>Has<sp/>been<sp/>notified&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>cond_var.notify_all();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>my_thread.join();</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="demos/cond_var_timeout.cpp"/>
  </compounddef>
</doxygen>

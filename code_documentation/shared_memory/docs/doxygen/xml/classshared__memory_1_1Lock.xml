<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classshared__memory_1_1Lock" kind="class" language="C++" prot="public">
    <compoundname>shared_memory::Lock</compoundname>
    <includes refid="lock_8hpp" local="no">lock.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classshared__memory_1_1Lock_1ab376f06fa4c31a6b2352f307f2bfe007" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend shared_memory::Lock::ConditionVariable</definition>
        <argsstring></argsstring>
        <name>ConditionVariable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shared_memory/lock.hpp" line="34" column="1" bodyfile="include/shared_memory/lock.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classshared__memory_1_1Lock_1aa97f73af624861f63cb827b8f8a082f2" prot="private" static="no" mutable="no">
        <type>SHMScopeLock</type>
        <definition>SHMScopeLock shared_memory::Lock::lock_</definition>
        <argsstring></argsstring>
        <name>lock_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shared_memory/lock.hpp" line="35" column="1" bodyfile="include/shared_memory/lock.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshared__memory_1_1Lock_1aacd7b7ee828e6a83bf18497ea7e33d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shared_memory::Lock::Lock</definition>
        <argsstring>(Mutex &amp;mutex)</argsstring>
        <name>Lock</name>
        <param>
          <type><ref refid="classshared__memory_1_1Mutex" kindref="compound">Mutex</ref> &amp;</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
<para>lock the mutex </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/shared_memory/lock.hpp" line="29" column="1" bodyfile="src/lock.cpp" bodystart="5" bodyend="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A scope lock object for locking a shared memory mutex, to use for example with a shared memory condition variable. </para>    </briefdescription>
    <detaileddescription>
<para>The scope is unlocked on destruction. </para>    </detaileddescription>
    <location file="include/shared_memory/lock.hpp" line="24" column="1" bodyfile="include/shared_memory/lock.hpp" bodystart="23" bodyend="36"/>
    <listofallmembers>
      <member refid="classshared__memory_1_1Lock_1ab376f06fa4c31a6b2352f307f2bfe007" prot="private" virt="non-virtual"><scope>shared_memory::Lock</scope><name>ConditionVariable</name></member>
      <member refid="classshared__memory_1_1Lock_1aacd7b7ee828e6a83bf18497ea7e33d70" prot="public" virt="non-virtual"><scope>shared_memory::Lock</scope><name>Lock</name></member>
      <member refid="classshared__memory_1_1Lock_1aa97f73af624861f63cb827b8f8a082f2" prot="private" virt="non-virtual"><scope>shared_memory::Lock</scope><name>lock_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

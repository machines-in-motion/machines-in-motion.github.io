<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespaceYAML" kind="namespace" language="C++">
    <compoundname>YAML</compoundname>
    <innerclass refid="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce" prot="public">YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;</innerclass>
    <innerclass refid="structYAML_1_1convert_3_01Eigen_1_1Quaterniond_01_4" prot="public">YAML::convert&lt; Eigen::Quaterniond &gt;</innerclass>
    <innerclass refid="structYAML_1_1convert_3_01robot__math_1_1MovableEigenVector_3_01T_01_4_01_4" prot="public">YAML::convert&lt; robot_math::MovableEigenVector&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structYAML_1_1EigenMatrixConverter" prot="public">YAML::EigenMatrixConverter</innerclass>
    <innerclass refid="structYAML_1_1EigenVectorConverter" prot="public">YAML::EigenVectorConverter</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="yaml__tools_8hpp_1aa37a27d8a4ee6a8ec1e16eb0208763e4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename YamlType</type>
          </param>
        </templateparamlist>
        <type>YamlType</type>
        <definition>static YamlType YAML::ReadParameter</definition>
        <argsstring>(const YAML::Node &amp;node, const std::string &amp;name)</argsstring>
        <name>ReadParameter</name>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>helper function to safely read a yaml parameter </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>YamlType</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>YamlType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/yaml_cpp_catkin/yaml_tools.hpp" line="24" column="1" bodyfile="include/yaml_cpp_catkin/yaml_tools.hpp" bodystart="24" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="yaml__tools_8hpp_1a07d91dd29a0e49d11dac96037b626b20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename YamlType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void YAML::ReadParameter</definition>
        <argsstring>(const YAML::Node &amp;node, const std::string &amp;name, YamlType &amp;parameter, bool optional=false)</argsstring>
        <name>ReadParameter</name>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>YamlType &amp;</type>
          <declname>parameter</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>optional</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>helper function to safely read a yaml parameter </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>YamlType</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/yaml_cpp_catkin/yaml_tools.hpp" line="42" column="1" bodyfile="include/yaml_cpp_catkin/yaml_tools.hpp" bodystart="42" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="yaml__tools_8hpp_1a183f3b6513bd330027ea3c51d39161b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename YamlType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void YAML::ReadParameterDefault</definition>
        <argsstring>(const YAML::Node &amp;node, const std::string &amp;name, YamlType &amp;parameter, YamlType default_value)</argsstring>
        <name>ReadParameterDefault</name>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>YamlType &amp;</type>
          <declname>parameter</declname>
        </param>
        <param>
          <type>YamlType</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/yaml_cpp_catkin/yaml_tools.hpp" line="51" column="1" bodyfile="include/yaml_cpp_catkin/yaml_tools.hpp" bodystart="51" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="yaml__tools_8hpp_1a163f0c913b2e1d92245060b694dc25ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename YamlType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void YAML::readParameter</definition>
        <argsstring>(const YAML::Node &amp;node, const std::string &amp;name, YamlType &amp;parameter, bool optional=false)</argsstring>
        <name>readParameter</name>
        <param>
          <type>const YAML::Node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>YamlType &amp;</type>
          <declname>parameter</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>optional</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>helper function to safely read a yaml parameter </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>YamlType</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>optional</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>YamlType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/yaml_cpp_catkin/yaml_tools.hpp" line="70" column="1" bodyfile="include/yaml_cpp_catkin/yaml_tools.hpp" bodystart="70" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/yaml_cpp_catkin/yaml_eigen.h" line="25" column="1"/>
  </compounddef>
</doxygen>

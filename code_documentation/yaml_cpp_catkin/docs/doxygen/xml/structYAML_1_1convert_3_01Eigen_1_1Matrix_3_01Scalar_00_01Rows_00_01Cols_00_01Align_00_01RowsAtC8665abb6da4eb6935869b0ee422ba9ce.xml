<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce" kind="struct" language="C++" prot="public">
    <compoundname>YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class Scalar</type>
      </param>
      <param>
        <type>int</type>
        <declname>Rows</declname>
        <defname>Rows</defname>
      </param>
      <param>
        <type>int</type>
        <declname>Cols</declname>
        <defname>Cols</defname>
      </param>
      <param>
        <type>int</type>
        <declname>Align</declname>
        <defname>Align</defname>
      </param>
      <param>
        <type>int</type>
        <declname>RowsAtCompileTime</declname>
        <defname>RowsAtCompileTime</defname>
      </param>
      <param>
        <type>int</type>
        <declname>ColsAtCompileTime</declname>
        <defname>ColsAtCompileTime</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1a798e760d2b03324cecd1da2db5680c5a" prot="public" static="no">
        <type>Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt;</type>
        <definition>typedef Eigen::Matrix&lt;Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime&gt; YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;::Eigen_Type_</definition>
        <argsstring></argsstring>
        <name>Eigen_Type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/yaml_cpp_catkin/yaml_eigen.h" line="85" column="1" bodyfile="include/yaml_cpp_catkin/yaml_eigen.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1a88ccaf7da608e0afffffd7248f54b75a" prot="public" static="no">
        <type>std::conditional&lt; is_vector_type_, <ref refid="structYAML_1_1EigenVectorConverter" kindref="compound">EigenVectorConverter</ref>&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt;, <ref refid="structYAML_1_1EigenMatrixConverter" kindref="compound">EigenMatrixConverter</ref>&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;::type</type>
        <definition>typedef std::conditional&lt;is_vector_type_, EigenVectorConverter&lt;Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime&gt;, EigenMatrixConverter&lt;Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime&gt; &gt;::type YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;::Converter_</definition>
        <argsstring></argsstring>
        <name>Converter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/yaml_cpp_catkin/yaml_eigen.h" line="89" column="1" bodyfile="include/yaml_cpp_catkin/yaml_eigen.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1a02420fa6ad9be337bfcdbb83f7c292c3" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;::is_vector_type_</definition>
        <argsstring></argsstring>
        <name>is_vector_type_</name>
        <initializer>= Rows == 1 || Cols == 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/yaml_cpp_catkin/yaml_eigen.h" line="86" column="1" bodyfile="include/yaml_cpp_catkin/yaml_eigen.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1ab1716b1cd1af6ef1bdb89dd867b05dc6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Node</type>
        <definition>static Node YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;::encode</definition>
        <argsstring>(const Eigen_Type_ &amp;rhs)</argsstring>
        <name>encode</name>
        <param>
          <type>const Eigen_Type_ &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/yaml_cpp_catkin/yaml_eigen.h" line="91" column="1" bodyfile="include/yaml_cpp_catkin/yaml_eigen.h" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1a27f60d49bf29a84c2d3e14a52e12df65" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;::decode_2d</definition>
        <argsstring>(const Node &amp;node, Eigen_Type_ &amp;rhs)</argsstring>
        <name>decode_2d</name>
        <param>
          <type>const Node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>Eigen_Type_ &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/yaml_cpp_catkin/yaml_eigen.h" line="98" column="1" bodyfile="include/yaml_cpp_catkin/yaml_eigen.h" bodystart="98" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1a596a49e214c2b493de23185ca5d7ff38" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;::decode_1d</definition>
        <argsstring>(const Node &amp;node, Eigen_Type_ &amp;rhs)</argsstring>
        <name>decode_1d</name>
        <param>
          <type>const Node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>Eigen_Type_ &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/yaml_cpp_catkin/yaml_eigen.h" line="114" column="1" bodyfile="include/yaml_cpp_catkin/yaml_eigen.h" bodystart="114" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1ab8738e33c1392218faf566a1e75395e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;::decode</definition>
        <argsstring>(const Node &amp;node, Eigen_Type_ &amp;rhs)</argsstring>
        <name>decode</name>
        <param>
          <type>const Node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>Eigen_Type_ &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/yaml_cpp_catkin/yaml_eigen.h" line="122" column="1" bodyfile="include/yaml_cpp_catkin/yaml_eigen.h" bodystart="122" bodyend="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/yaml_cpp_catkin/yaml_eigen.h" line="84" column="1" bodyfile="include/yaml_cpp_catkin/yaml_eigen.h" bodystart="84" bodyend="138"/>
    <listofallmembers>
      <member refid="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1a88ccaf7da608e0afffffd7248f54b75a" prot="public" virt="non-virtual"><scope>YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;</scope><name>Converter_</name></member>
      <member refid="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1ab8738e33c1392218faf566a1e75395e4" prot="public" virt="non-virtual"><scope>YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;</scope><name>decode</name></member>
      <member refid="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1a596a49e214c2b493de23185ca5d7ff38" prot="public" virt="non-virtual"><scope>YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;</scope><name>decode_1d</name></member>
      <member refid="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1a27f60d49bf29a84c2d3e14a52e12df65" prot="public" virt="non-virtual"><scope>YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;</scope><name>decode_2d</name></member>
      <member refid="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1a798e760d2b03324cecd1da2db5680c5a" prot="public" virt="non-virtual"><scope>YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;</scope><name>Eigen_Type_</name></member>
      <member refid="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1ab1716b1cd1af6ef1bdb89dd867b05dc6" prot="public" virt="non-virtual"><scope>YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;</scope><name>encode</name></member>
      <member refid="structYAML_1_1convert_3_01Eigen_1_1Matrix_3_01Scalar_00_01Rows_00_01Cols_00_01Align_00_01RowsAtC8665abb6da4eb6935869b0ee422ba9ce_1a02420fa6ad9be337bfcdbb83f7c292c3" prot="public" virt="non-virtual"><scope>YAML::convert&lt; Eigen::Matrix&lt; Scalar, Rows, Cols, Align, RowsAtCompileTime, ColsAtCompileTime &gt; &gt;</scope><name>is_vector_type_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

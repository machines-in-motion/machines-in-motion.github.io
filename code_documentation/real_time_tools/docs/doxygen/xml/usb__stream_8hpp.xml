<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="usb__stream_8hpp" kind="file" language="C++">
    <compoundname>usb_stream.hpp</compoundname>
    <includes local="no">array</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">iostream</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="demo__usb__stream__imu__3DM__GX3__25_8cpp" local="yes">demos/demo_usb_stream_imu_3DM_GX3_25.cpp</includedby>
    <includedby refid="usb__stream_8cpp" local="yes">src/usb_stream.cpp</includedby>
    <incdepgraph>
      <node id="687">
        <label>iomanip</label>
      </node>
      <node id="689">
        <label>stdint.h</label>
      </node>
      <node id="685">
        <label>string</label>
      </node>
      <node id="684">
        <label>vector</label>
      </node>
      <node id="682">
        <label>include/real_time_tools/usb_stream.hpp</label>
        <link refid="usb_stream.hpp"/>
        <childnode refid="683" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
      </node>
      <node id="683">
        <label>array</label>
      </node>
      <node id="686">
        <label>sstream</label>
      </node>
      <node id="688">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="690">
        <label>include/real_time_tools/usb_stream.hpp</label>
        <link refid="usb_stream.hpp"/>
        <childnode refid="691" relation="include">
        </childnode>
      </node>
      <node id="691">
        <label>demos/demo_usb_stream_imu_3DM_GX3_25.cpp</label>
        <link refid="demo__usb__stream__imu__3DM__GX3__25_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classreal__time__tools_1_1PortConfig" prot="public">real_time_tools::PortConfig</innerclass>
    <innerclass refid="classreal__time__tools_1_1UsbStream" prot="public">real_time_tools::UsbStream</innerclass>
    <innernamespace refid="namespacereal__time__tools">real_time_tools</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>USB_STREAM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USB_STREAM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>uint8_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(XENOMAI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(NON_REAL_TIME)<sp/>||<sp/>defined(RT_PREEMPT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;termios.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>POSIX<sp/>control<sp/>def:<sp/>tcgetattr,<sp/>cfsetispeed,<sp/>tcsetattr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacereal__time__tools" kindref="compound">real_time_tools</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classreal__time__tools_1_1PortConfig" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreal__time__tools_1_1PortConfig" kindref="compound">PortConfig</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33" refid="classreal__time__tools_1_1PortConfig_1a62bbab15705e2d5a9bc17115222f7c07" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1PortConfig_1a62bbab15705e2d5a9bc17115222f7c07" kindref="member">StopBits</ref>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>one<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>two<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="classreal__time__tools_1_1PortConfig_1a11e818aa26cd0a941ff00b9ccd4d2131" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1PortConfig_1a11e818aa26cd0a941ff00b9ccd4d2131" kindref="member">DataBits</ref>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>cs7<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>cs8<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1PortConfig_1a9dc2941d278825ecc20a5f260a7fb076" kindref="member">get_bauderate</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57" refid="classreal__time__tools_1_1PortConfig_1ad89a20459faf7718a63ea8c00ddc5e34" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1PortConfig_1ad89a20459faf7718a63ea8c00ddc5e34" kindref="member">rts_cts_enabled_</ref>;</highlight></codeline>
<codeline lineno="61" refid="classreal__time__tools_1_1PortConfig_1afdc811c6c73ada4b21dab246bf086506" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1PortConfig_1afdc811c6c73ada4b21dab246bf086506" kindref="member">parity_</ref>;</highlight></codeline>
<codeline lineno="65" refid="classreal__time__tools_1_1PortConfig_1a3303d793237edbfa0b3c28f3f01c3837" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreal__time__tools_1_1PortConfig_1a62bbab15705e2d5a9bc17115222f7c07" kindref="member">StopBits</ref><sp/><ref refid="classreal__time__tools_1_1PortConfig_1a3303d793237edbfa0b3c28f3f01c3837" kindref="member">stop_bits_</ref>;</highlight></codeline>
<codeline lineno="69" refid="classreal__time__tools_1_1PortConfig_1a6c1dbeb3cf3c772c9c1b4df71b8befd6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1PortConfig_1a6c1dbeb3cf3c772c9c1b4df71b8befd6" kindref="member">prepare_size_definition_</ref>;</highlight></codeline>
<codeline lineno="73" refid="classreal__time__tools_1_1PortConfig_1af80f9991e3811392385208a9baf9c6fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classreal__time__tools_1_1PortConfig_1a11e818aa26cd0a941ff00b9ccd4d2131" kindref="member">DataBits</ref><sp/><ref refid="classreal__time__tools_1_1PortConfig_1af80f9991e3811392385208a9baf9c6fd" kindref="member">data_bits_</ref>;</highlight></codeline>
<codeline lineno="77" refid="classreal__time__tools_1_1PortConfig_1aa0be2d74f3ac70e9f43d36fc0c70901a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1PortConfig_1aa0be2d74f3ac70e9f43d36fc0c70901a" kindref="member">baude_rate_</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classreal__time__tools_1_1UsbStream" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreal__time__tools_1_1UsbStream" kindref="compound">UsbStream</ref>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="classreal__time__tools_1_1UsbStream" kindref="compound">UsbStream</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>~<ref refid="classreal__time__tools_1_1UsbStream" kindref="compound">UsbStream</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>open_device(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file_name);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_port_config(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1PortConfig" kindref="compound">PortConfig</ref>&amp;<sp/>user_config);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>close_device();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>read_device(std::vector&lt;uint8_t&gt;&amp;<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stream_on=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>write_device(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>activate_stream_mode();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_poll_mode_timeout(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeout_in_second);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flush(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>duration_ms<sp/>=<sp/>150);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>msg_debug_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>msg,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>until=-1);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test_msg_equal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>msg1,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>msg2);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201" refid="classreal__time__tools_1_1UsbStream_1ac8d1e2727668e9549dda2038248943d5" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classreal__time__tools_1_1UsbStream_1ac8d1e2727668e9549dda2038248943d5" kindref="member">file_name_</ref>;</highlight></codeline>
<codeline lineno="205" refid="classreal__time__tools_1_1UsbStream_1a52bf9e29fde33e865daef464a01738af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1UsbStream_1a52bf9e29fde33e865daef464a01738af" kindref="member">file_id_</ref>;</highlight></codeline>
<codeline lineno="209" refid="classreal__time__tools_1_1UsbStream_1a272dd207ec047d29b00e099bff188ac6" refkind="member"><highlight class="normal"><sp/><sp/>ssize_t<sp/><ref refid="classreal__time__tools_1_1UsbStream_1a272dd207ec047d29b00e099bff188ac6" kindref="member">return_value_</ref>;<sp/></highlight></codeline>
<codeline lineno="213" refid="classreal__time__tools_1_1UsbStream_1a76378aaeca606027408ebd5c7f06e97e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1UsbStream_1a76378aaeca606027408ebd5c7f06e97e" kindref="member">timeout_set_</ref>;</highlight></codeline>
<codeline lineno="217" refid="classreal__time__tools_1_1UsbStream_1afa70d692f2715d9a42e1a2d3a91f876a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1UsbStream_1afa70d692f2715d9a42e1a2d3a91f876a" kindref="member">timeout_</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(XENOMAI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(RT_PREEMPT)<sp/>||<sp/>defined(NON_REAL_TIME)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">termios<sp/>config_;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>timeout_posix_;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>fd_set<sp/>file_id_set_;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="classreal__time__tools_1_1UsbStream_1ae5a19cde3cc21a0c878be3fe4cb54f2d" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/><ref refid="classreal__time__tools_1_1UsbStream_1ae5a19cde3cc21a0c878be3fe4cb54f2d" kindref="member">buffer_</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>HEADER<sp/>PROTECTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>/**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@brief<sp/>Verify<sp/>if<sp/>a<sp/>previous<sp/>command<sp/>has<sp/>been<sp/>taken<sp/>into<sp/>account.<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>suppose<sp/>that<sp/>the<sp/>protocole<sp/>of<sp/>communication<sp/>expect<sp/>a<sp/>command<sp/>in<sp/>and<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>command<sp/>out.<sp/>send<sp/>a<sp/>get<sp/>data<sp/>code:<sp/>&quot;id&quot;<sp/>and<sp/>receive<sp/>&quot;id<sp/>XXXXX&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>Typically<sp/>IMU<sp/>from<sp/>MicrosStrain<sp/>follow<sp/>this<sp/>procedure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@param<sp/>rep<sp/>is<sp/>the<sp/>output<sp/>buffer<sp/>of<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@param<sp/>rep_len<sp/>is<sp/>the<sp/>expected<sp/>message<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@return<sp/>true<sp/>if<sp/>the<sp/>message<sp/>contains<sp/>the<sp/>expected<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@return<sp/>false<sp/>if<sp/>the<sp/>checksum<sp/>is<sp/>incorrect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>virtual<sp/>bool<sp/>is_checksum_correct(const<sp/>ImuMsg&amp;<sp/>msg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>/**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@brief<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@param<sp/>command<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@param<sp/>reply<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@return<sp/>true<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@return<sp/>false<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>read_misaligned_msg_from_device(ImuMsg&amp;<sp/>msg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>/**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@brief<sp/>byte<sp/>swap<sp/>of<sp/>uint16_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@param<sp/>x<sp/>the<sp/>uint16_t<sp/>to<sp/>byte<sp/>swap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@return<sp/>swapped<sp/>uint16_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>uint16_t<sp/>bswap_16(uint16_t<sp/>x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{return<sp/>(x<sp/>&gt;&gt;<sp/>8)<sp/>|<sp/>(x<sp/>&lt;&lt;<sp/>8);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>/**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@brief<sp/>byte<sp/>swap<sp/>of<sp/>uint32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@param<sp/>x<sp/>the<sp/>uint32_t<sp/>to<sp/>byte<sp/>swap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@return<sp/>swapped<sp/>uint32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>uint32_t<sp/>bswap_32(uint32_t<sp/>x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{return<sp/>(bswap_16(x<sp/>&amp;<sp/>0xffff)<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(bswap_16(x<sp/>&gt;&gt;<sp/>16));}</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/real_time_tools/usb_stream.hpp"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="demo__spinner_8cpp" kind="file" language="C++">
    <compoundname>demo_spinner.cpp</compoundname>
    <includes refid="spinner_8hpp" local="yes">real_time_tools/spinner.hpp</includes>
    <includes refid="thread_8hpp" local="yes">real_time_tools/thread.hpp</includes>
    <includes refid="realtime__check_8hpp" local="yes">real_time_tools/realtime_check.hpp</includes>
    <incdepgraph>
      <node id="444">
        <label>functional</label>
      </node>
      <node id="447">
        <label>limits</label>
      </node>
      <node id="441">
        <label>string</label>
      </node>
      <node id="437">
        <label>real_time_tools/spinner.hpp</label>
        <link refid="spinner_8hpp"/>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
      </node>
      <node id="445">
        <label>real_time_tools/realtime_check.hpp</label>
        <link refid="realtime__check_8hpp"/>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
      </node>
      <node id="436">
        <label>demos/demo_spinner.cpp</label>
        <link refid="demo_spinner.cpp"/>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
      </node>
      <node id="440">
        <label>real_time_tools/thread.hpp</label>
        <link refid="thread_8hpp"/>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
      </node>
      <node id="439">
        <label>unistd.h</label>
      </node>
      <node id="442">
        <label>vector</label>
      </node>
      <node id="448">
        <label>math.h</label>
      </node>
      <node id="446">
        <label>iostream</label>
      </node>
      <node id="449">
        <label>mutex</label>
      </node>
      <node id="438">
        <label>chrono</label>
      </node>
      <node id="443">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="demo__spinner_8cpp_1a16919b2a4211953c87d405d40b432427" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>THREAD_FUNCTION_RETURN_TYPE</type>
        <definition>THREAD_FUNCTION_RETURN_TYPE thread_function</definition>
        <argsstring>(void *)</argsstring>
        <name>thread_function</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
<para>implement a real time thread checking the timing of the loop </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_spinner.cpp" line="16" column="1" bodyfile="demos/demo_spinner.cpp" bodystart="16" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="demo__spinner_8cpp_1a81ce304348a420752ee080480d2b3095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int, char *[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>char *</type>
          <array>[]</array>
        </param>
        <briefdescription>
<para>This a demo on how to use the RealTimeCheck class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_spinner.cpp" line="41" column="1" bodyfile="demos/demo_spinner.cpp" bodystart="41" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Demo of the spinner class usage. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Maximilien Naveau (<ulink url="mailto:maximilien.naveau@gmail.com">maximilien.naveau@gmail.com</ulink>) license License BSD-3-Clause </para></simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-05-22 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spinner_8hpp" kindref="compound">real_time_tools/spinner.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="thread_8hpp" kindref="compound">real_time_tools/thread.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="realtime__check_8hpp" kindref="compound">real_time_tools/realtime_check.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">THREAD_FUNCTION_RETURN_TYPE<sp/><ref refid="demo__spinner_8cpp_1a16919b2a4211953c87d405d40b432427" kindref="member">thread_function</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frequency<sp/>=<sp/>300.0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>switch_frequency<sp/>=<sp/>290;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeCheck" kindref="compound">real_time_tools::RealTimeCheck</ref><sp/>realtime_check(frequency,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch_frequency);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="classreal__time__tools_1_1Spinner" kindref="compound">real_time_tools::Spinner</ref><sp/>spinner;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>spinner.<ref refid="classreal__time__tools_1_1Spinner_1afa4e24e5dbbbfa2e0d694ef2e3fa3bb8" kindref="member">set_frequency</ref>(frequency);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;500;i++){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>realtime_check.tick();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>spinner.<ref refid="classreal__time__tools_1_1Spinner_1aa07d4fa32ead44008daa73663508139d" kindref="member">spin</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>realtime_check.print();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>THREAD_FUNCTION_RETURN_VALUE;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="demo__spinner_8cpp_1a81ce304348a420752ee080480d2b3095" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>[])<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThread" kindref="compound">real_time_tools::RealTimeThread</ref><sp/>thread;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>thread.<ref refid="classreal__time__tools_1_1RealTimeThread_1a232e3955fee6e80c3a7ded68f165414b" kindref="member">create_realtime_thread</ref>(<ref refid="demo__spinner_8cpp_1a16919b2a4211953c87d405d40b432427" kindref="member">thread_function</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>thread.<ref refid="classreal__time__tools_1_1RealTimeThread_1a2f455db9fd80b81e5e69cd22e8529979" kindref="member">join</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="demos/demo_spinner.cpp"/>
  </compounddef>
</doxygen>

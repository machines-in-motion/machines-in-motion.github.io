<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="thread_8hpp" kind="file" language="C++">
    <compoundname>thread.hpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">memory</includes>
    <includes local="no">functional</includes>
    <includedby refid="demo__realtime__check_8cpp" local="yes">demos/demo_realtime_check.cpp</includedby>
    <includedby refid="demo__realtime__strict__check_8cpp" local="yes">demos/demo_realtime_strict_check.cpp</includedby>
    <includedby refid="demo__spinner_8cpp" local="yes">demos/demo_spinner.cpp</includedby>
    <includedby refid="demo__thread_8cpp" local="yes">demos/demo_thread.cpp</includedby>
    <includedby refid="demo__timing_8cpp" local="yes">demos/demo_timing.cpp</includedby>
    <includedby refid="realtime__test_8cpp" local="yes">src/bin/realtime_test.cpp</includedby>
    <includedby refid="thread_8cpp" local="yes">src/thread.cpp</includedby>
    <incdepgraph>
      <node id="589">
        <label>functional</label>
      </node>
      <node id="586">
        <label>string</label>
      </node>
      <node id="585">
        <label>include/real_time_tools/thread.hpp</label>
        <link refid="thread.hpp"/>
        <childnode refid="586" relation="include">
        </childnode>
        <childnode refid="587" relation="include">
        </childnode>
        <childnode refid="588" relation="include">
        </childnode>
        <childnode refid="589" relation="include">
        </childnode>
      </node>
      <node id="587">
        <label>vector</label>
      </node>
      <node id="588">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="592">
        <label>demos/demo_realtime_strict_check.cpp</label>
        <link refid="demo__realtime__strict__check_8cpp"/>
      </node>
      <node id="591">
        <label>demos/demo_realtime_check.cpp</label>
        <link refid="demo__realtime__check_8cpp"/>
      </node>
      <node id="594">
        <label>demos/demo_thread.cpp</label>
        <link refid="demo__thread_8cpp"/>
      </node>
      <node id="593">
        <label>demos/demo_spinner.cpp</label>
        <link refid="demo__spinner_8cpp"/>
      </node>
      <node id="595">
        <label>demos/demo_timing.cpp</label>
        <link refid="demo__timing_8cpp"/>
      </node>
      <node id="590">
        <label>include/real_time_tools/thread.hpp</label>
        <link refid="thread.hpp"/>
        <childnode refid="591" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
        <childnode refid="593" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
      </node>
      <node id="597">
        <label>src/thread.cpp</label>
        <link refid="thread_8cpp"/>
      </node>
      <node id="596">
        <label>src/bin/realtime_test.cpp</label>
        <link refid="realtime__test_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classreal__time__tools_1_1RealTimeThreadParameters" prot="public">real_time_tools::RealTimeThreadParameters</innerclass>
    <innerclass refid="classreal__time__tools_1_1RealTimeThread" prot="public">real_time_tools::RealTimeThread</innerclass>
    <innernamespace refid="namespacereal__time__tools">real_time_tools</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Maximilien Naveau (<ulink url="mailto:mnaveau@tue.mpg.de">mnaveau@tue.mpg.de</ulink>) license License BSD-3-Clause </para></simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-11-21 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#ifndef<sp/>REALTIME_THREAD_CREATION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REALTIME_THREAD_CREATION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>XENOMAI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>MAY<sp/>need<sp/>to<sp/>happend<sp/>&quot;static&quot;<sp/>upon<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>THREAD_FUNCTION_RETURN_TYPE<sp/>void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>THREAD_FUNCTION_RETURN_VALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;native/task.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;native/timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;native/sem.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;native/cond.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;native/pipe.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;native/mutex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;rtdk.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>NON_REAL_TIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>need<sp/>to<sp/>happend<sp/>&quot;static&quot;<sp/>upon<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>THREAD_FUNCTION_RETURN_TYPE<sp/>void*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>THREAD_FUNCTION_RETURN_VALUE<sp/>nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>rt_printf<sp/>printf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>RT_PREEMPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;sched.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>need<sp/>to<sp/>happend<sp/>&quot;static&quot;<sp/>upon<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>THREAD_FUNCTION_RETURN_TYPE<sp/>void*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>THREAD_FUNCTION_RETURN_VALUE<sp/>nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>rt_printf<sp/>printf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacereal__time__tools" kindref="compound">real_time_tools</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classreal__time__tools_1_1RealTimeThreadParameters" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreal__time__tools_1_1RealTimeThreadParameters" kindref="compound">RealTimeThreadParameters</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76" refid="classreal__time__tools_1_1RealTimeThreadParameters_1a3c23c4f6a5b8ac991072e247f536fcd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1a3c23c4f6a5b8ac991072e247f536fcd8" kindref="member">RealTimeThreadParameters</ref>(){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1a9db02f30ad6b4d6cfa3ca49dbd63e0f4" kindref="member">keyword_</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;real_time_thread&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1aa373ac14aa6feca83382b8aefdf27409" kindref="member">priority_</ref><sp/>=<sp/>80;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>XENOMAI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//https://xenomai.org/documentation/xenomai-2.6/html/api/group__task.html#ga520e6fad1decc5beff58b394ff443265</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1ac31bba1a59fa600c2c0e4737a79807c4" kindref="member">stack_size_</ref><sp/>=<sp/>2000000;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1a5a6b8b14d0e82962ae6e68d34086ffed" kindref="member">dedicated_cpu_id_</ref>=-1;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1aa373ac14aa6feca83382b8aefdf27409" kindref="member">priority_</ref>=75;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>too<sp/>high<sp/>to<sp/>avoid<sp/>competition<sp/>with<sp/>SL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>NON_REAL_TIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1ac31bba1a59fa600c2c0e4737a79807c4" kindref="member">stack_size_</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>RT_PREEMPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1ac31bba1a59fa600c2c0e4737a79807c4" kindref="member">stack_size_</ref><sp/>=<sp/>50*PTHREAD_STACK_MIN;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1ac6879cacfd97ddf46ad46b94a79a9696" kindref="member">cpu_id_</ref>.clear();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1a50e8eae41f8284867f073aa802d9afa2" kindref="member">delay_ns_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1a134856e17552d3f31a093f3a1f5d1639" kindref="member">block_memory_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1afc9891b44025aab8b383e91d907d41b0" kindref="member">cpu_dma_latency_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98" refid="classreal__time__tools_1_1RealTimeThreadParameters_1a9b6720cd9e0da2ad81e22e337a76d7ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1a9b6720cd9e0da2ad81e22e337a76d7ea" kindref="member">~RealTimeThreadParameters</ref>(){}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104" refid="classreal__time__tools_1_1RealTimeThreadParameters_1a9db02f30ad6b4d6cfa3ca49dbd63e0f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1a9db02f30ad6b4d6cfa3ca49dbd63e0f4" kindref="member">keyword_</ref>;</highlight></codeline>
<codeline lineno="108" refid="classreal__time__tools_1_1RealTimeThreadParameters_1aa373ac14aa6feca83382b8aefdf27409" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1aa373ac14aa6feca83382b8aefdf27409" kindref="member">priority_</ref>;</highlight></codeline>
<codeline lineno="112" refid="classreal__time__tools_1_1RealTimeThreadParameters_1ac31bba1a59fa600c2c0e4737a79807c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1ac31bba1a59fa600c2c0e4737a79807c4" kindref="member">stack_size_</ref>;</highlight></codeline>
<codeline lineno="117" refid="classreal__time__tools_1_1RealTimeThreadParameters_1ac6879cacfd97ddf46ad46b94a79a9696" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1ac6879cacfd97ddf46ad46b94a79a9696" kindref="member">cpu_id_</ref>;</highlight></codeline>
<codeline lineno="121" refid="classreal__time__tools_1_1RealTimeThreadParameters_1a5a6b8b14d0e82962ae6e68d34086ffed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1a5a6b8b14d0e82962ae6e68d34086ffed" kindref="member">dedicated_cpu_id_</ref>;</highlight></codeline>
<codeline lineno="125" refid="classreal__time__tools_1_1RealTimeThreadParameters_1a50e8eae41f8284867f073aa802d9afa2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1a50e8eae41f8284867f073aa802d9afa2" kindref="member">delay_ns_</ref>;</highlight></codeline>
<codeline lineno="131" refid="classreal__time__tools_1_1RealTimeThreadParameters_1a134856e17552d3f31a093f3a1f5d1639" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1a134856e17552d3f31a093f3a1f5d1639" kindref="member">block_memory_</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classreal__time__tools_1_1RealTimeThreadParameters_1afc9891b44025aab8b383e91d907d41b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters_1afc9891b44025aab8b383e91d907d41b0" kindref="member">cpu_dma_latency_</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classreal__time__tools_1_1RealTimeThread" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classreal__time__tools_1_1RealTimeThread" kindref="compound">RealTimeThread</ref></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThread" kindref="compound">RealTimeThread</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThread" kindref="compound">RealTimeThread</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classreal__time__tools_1_1RealTimeThread" kindref="compound">real_time_tools::RealTimeThread</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classreal__time__tools_1_1RealTimeThread" kindref="compound">RealTimeThread</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>XENOMAI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>create_realtime_thread(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*<ref refid="demo__realtime__check_8cpp_1a16919b2a4211953c87d405d40b432427" kindref="member">thread_function</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>args<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>create_realtime_thread(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*(*<ref refid="demo__realtime__check_8cpp_1a16919b2a4211953c87d405d40b432427" kindref="member">thread_function</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>args<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>join();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>block_memory();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classreal__time__tools_1_1RealTimeThread_1aa15b5633e76ea6b4c31cd74b3968686a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThreadParameters" kindref="compound">RealTimeThreadParameters</ref><sp/><ref refid="classreal__time__tools_1_1RealTimeThread_1aa15b5633e76ea6b4c31cd74b3968686a" kindref="member">parameters_</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(XENOMAI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>RT_TASK<sp/>thread_;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(NON_REAL_TIME)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;std::thread&gt;<sp/>thread_;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(RT_PREEMPT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;pthread_t&gt;<sp/>thread_;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>real_time_tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>REALTIME_THREAD_CREATION_HPP</highlight></codeline>
    </programlisting>
    <location file="include/real_time_tools/thread.hpp"/>
  </compounddef>
</doxygen>

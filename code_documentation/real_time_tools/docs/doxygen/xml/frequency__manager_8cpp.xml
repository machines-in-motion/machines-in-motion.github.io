<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="frequency__manager_8cpp" kind="file" language="C++">
    <compoundname>frequency_manager.cpp</compoundname>
    <includes refid="frequency__manager_8hpp" local="yes">real_time_tools/frequency_manager.hpp</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="731">
        <label>real_time_tools/iostream.hpp</label>
        <link refid="iostream_8hpp"/>
        <childnode refid="732" relation="include">
        </childnode>
      </node>
      <node id="729">
        <label>cmath</label>
      </node>
      <node id="727">
        <label>string</label>
      </node>
      <node id="730">
        <label>unistd.h</label>
      </node>
      <node id="732">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="723">
        <label>src/frequency_manager.cpp</label>
        <link refid="frequency_manager.cpp"/>
        <childnode refid="724" relation="include">
        </childnode>
        <childnode refid="733" relation="include">
        </childnode>
      </node>
      <node id="733">
        <label>iostream</label>
      </node>
      <node id="728">
        <label>deque</label>
      </node>
      <node id="725">
        <label>real_time_tools/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="726" relation="include">
        </childnode>
        <childnode refid="727" relation="include">
        </childnode>
        <childnode refid="728" relation="include">
        </childnode>
        <childnode refid="729" relation="include">
        </childnode>
        <childnode refid="730" relation="include">
        </childnode>
        <childnode refid="731" relation="include">
        </childnode>
      </node>
      <node id="726">
        <label>chrono</label>
      </node>
      <node id="724">
        <label>real_time_tools/frequency_manager.hpp</label>
        <link refid="frequency__manager_8hpp"/>
        <childnode refid="725" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacereal__time__tools">real_time_tools</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="frequency__manager_8hpp" kindref="compound">real_time_tools/frequency_manager.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacereal__time__tools" kindref="compound">real_time_tools</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal">FrequencyManager::FrequencyManager(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frequency)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>period_ms_((1.0<sp/>/<sp/>frequency)<sp/>*<sp/>1000.0),<sp/>previous_time_ms_(-1)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FrequencyManager::wait()</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>Timer::get_current_time_ms();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_time_ms_<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_time_ms_<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>t<sp/>-<sp/>previous_time_ms_;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delta<sp/>&gt;<sp/>period_ms_)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_time_ms_<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>Timer::sleep_ms(period_ms_<sp/>-<sp/>delta);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_time_ms_<sp/>=<sp/>Timer::get_current_time_ms();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/frequency_manager.cpp"/>
  </compounddef>
</doxygen>

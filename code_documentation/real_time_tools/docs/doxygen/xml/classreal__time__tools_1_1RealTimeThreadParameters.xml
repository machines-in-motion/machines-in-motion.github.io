<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classreal__time__tools_1_1RealTimeThreadParameters" kind="class" language="C++" prot="public">
    <compoundname>real_time_tools::RealTimeThreadParameters</compoundname>
    <includes refid="thread_8hpp" local="no">thread.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classreal__time__tools_1_1RealTimeThreadParameters_1a9db02f30ad6b4d6cfa3ca49dbd63e0f4" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string real_time_tools::RealTimeThreadParameters::keyword_</definition>
        <argsstring></argsstring>
        <name>keyword_</name>
        <briefdescription>
<para>Used in xenomai to define the thread id. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/thread.hpp" line="104" column="1" bodyfile="include/real_time_tools/thread.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreal__time__tools_1_1RealTimeThreadParameters_1aa373ac14aa6feca83382b8aefdf27409" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int real_time_tools::RealTimeThreadParameters::priority_</definition>
        <argsstring></argsstring>
        <name>priority_</name>
        <briefdescription>
<para>Defines the thread priority from 0 to 100. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/thread.hpp" line="108" column="1" bodyfile="include/real_time_tools/thread.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreal__time__tools_1_1RealTimeThreadParameters_1ac31bba1a59fa600c2c0e4737a79807c4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int real_time_tools::RealTimeThreadParameters::stack_size_</definition>
        <argsstring></argsstring>
        <name>stack_size_</name>
        <briefdescription>
<para>Define the stack size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/thread.hpp" line="112" column="1" bodyfile="include/real_time_tools/thread.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreal__time__tools_1_1RealTimeThreadParameters_1ac6879cacfd97ddf46ad46b94a79a9696" prot="public" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; real_time_tools::RealTimeThreadParameters::cpu_id_</definition>
        <argsstring></argsstring>
        <name>cpu_id_</name>
        <briefdescription>
<para>Define the cpu affinity. </para>        </briefdescription>
        <detaileddescription>
<para>Which means on which cpu(s) the thread is going to run </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/thread.hpp" line="117" column="1" bodyfile="include/real_time_tools/thread.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreal__time__tools_1_1RealTimeThreadParameters_1a5a6b8b14d0e82962ae6e68d34086ffed" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int real_time_tools::RealTimeThreadParameters::dedicated_cpu_id_</definition>
        <argsstring></argsstring>
        <name>dedicated_cpu_id_</name>
        <briefdescription>
<para>indicate on which cpu the thread will run (xenomai only) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/thread.hpp" line="121" column="1" bodyfile="include/real_time_tools/thread.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreal__time__tools_1_1RealTimeThreadParameters_1a50e8eae41f8284867f073aa802d9afa2" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int real_time_tools::RealTimeThreadParameters::delay_ns_</definition>
        <argsstring></argsstring>
        <name>delay_ns_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>Unknow Xenomai parameter </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/thread.hpp" line="125" column="1" bodyfile="include/real_time_tools/thread.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreal__time__tools_1_1RealTimeThreadParameters_1a134856e17552d3f31a093f3a1f5d1639" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool real_time_tools::RealTimeThreadParameters::block_memory_</definition>
        <argsstring></argsstring>
        <name>block_memory_</name>
        <briefdescription>
<para>Defines if the thread should block the memory in a &quot;page&quot; or if several pages can be use. </para>        </briefdescription>
        <detaileddescription>
<para>Switching memory page is time consumming and a non real time operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/thread.hpp" line="131" column="1" bodyfile="include/real_time_tools/thread.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreal__time__tools_1_1RealTimeThreadParameters_1afc9891b44025aab8b383e91d907d41b0" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int real_time_tools::RealTimeThreadParameters::cpu_dma_latency_</definition>
        <argsstring></argsstring>
        <name>cpu_dma_latency_</name>
        <briefdescription>
<para>Maximum desired latency of the CPU in microseconds. </para>        </briefdescription>
        <detaileddescription>
<para>Set to 0 to get best real-time performance. Set to any negative value if you do not want the thread to change the CPU latency. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/thread.hpp" line="139" column="1" bodyfile="include/real_time_tools/thread.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classreal__time__tools_1_1RealTimeThreadParameters_1a3c23c4f6a5b8ac991072e247f536fcd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>real_time_tools::RealTimeThreadParameters::RealTimeThreadParameters</definition>
        <argsstring>()</argsstring>
        <name>RealTimeThreadParameters</name>
        <briefdescription>
<para>Construct a new <ref refid="classreal__time__tools_1_1RealTimeThreadParameters" kindref="compound">RealTimeThreadParameters</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/thread.hpp" line="76" column="1" bodyfile="include/real_time_tools/thread.hpp" bodystart="76" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classreal__time__tools_1_1RealTimeThreadParameters_1a9b6720cd9e0da2ad81e22e337a76d7ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>real_time_tools::RealTimeThreadParameters::~RealTimeThreadParameters</definition>
        <argsstring>()</argsstring>
        <name>~RealTimeThreadParameters</name>
        <briefdescription>
<para>Destroy the <ref refid="classreal__time__tools_1_1RealTimeThreadParameters" kindref="compound">RealTimeThreadParameters</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/thread.hpp" line="98" column="1" bodyfile="include/real_time_tools/thread.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is a data structure allowing the user to share configurations among threads. </para>    </briefdescription>
    <detaileddescription>
<para>These parameter allows you to generate real threads in xenomai and rt_preempt. The same code is compatible with Mac and ubuntu but will run non-real time threads.</para><para>warning : initial version, copy pasted from : <ulink url="https://wiki.linuxfoundation.org/realtime/documentation/howto/applications/application_base">https://wiki.linuxfoundation.org/realtime/documentation/howto/applications/application_base</ulink> I did not study things now, so this likely needs improvement (alternative: <ulink url="https://rt.wiki.kernel.org/index.php/Threaded_RT-application_with_memory_locking_and_stack_handling_example">https://rt.wiki.kernel.org/index.php/Threaded_RT-application_with_memory_locking_and_stack_handling_example</ulink>) note: if failed as mlockall, run executable with sudo or be part of the real_time group or xenomai group. </para>    </detaileddescription>
    <location file="include/real_time_tools/thread.hpp" line="71" column="1" bodyfile="include/real_time_tools/thread.hpp" bodystart="70" bodyend="140"/>
    <listofallmembers>
      <member refid="classreal__time__tools_1_1RealTimeThreadParameters_1a134856e17552d3f31a093f3a1f5d1639" prot="public" virt="non-virtual"><scope>real_time_tools::RealTimeThreadParameters</scope><name>block_memory_</name></member>
      <member refid="classreal__time__tools_1_1RealTimeThreadParameters_1afc9891b44025aab8b383e91d907d41b0" prot="public" virt="non-virtual"><scope>real_time_tools::RealTimeThreadParameters</scope><name>cpu_dma_latency_</name></member>
      <member refid="classreal__time__tools_1_1RealTimeThreadParameters_1ac6879cacfd97ddf46ad46b94a79a9696" prot="public" virt="non-virtual"><scope>real_time_tools::RealTimeThreadParameters</scope><name>cpu_id_</name></member>
      <member refid="classreal__time__tools_1_1RealTimeThreadParameters_1a5a6b8b14d0e82962ae6e68d34086ffed" prot="public" virt="non-virtual"><scope>real_time_tools::RealTimeThreadParameters</scope><name>dedicated_cpu_id_</name></member>
      <member refid="classreal__time__tools_1_1RealTimeThreadParameters_1a50e8eae41f8284867f073aa802d9afa2" prot="public" virt="non-virtual"><scope>real_time_tools::RealTimeThreadParameters</scope><name>delay_ns_</name></member>
      <member refid="classreal__time__tools_1_1RealTimeThreadParameters_1a9db02f30ad6b4d6cfa3ca49dbd63e0f4" prot="public" virt="non-virtual"><scope>real_time_tools::RealTimeThreadParameters</scope><name>keyword_</name></member>
      <member refid="classreal__time__tools_1_1RealTimeThreadParameters_1aa373ac14aa6feca83382b8aefdf27409" prot="public" virt="non-virtual"><scope>real_time_tools::RealTimeThreadParameters</scope><name>priority_</name></member>
      <member refid="classreal__time__tools_1_1RealTimeThreadParameters_1a3c23c4f6a5b8ac991072e247f536fcd8" prot="public" virt="non-virtual"><scope>real_time_tools::RealTimeThreadParameters</scope><name>RealTimeThreadParameters</name></member>
      <member refid="classreal__time__tools_1_1RealTimeThreadParameters_1ac31bba1a59fa600c2c0e4737a79807c4" prot="public" virt="non-virtual"><scope>real_time_tools::RealTimeThreadParameters</scope><name>stack_size_</name></member>
      <member refid="classreal__time__tools_1_1RealTimeThreadParameters_1a9b6720cd9e0da2ad81e22e337a76d7ea" prot="public" virt="non-virtual"><scope>real_time_tools::RealTimeThreadParameters</scope><name>~RealTimeThreadParameters</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

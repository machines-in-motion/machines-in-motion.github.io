<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classreal__time__tools_1_1ThreadsafeObject" kind="class" language="C++" prot="public">
    <compoundname>real_time_tools::ThreadsafeObject</compoundname>
    <includes refid="threadsafe__object_8hpp" local="no">threadsafe_object.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>Types</declname>
        <defname>Types</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classreal__time__tools_1_1ThreadsafeObject_1aa40f755aebba0692a345e2b807d781ed" prot="public" static="no">
        <type>typename std::tuple_element&lt; INDEX, std::tuple&lt; Types... &gt;&gt;::type</type>
        <definition>using real_time_tools::ThreadsafeObject&lt; Types &gt;::Type =  typename std::tuple_element&lt;INDEX, std::tuple&lt;Types...&gt;&gt;::type</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
<para>Define a specific &quot;Type&quot; which permit a more readable code. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>INDEX</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="271" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classreal__time__tools_1_1ThreadsafeObject_1af05c02b66f0b75ea12cde9274bc2a97d" prot="public" static="yes" mutable="no">
        <type>const std::size_t</type>
        <definition>const std::size_t real_time_tools::ThreadsafeObject&lt; Types &gt;::SIZE</definition>
        <argsstring></argsstring>
        <name>SIZE</name>
        <initializer>= sizeof...(Types)</initializer>
        <briefdescription>
<para>Define the size of the different types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="277" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classreal__time__tools_1_1ThreadsafeObject_1a2e73d9d8db2fd54768adfd2f67df68fb" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; std::tuple&lt; Types... &gt; &gt;</type>
        <definition>std::shared_ptr&lt;std::tuple&lt;Types ...&gt; &gt; real_time_tools::ThreadsafeObject&lt; Types &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
<para>the actual data buffers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="338" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hpp" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreal__time__tools_1_1ThreadsafeObject_1a0f39feab7508852adab81ad4318f47e6" prot="private" static="no" mutable="yes">
        <type>std::shared_ptr&lt; std::condition_variable &gt;</type>
        <definition>std::shared_ptr&lt;std::condition_variable&gt; real_time_tools::ThreadsafeObject&lt; Types &gt;::condition_</definition>
        <argsstring></argsstring>
        <name>condition_</name>
        <briefdescription>
<para>a condition variable that allow to wait until one data has been changed in the buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="343" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hpp" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreal__time__tools_1_1ThreadsafeObject_1a202a8fd66fe64138bc0cfa35a8dd745e" prot="private" static="no" mutable="yes">
        <type>std::shared_ptr&lt; std::mutex &gt;</type>
        <definition>std::shared_ptr&lt;std::mutex&gt; real_time_tools::ThreadsafeObject&lt; Types &gt;::condition_mutex_</definition>
        <argsstring></argsstring>
        <name>condition_mutex_</name>
        <briefdescription>
<para>The mutex of the condition variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="347" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hpp" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreal__time__tools_1_1ThreadsafeObject_1a20e108057d1da31ebc416d5b3577ac21" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; std::array&lt; size_t, <ref refid="classreal__time__tools_1_1ThreadsafeObject_1af05c02b66f0b75ea12cde9274bc2a97d" kindref="member">SIZE</ref> &gt; &gt;</type>
        <definition>std::shared_ptr&lt;std::array&lt;size_t, SIZE&gt; &gt; real_time_tools::ThreadsafeObject&lt; Types &gt;::modification_counts_</definition>
        <argsstring></argsstring>
        <name>modification_counts_</name>
        <briefdescription>
<para>This is counting the data modification occurences for each individual buffers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="352" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hpp" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreal__time__tools_1_1ThreadsafeObject_1a12f866f5a2f955aa3b55b03623033fca" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; size_t &gt;</type>
        <definition>std::shared_ptr&lt;size_t&gt; real_time_tools::ThreadsafeObject&lt; Types &gt;::total_modification_count_</definition>
        <argsstring></argsstring>
        <name>total_modification_count_</name>
        <briefdescription>
<para>This is counting the all data modification occurences for all buffer. </para>        </briefdescription>
        <detaileddescription>
<para>/todo Can&apos;t we just some the modification_counts_ array whenever needed? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="358" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hpp" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classreal__time__tools_1_1ThreadsafeObject_1a8a4e122257d25cf42a389c56daf41cb7" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; std::array&lt; std::mutex, <ref refid="classreal__time__tools_1_1ThreadsafeObject_1af05c02b66f0b75ea12cde9274bc2a97d" kindref="member">SIZE</ref> &gt; &gt;</type>
        <definition>std::shared_ptr&lt;std::array&lt;std::mutex, SIZE&gt; &gt; real_time_tools::ThreadsafeObject&lt; Types &gt;::data_mutexes_</definition>
        <argsstring></argsstring>
        <name>data_mutexes_</name>
        <briefdescription>
<para>These are the individual mutexes of each data upon setting and getting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="363" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hpp" bodystart="363" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classreal__time__tools_1_1ThreadsafeObject_1a4b1b5185f60ed5228e307c10639dfe63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>real_time_tools::ThreadsafeObject&lt; Types &gt;::ThreadsafeObject</definition>
        <argsstring>()</argsstring>
        <name>ThreadsafeObject</name>
        <briefdescription>
<para>Construct a new <ref refid="classreal__time__tools_1_1ThreadsafeObject" kindref="compound">ThreadsafeObject</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="282" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hxx" bodystart="159" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classreal__time__tools_1_1ThreadsafeObject_1a83fbbd7ec1e88f3e58d9644c561d10d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void real_time_tools::ThreadsafeObject&lt; Types &gt;::wait_for_update</definition>
        <argsstring>(unsigned index) const </argsstring>
        <name>wait_for_update</name>
        <param>
          <type>unsigned</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Wait until the data with the deignated index is changed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="289" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hxx" bodystart="212" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classreal__time__tools_1_1ThreadsafeObject_1aa072c55b6b539550a53d21f60464d058" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>INDEX</declname>
            <defname>INDEX</defname>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void real_time_tools::ThreadsafeObject&lt; Types &gt;::wait_for_update</definition>
        <argsstring>() const </argsstring>
        <name>wait_for_update</name>
        <briefdescription>
<para>Wait until the data with the designated index is changed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>INDEX=0</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="296" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hpp" bodystart="296" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classreal__time__tools_1_1ThreadsafeObject_1add7d192b535970c0b27371e505a2ff96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t real_time_tools::ThreadsafeObject&lt; Types &gt;::wait_for_update</definition>
        <argsstring>() const </argsstring>
        <name>wait_for_update</name>
        <briefdescription>
<para>Wait until any data has been changed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="306" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hxx" bodystart="235" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classreal__time__tools_1_1ThreadsafeObject_1ad04e1268e2988a199e785dca817b937a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>INDEX</declname>
            <defname>INDEX</defname>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classreal__time__tools_1_1ThreadsafeObject_1aa40f755aebba0692a345e2b807d781ed" kindref="member">Type</ref>&lt; INDEX &gt;</type>
        <definition>ThreadsafeObject&lt; Types... &gt;::Type&lt; INDEX &gt; real_time_tools::ThreadsafeObject&lt; Types &gt;::get</definition>
        <argsstring>() const </argsstring>
        <name>get</name>
        <briefdescription>
<para>Getters. </para>        </briefdescription>
        <detaileddescription>
<para>Get the data with the designated index. The index is resolved at compile time.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>INDEX=0</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Type&lt;INDEX&gt; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="319" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hxx" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classreal__time__tools_1_1ThreadsafeObject_1a57fe7089b589f905a13127c50ceb2dae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>INDEX</declname>
            <defname>INDEX</defname>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void real_time_tools::ThreadsafeObject&lt; Types &gt;::set</definition>
        <argsstring>(Type&lt; INDEX &gt; datum)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="classreal__time__tools_1_1ThreadsafeObject_1aa40f755aebba0692a345e2b807d781ed" kindref="member">Type</ref>&lt; INDEX &gt;</type>
          <declname>datum</declname>
        </param>
        <briefdescription>
<para>Setters. </para>        </briefdescription>
        <detaileddescription>
<para>Set the data with the designated index. The index is resolved at compile time.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>INDEX=0</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>datum</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="332" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classreal__time__tools_1_1ThreadsafeObject_1af476dc729bd9c02387d5fcf15e513448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>INDEX</declname>
            <defname>INDEX</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void real_time_tools::ThreadsafeObject&lt; Types &gt;::set</definition>
        <argsstring>(ThreadsafeObject&lt; Types... &gt;::Type&lt; INDEX &gt; datum)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="classreal__time__tools_1_1ThreadsafeObject" kindref="compound">ThreadsafeObject</ref>&lt; Types... &gt;::<ref refid="classreal__time__tools_1_1ThreadsafeObject_1aa40f755aebba0692a345e2b807d781ed" kindref="member">Type</ref>&lt; INDEX &gt;</type>
          <declname>datum</declname>
        </param>
        <briefdescription>
<para>Setters. </para>        </briefdescription>
        <detaileddescription>
<para>Set the data with the designated index. The index is resolved at compile time.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>INDEX=0</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>datum</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/real_time_tools/threadsafe/threadsafe_object.hxx" line="191" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hxx" bodystart="191" bodyend="209"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This object can have several types depending on what ones want to store. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Types</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="include/real_time_tools/threadsafe/threadsafe_object.hpp" line="264" column="1" bodyfile="include/real_time_tools/threadsafe/threadsafe_object.hpp" bodystart="263" bodyend="364"/>
    <listofallmembers>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1a0f39feab7508852adab81ad4318f47e6" prot="private" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>condition_</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1a202a8fd66fe64138bc0cfa35a8dd745e" prot="private" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>condition_mutex_</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1a2e73d9d8db2fd54768adfd2f67df68fb" prot="private" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>data_</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1a8a4e122257d25cf42a389c56daf41cb7" prot="private" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>data_mutexes_</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1ad04e1268e2988a199e785dca817b937a" prot="public" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>get</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1a20e108057d1da31ebc416d5b3577ac21" prot="private" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>modification_counts_</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1a57fe7089b589f905a13127c50ceb2dae" prot="public" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>set</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1af476dc729bd9c02387d5fcf15e513448" prot="public" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>set</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1af05c02b66f0b75ea12cde9274bc2a97d" prot="public" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>SIZE</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1a4b1b5185f60ed5228e307c10639dfe63" prot="public" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>ThreadsafeObject</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1a12f866f5a2f955aa3b55b03623033fca" prot="private" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>total_modification_count_</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1aa40f755aebba0692a345e2b807d781ed" prot="public" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>Type</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1a83fbbd7ec1e88f3e58d9644c561d10d4" prot="public" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>wait_for_update</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1aa072c55b6b539550a53d21f60464d058" prot="public" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>wait_for_update</name></member>
      <member refid="classreal__time__tools_1_1ThreadsafeObject_1add7d192b535970c0b27371e505a2ff96" prot="public" virt="non-virtual"><scope>real_time_tools::ThreadsafeObject</scope><name>wait_for_update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

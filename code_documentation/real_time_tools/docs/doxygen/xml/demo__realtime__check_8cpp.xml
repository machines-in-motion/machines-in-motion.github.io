<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="demo__realtime__check_8cpp" kind="file" language="C++">
    <compoundname>demo_realtime_check.cpp</compoundname>
    <includes refid="timer_8hpp" local="yes">real_time_tools/timer.hpp</includes>
    <includes refid="realtime__check_8hpp" local="yes">real_time_tools/realtime_check.hpp</includes>
    <includes refid="thread_8hpp" local="yes">real_time_tools/thread.hpp</includes>
    <incdepgraph>
      <node id="421">
        <label>functional</label>
      </node>
      <node id="415">
        <label>limits</label>
      </node>
      <node id="411">
        <label>real_time_tools/iostream.hpp</label>
        <link refid="iostream_8hpp"/>
        <childnode refid="412" relation="include">
        </childnode>
      </node>
      <node id="409">
        <label>cmath</label>
      </node>
      <node id="407">
        <label>string</label>
      </node>
      <node id="404">
        <label>demos/demo_realtime_check.cpp</label>
        <link refid="demo_realtime_check.cpp"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
      </node>
      <node id="413">
        <label>real_time_tools/realtime_check.hpp</label>
        <link refid="realtime__check_8hpp"/>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
      </node>
      <node id="418">
        <label>real_time_tools/thread.hpp</label>
        <link refid="thread_8hpp"/>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
      </node>
      <node id="410">
        <label>unistd.h</label>
      </node>
      <node id="419">
        <label>vector</label>
      </node>
      <node id="412">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="416">
        <label>math.h</label>
      </node>
      <node id="414">
        <label>iostream</label>
      </node>
      <node id="408">
        <label>deque</label>
      </node>
      <node id="405">
        <label>real_time_tools/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="410" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
      </node>
      <node id="417">
        <label>mutex</label>
      </node>
      <node id="406">
        <label>chrono</label>
      </node>
      <node id="420">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="demo__realtime__check_8cpp_1a16919b2a4211953c87d405d40b432427" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>THREAD_FUNCTION_RETURN_TYPE</type>
        <definition>THREAD_FUNCTION_RETURN_TYPE thread_function</definition>
        <argsstring>(void *)</argsstring>
        <name>thread_function</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Real time thread that measure the spinning frequency and do some basic operation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_realtime_check.cpp" line="16" column="1" bodyfile="demos/demo_realtime_check.cpp" bodystart="16" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="demo__realtime__check_8cpp_1a81ce304348a420752ee080480d2b3095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int, char *[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>char *</type>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a real time thread and measure the frequency of the thread. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_realtime_check.cpp" line="40" column="1" bodyfile="demos/demo_realtime_check.cpp" bodystart="40" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Check the real time capbilites of a loop. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Maximilien Naveau (<ulink url="mailto:maximilien.naveau@gmail.com">maximilien.naveau@gmail.com</ulink>) license License BSD-3-Clause </para></simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-05-22 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8hpp" kindref="compound">real_time_tools/timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="realtime__check_8hpp" kindref="compound">real_time_tools/realtime_check.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="thread_8hpp" kindref="compound">real_time_tools/thread.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">THREAD_FUNCTION_RETURN_TYPE<sp/><ref refid="demo__realtime__check_8cpp_1a16919b2a4211953c87d405d40b432427" kindref="member">thread_function</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq<sp/>=<sp/>1000.0;<sp/></highlight><highlight class="comment">//<sp/>1kz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>switch_freq<sp/>=<sp/>990;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeCheck" kindref="compound">real_time_tools::RealTimeCheck</ref><sp/>rc(freq,switch_freq);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_iteration<sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;sleeping<sp/>time<sp/>is<sp/>%f<sp/>seconds&quot;</highlight><highlight class="normal">,<sp/>1.0/freq);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0<sp/>;<sp/>i&lt;nb_iteration<sp/>;<sp/>++i){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>rc.tick();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>a++;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1Timer_1a0a0df8a3baef34e820203e5579afda38" kindref="member">real_time_tools::Timer::sleep_sec</ref>(1.0/freq);<sp/></highlight><highlight class="comment">//<sp/>microseconds,<sp/>so<sp/>in<sp/>Ghz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>rc.print();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>THREAD_FUNCTION_RETURN_VALUE;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="demo__realtime__check_8cpp_1a81ce304348a420752ee080480d2b3095" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>[])<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="classreal__time__tools_1_1RealTimeThread" kindref="compound">real_time_tools::RealTimeThread</ref><sp/>thread;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>thread.<ref refid="classreal__time__tools_1_1RealTimeThread_1a232e3955fee6e80c3a7ded68f165414b" kindref="member">create_realtime_thread</ref>(<ref refid="demo__realtime__check_8cpp_1a16919b2a4211953c87d405d40b432427" kindref="member">thread_function</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>thread.<ref refid="classreal__time__tools_1_1RealTimeThread_1a2f455db9fd80b81e5e69cd22e8529979" kindref="member">join</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="demos/demo_realtime_check.cpp"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="demo__checkpoint__timer_8cpp" kind="file" language="C++">
    <compoundname>demo_checkpoint_timer.cpp</compoundname>
    <includes refid="checkpoint__timer_8hpp" local="no">real_time_tools/checkpoint_timer.hpp</includes>
    <includes refid="timer_8hpp" local="no">real_time_tools/timer.hpp</includes>
    <incdepgraph>
      <node id="400">
        <label>real_time_tools/iostream.hpp</label>
        <link refid="iostream_8hpp"/>
        <childnode refid="401" relation="include">
        </childnode>
      </node>
      <node id="398">
        <label>cmath</label>
      </node>
      <node id="394">
        <label>string</label>
      </node>
      <node id="390">
        <label>demos/demo_checkpoint_timer.cpp</label>
        <link refid="demo_checkpoint_timer.cpp"/>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
      </node>
      <node id="399">
        <label>unistd.h</label>
      </node>
      <node id="391">
        <label>real_time_tools/checkpoint_timer.hpp</label>
        <link refid="checkpoint__timer_8hpp"/>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
      </node>
      <node id="401">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="392">
        <label>array</label>
      </node>
      <node id="402">
        <label>checkpoint_timer.hxx</label>
        <link refid="checkpoint__timer_8hxx"/>
      </node>
      <node id="393">
        <label>iostream</label>
      </node>
      <node id="397">
        <label>deque</label>
      </node>
      <node id="395">
        <label>timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="400" relation="include">
        </childnode>
      </node>
      <node id="396">
        <label>chrono</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="demo__checkpoint__timer_8cpp_1a02fd73d861ef2e4aabb38c0c9ff82947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
<para>Dummy function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_checkpoint_timer.cpp" line="20" column="1" bodyfile="demos/demo_checkpoint_timer.cpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="demo__checkpoint__timer_8cpp_1acb546a895e868f1a8fb9cb4b5a210f42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void do_some_stuff</definition>
        <argsstring>()</argsstring>
        <name>do_some_stuff</name>
        <briefdescription>
<para>Dummy function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_checkpoint_timer.cpp" line="25" column="1" bodyfile="demos/demo_checkpoint_timer.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="demo__checkpoint__timer_8cpp_1a609e6537df0c7eb15c1f5b4e02fbe0ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void write_log</definition>
        <argsstring>()</argsstring>
        <name>write_log</name>
        <briefdescription>
<para>Dummy function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="demos/demo_checkpoint_timer.cpp" line="30" column="1" bodyfile="demos/demo_checkpoint_timer.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="demo__checkpoint__timer_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
<para>Simple example on how to use the CheckpointTimer in a loop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>[Usage of CheckpointTimer]</para><para>[Usage of CheckpointTimer] </para>        </inbodydescription>
        <location file="demos/demo_checkpoint_timer.cpp" line="36" column="1" bodyfile="demos/demo_checkpoint_timer.cpp" bodystart="36" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="license_1_license000001"><xreftitle>License</xreftitle><xrefdescription><para>BSD 3-clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2020, New York University and Max Planck Gesellschaft </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="15"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="checkpoint__timer_8hpp" kindref="compound">real_time_tools/checkpoint_timer.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="timer_8hpp" kindref="compound">real_time_tools/timer.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="demo__checkpoint__timer_8cpp_1a02fd73d861ef2e4aabb38c0c9ff82947" kindref="member">init</ref>()</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1Timer_1abb2ce808994282d63846e7fca544f818" kindref="member">real_time_tools::Timer::sleep_ms</ref>(3);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="demo__checkpoint__timer_8cpp_1acb546a895e868f1a8fb9cb4b5a210f42" kindref="member">do_some_stuff</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1Timer_1abb2ce808994282d63846e7fca544f818" kindref="member">real_time_tools::Timer::sleep_ms</ref>(20);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="demo__checkpoint__timer_8cpp_1a609e6537df0c7eb15c1f5b4e02fbe0ed" kindref="member">write_log</ref>()</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1Timer_1abb2ce808994282d63846e7fca544f818" kindref="member">real_time_tools::Timer::sleep_ms</ref>(6);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="demo__checkpoint__timer_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>second<sp/>template<sp/>argument<sp/>to<sp/>false<sp/>to<sp/>disable<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1CheckpointTimer" kindref="compound">real_time_tools::CheckpointTimer&lt;3, true&gt;</ref><sp/>timer;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1000;<sp/>i++)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer.<ref refid="classreal__time__tools_1_1CheckpointTimer_1ad93a12cb74103528c8db4e7b1745eae6" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="demo__checkpoint__timer_8cpp_1a02fd73d861ef2e4aabb38c0c9ff82947" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer.<ref refid="classreal__time__tools_1_1CheckpointTimer_1a6e91b61b72c433a220b1bddb7a634bf5" kindref="member">checkpoint</ref>(</highlight><highlight class="stringliteral">&quot;initialize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="demo__checkpoint__timer_8cpp_1acb546a895e868f1a8fb9cb4b5a210f42" kindref="member">do_some_stuff</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer.<ref refid="classreal__time__tools_1_1CheckpointTimer_1a6e91b61b72c433a220b1bddb7a634bf5" kindref="member">checkpoint</ref>(</highlight><highlight class="stringliteral">&quot;do<sp/>some<sp/>stuff&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="demo__checkpoint__timer_8cpp_1a609e6537df0c7eb15c1f5b4e02fbe0ed" kindref="member">write_log</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer.<ref refid="classreal__time__tools_1_1CheckpointTimer_1a6e91b61b72c433a220b1bddb7a634bf5" kindref="member">checkpoint</ref>(</highlight><highlight class="stringliteral">&quot;logging&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>the<sp/>timing<sp/>results<sp/>every<sp/>100<sp/>iterations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>%<sp/>100<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>i<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer.<ref refid="classreal__time__tools_1_1CheckpointTimer_1acce8c21123fe6f450c8f22de575cfef8" kindref="member">print_statistics</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="demos/demo_checkpoint_timer.cpp"/>
  </compounddef>
</doxygen>

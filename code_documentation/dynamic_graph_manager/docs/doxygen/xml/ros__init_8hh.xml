<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ros__init_8hh" kind="file" language="C++">
    <compoundname>ros_init.hh</compoundname>
    <includes local="no">ros/ros.h</includes>
    <includedby refid="simple__dgm_8hpp" local="yes">demos/simple_dgm.hpp</includedby>
    <includedby refid="dynamic__graph__manager_8cpp" local="no">src/dynamic_graph_manager.cpp</includedby>
    <includedby refid="ros__publish_8cpp" local="yes">src/ros_entities/ros_publish.cpp</includedby>
    <includedby refid="ros__queued__subscribe_8cpp" local="yes">src/ros_entities/ros_queued_subscribe.cpp</includedby>
    <includedby refid="ros__robot__state__publisher_8cpp" local="yes">src/ros_entities/ros_robot_state_publisher.cpp</includedby>
    <includedby refid="ros__robot__state__publisher__mt_8cpp" local="yes">src/ros_entities/ros_robot_state_publisher_mt.cpp</includedby>
    <includedby refid="ros__subscribe_8cpp" local="yes">src/ros_entities/ros_subscribe.cpp</includedby>
    <includedby refid="ros__tf__listener_8cpp" local="yes">src/ros_entities/ros_tf_listener.cpp</includedby>
    <includedby refid="ros__init_8cpp" local="no">src/ros_init.cpp</includedby>
    <incdepgraph>
      <node id="1544">
        <label>include/dynamic_graph_manager/ros_init.hh</label>
        <link refid="ros_init.hh"/>
        <childnode refid="1545" relation="include">
        </childnode>
      </node>
      <node id="1545">
        <label>ros/ros.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1553">
        <label>src/ros_entities/ros_robot_state_publisher_mt.cpp</label>
        <link refid="ros__robot__state__publisher__mt_8cpp"/>
      </node>
      <node id="1556">
        <label>src/ros_init.cpp</label>
        <link refid="ros__init_8cpp"/>
      </node>
      <node id="1546">
        <label>include/dynamic_graph_manager/ros_init.hh</label>
        <link refid="ros_init.hh"/>
        <childnode refid="1547" relation="include">
        </childnode>
        <childnode refid="1549" relation="include">
        </childnode>
        <childnode refid="1550" relation="include">
        </childnode>
        <childnode refid="1551" relation="include">
        </childnode>
        <childnode refid="1552" relation="include">
        </childnode>
        <childnode refid="1553" relation="include">
        </childnode>
        <childnode refid="1554" relation="include">
        </childnode>
        <childnode refid="1555" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
      </node>
      <node id="1550">
        <label>src/ros_entities/ros_publish.cpp</label>
        <link refid="ros__publish_8cpp"/>
      </node>
      <node id="1554">
        <label>src/ros_entities/ros_subscribe.cpp</label>
        <link refid="ros__subscribe_8cpp"/>
      </node>
      <node id="1552">
        <label>src/ros_entities/ros_robot_state_publisher.cpp</label>
        <link refid="ros__robot__state__publisher_8cpp"/>
      </node>
      <node id="1555">
        <label>src/ros_entities/ros_tf_listener.cpp</label>
        <link refid="ros__tf__listener_8cpp"/>
      </node>
      <node id="1548">
        <label>demos/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="1547">
        <label>demos/simple_dgm.hpp</label>
        <link refid="simple__dgm_8hpp"/>
        <childnode refid="1548" relation="include">
        </childnode>
      </node>
      <node id="1549">
        <label>src/dynamic_graph_manager.cpp</label>
        <link refid="dynamic__graph__manager_8cpp"/>
      </node>
      <node id="1551">
        <label>src/ros_entities/ros_queued_subscribe.cpp</label>
        <link refid="ros__queued__subscribe_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structdynamic__graph_1_1GlobalRos" prot="public">dynamic_graph::GlobalRos</innerclass>
    <innernamespace refid="namespacedynamic__graph">dynamic_graph</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Maximilien Naveau (<ulink url="mailto:maximilien.naveau@gmail.com">maximilien.naveau@gmail.com</ulink>) </para></simplesect>
<xrefsect id="license_1_license000015"><xreftitle>License</xreftitle><xrefdescription><para>License BSD-3-Clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-05-22 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#ifndef<sp/>ROS_INIT_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROS_INIT_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedynamic__graph" kindref="compound">dynamic_graph</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structdynamic__graph_1_1GlobalRos" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdynamic__graph_1_1GlobalRos" kindref="compound">GlobalRos</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="structdynamic__graph_1_1GlobalRos" kindref="compound">GlobalRos</ref>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdynamic__graph_1_1GlobalRos_1ac0f84eb7fdf20f2d5374d56a14c25b8d" kindref="member">node_handle_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdynamic__graph_1_1GlobalRos_1a9ad45d4ac3a50e943d3f2cb24f8281a3" kindref="member">async_spinner_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structdynamic__graph_1_1GlobalRos_1ad2d7b476bb25e863b0aa7da247c2869c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structdynamic__graph_1_1GlobalRos_1ad2d7b476bb25e863b0aa7da247c2869c" kindref="member">~GlobalRos</ref><sp/>()</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structdynamic__graph_1_1GlobalRos_1a9ad45d4ac3a50e943d3f2cb24f8281a3" kindref="member">async_spinner_</ref>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdynamic__graph_1_1GlobalRos_1a9ad45d4ac3a50e943d3f2cb24f8281a3" kindref="member">async_spinner_</ref>-&gt;stop();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structdynamic__graph_1_1GlobalRos_1ac0f84eb7fdf20f2d5374d56a14c25b8d" kindref="member">node_handle_</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdynamic__graph_1_1GlobalRos_1ac0f84eb7fdf20f2d5374d56a14c25b8d" kindref="member">node_handle_</ref>-&gt;shutdown();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44" refid="structdynamic__graph_1_1GlobalRos_1ac0f84eb7fdf20f2d5374d56a14c25b8d" refkind="member"><highlight class="normal"><sp/><sp/>boost::shared_ptr&lt;ros::NodeHandle&gt;<sp/><ref refid="structdynamic__graph_1_1GlobalRos_1ac0f84eb7fdf20f2d5374d56a14c25b8d" kindref="member">node_handle_</ref>;</highlight></codeline>
<codeline lineno="50" refid="structdynamic__graph_1_1GlobalRos_1a9ad45d4ac3a50e943d3f2cb24f8281a3" refkind="member"><highlight class="normal"><sp/><sp/>boost::shared_ptr&lt;ros::AsyncSpinner&gt;<sp/><ref refid="structdynamic__graph_1_1GlobalRos_1a9ad45d4ac3a50e943d3f2cb24f8281a3" kindref="member">async_spinner_</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">ros::NodeHandle&amp;<sp/><ref refid="namespacedynamic__graph_1ab01ece41a91a029cf335e28548cdfc06" kindref="member">ros_init</ref><sp/>(std::string<sp/>node_name);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">ros::AsyncSpinner&amp;<sp/><ref refid="namespacedynamic__graph_1a0ab97e95b56e05d30fd3112f8dfcf8eb" kindref="member">ros_spinner</ref><sp/>(std::string<sp/>node_name);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacedynamic__graph_1a0a7d6cd6c123bd1852af188fc06ce4f7" kindref="member">ros_shutdown</ref><sp/>(std::string<sp/>node_name);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacedynamic__graph_1a0a7d6cd6c123bd1852af188fc06ce4f7" kindref="member">ros_shutdown</ref><sp/>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacedynamic__graph_1ab000cd6e1e6ed365a5a3e1adddf89dff" kindref="member">ros_exist</ref><sp/>(std::string<sp/>node_name);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>dynamic_graph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="include/dynamic_graph_manager/ros_init.hh"/>
  </compounddef>
</doxygen>

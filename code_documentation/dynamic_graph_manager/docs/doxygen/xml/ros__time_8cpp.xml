<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ros__time_8cpp" kind="file" language="C++">
    <compoundname>ros_time.cpp</compoundname>
    <includes local="no">dynamic-graph/factory.h</includes>
    <includes local="no">dynamic-graph/signal-caster.h</includes>
    <includes local="no">dynamic-graph/signal-cast-helper.h</includes>
    <includes refid="ros__time_8hh" local="yes">ros_entities/ros_time.hh</includes>
    <includes refid="converter_8hh" local="yes">ros_entities/converter.hh</includes>
    <incdepgraph>
      <node id="2567">
        <label>boost/date_time/date.hpp</label>
      </node>
      <node id="2541">
        <label>dynamic-graph/signal.h</label>
      </node>
      <node id="2535">
        <label>dynamic-graph/factory.h</label>
      </node>
      <node id="2562">
        <label>Eigen/Geometry</label>
      </node>
      <node id="2548">
        <label>boost/format.hpp</label>
      </node>
      <node id="2540">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="2566">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="2559">
        <label>dynamic-graph/linear-algebra.h</label>
      </node>
      <node id="2553">
        <label>geometry_msgs/Transform.h</label>
      </node>
      <node id="2544">
        <label>stdexcept</label>
      </node>
      <node id="2563">
        <label>Eigen/Core</label>
      </node>
      <node id="2565">
        <label>std_msgs/Header.h</label>
      </node>
      <node id="2543">
        <label>ros_entities/converter.hh</label>
        <link refid="converter_8hh"/>
        <childnode refid="2544" relation="include">
        </childnode>
        <childnode refid="2545" relation="include">
        </childnode>
        <childnode refid="2539" relation="include">
        </childnode>
        <childnode refid="2565" relation="include">
        </childnode>
        <childnode refid="2566" relation="include">
        </childnode>
        <childnode refid="2567" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
      </node>
      <node id="2537">
        <label>dynamic-graph/signal-cast-helper.h</label>
      </node>
      <node id="2552">
        <label>dynamic_graph_manager/Vector.h</label>
      </node>
      <node id="2539">
        <label>ros/time.h</label>
      </node>
      <node id="2549">
        <label>std_msgs/Float64.h</label>
      </node>
      <node id="2558">
        <label>dynamic-graph/signal-time-dependent.h</label>
      </node>
      <node id="2536">
        <label>dynamic-graph/signal-caster.h</label>
      </node>
      <node id="2550">
        <label>std_msgs/UInt32.h</label>
      </node>
      <node id="2568">
        <label>boost/date_time/posix_time/posix_time.hpp</label>
      </node>
      <node id="2554">
        <label>geometry_msgs/TransformStamped.h</label>
      </node>
      <node id="2555">
        <label>geometry_msgs/Twist.h</label>
      </node>
      <node id="2546">
        <label>vector</label>
      </node>
      <node id="2547">
        <label>utility</label>
      </node>
      <node id="2545">
        <label>dg_to_ros.hh</label>
        <link refid="dg__to__ros_8hh"/>
        <childnode refid="2546" relation="include">
        </childnode>
        <childnode refid="2547" relation="include">
        </childnode>
        <childnode refid="2548" relation="include">
        </childnode>
        <childnode refid="2549" relation="include">
        </childnode>
        <childnode refid="2550" relation="include">
        </childnode>
        <childnode refid="2551" relation="include">
        </childnode>
        <childnode refid="2552" relation="include">
        </childnode>
        <childnode refid="2553" relation="include">
        </childnode>
        <childnode refid="2554" relation="include">
        </childnode>
        <childnode refid="2555" relation="include">
        </childnode>
        <childnode refid="2556" relation="include">
        </childnode>
        <childnode refid="2557" relation="include">
        </childnode>
        <childnode refid="2558" relation="include">
        </childnode>
        <childnode refid="2559" relation="include">
        </childnode>
        <childnode refid="2560" relation="include">
        </childnode>
        <childnode refid="2561" relation="include">
        </childnode>
      </node>
      <node id="2557">
        <label>geometry_msgs/Vector3Stamped.h</label>
      </node>
      <node id="2538">
        <label>ros_entities/ros_time.hh</label>
        <link refid="ros__time_8hh"/>
        <childnode refid="2539" relation="include">
        </childnode>
        <childnode refid="2540" relation="include">
        </childnode>
        <childnode refid="2541" relation="include">
        </childnode>
        <childnode refid="2542" relation="include">
        </childnode>
      </node>
      <node id="2561">
        <label>ros_entities/matrix_geometry.hh</label>
        <link refid="matrix__geometry_8hh"/>
        <childnode refid="2562" relation="include">
        </childnode>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2559" relation="include">
        </childnode>
        <childnode refid="2564" relation="include">
        </childnode>
      </node>
      <node id="2564">
        <label>dynamic-graph/eigen-io.h</label>
      </node>
      <node id="2551">
        <label>dynamic_graph_manager/Matrix.h</label>
      </node>
      <node id="2560">
        <label>dynamic-graph/signal-ptr.h</label>
      </node>
      <node id="2542">
        <label>dynamic-graph/entity.h</label>
      </node>
      <node id="2556">
        <label>geometry_msgs/TwistStamped.h</label>
      </node>
      <node id="2534">
        <label>src/ros_entities/ros_time.cpp</label>
        <link refid="ros_time.cpp"/>
        <childnode refid="2535" relation="include">
        </childnode>
        <childnode refid="2536" relation="include">
        </childnode>
        <childnode refid="2537" relation="include">
        </childnode>
        <childnode refid="2538" relation="include">
        </childnode>
        <childnode refid="2543" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacedynamic__graph">dynamic_graph</innernamespace>
    <innernamespace refid="namespaceboost_1_1posix__time">boost::posix_time</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Maximilien Naveau (<ulink url="mailto:maximilien.naveau@gmail.com">maximilien.naveau@gmail.com</ulink>) </para></simplesect>
<xrefsect id="license_1_license000063"><xreftitle>License</xreftitle><xrefdescription><para>License BSD-3-Clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-05-22 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#include<sp/>&lt;dynamic-graph/factory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dynamic-graph/signal-caster.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dynamic-graph/signal-cast-helper.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ros__time_8hh" kindref="compound">ros_entities/ros_time.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="converter_8hh" kindref="compound">ros_entities/converter.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedynamic__graph" kindref="compound">dynamic_graph</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="namespacedynamic__graph_1a04797aa55f04bd1e07b64c0caa685c6b" kindref="member">DYNAMICGRAPH_FACTORY_ENTITY_PLUGIN</ref>(RosTime,<sp/></highlight><highlight class="stringliteral">&quot;RosTime&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceboost_1_1posix__time" kindref="compound">boost::posix_time</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>RosTime::docstring_</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Export<sp/>ROS<sp/>time<sp/>into<sp/>dynamic-graph.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Signal<sp/>\&quot;time\&quot;<sp/>provides<sp/>time<sp/>as<sp/>given<sp/>by<sp/>ros::time<sp/>as\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>boost::posix_time::ptime<sp/>type.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>RosTime::RosTime<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity<sp/>(name),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>now_<sp/>(</highlight><highlight class="stringliteral">&quot;RosTime(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::output(boost::posix_time::ptime)::time&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>signalRegistration<sp/>(now_);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>now_.setConstant<sp/>(rosTimeToPtime<sp/>(ros::Time::now()));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>now_.setFunction<sp/>(boost::bind<sp/>(&amp;RosTime::update,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_1,<sp/>_2));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>ptime&amp;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>RosTime::update<sp/>(ptime&amp;<sp/>time,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>=<sp/>rosTimeToPtime<sp/>(ros::Time::now<sp/>());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>std::string<sp/>RosTime::getDocString<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="45"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>docstring_;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dynamicgraph</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/ros_entities/ros_time.cpp"/>
  </compounddef>
</doxygen>

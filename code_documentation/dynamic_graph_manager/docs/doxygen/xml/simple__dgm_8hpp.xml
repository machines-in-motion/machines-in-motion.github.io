<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="simple__dgm_8hpp" kind="file" language="C++">
    <compoundname>simple_dgm.hpp</compoundname>
    <includes refid="ros__init_8hh" local="yes">dynamic_graph_manager/ros_init.hh</includes>
    <includes refid="dynamic__graph__manager_8hh" local="yes">dynamic_graph_manager/dynamic_graph_manager.hh</includes>
    <includes local="yes">dynamic_graph_manager/TestUserCmdBool.h</includes>
    <includedby refid="main_8cpp" local="yes">demos/main.cpp</includedby>
    <incdepgraph>
      <node id="1337">
        <label>list</label>
      </node>
      <node id="1317">
        <label>atomic</label>
      </node>
      <node id="1312">
        <label>dynamic_graph_manager/dynamic_graph_manager.hh</label>
        <link refid="dynamic__graph__manager_8hh"/>
        <childnode refid="1313" relation="include">
        </childnode>
        <childnode refid="1314" relation="include">
        </childnode>
        <childnode refid="1315" relation="include">
        </childnode>
        <childnode refid="1316" relation="include">
        </childnode>
        <childnode refid="1317" relation="include">
        </childnode>
        <childnode refid="1318" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1311" relation="include">
        </childnode>
        <childnode refid="1320" relation="include">
        </childnode>
        <childnode refid="1321" relation="include">
        </childnode>
        <childnode refid="1322" relation="include">
        </childnode>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1324" relation="include">
        </childnode>
        <childnode refid="1325" relation="include">
        </childnode>
        <childnode refid="1329" relation="include">
        </childnode>
        <childnode refid="1332" relation="include">
        </childnode>
      </node>
      <node id="1315">
        <label>functional</label>
      </node>
      <node id="1320">
        <label>std_srvs/Empty.h</label>
      </node>
      <node id="1324">
        <label>shared_memory/locked_condition_variable.hpp</label>
      </node>
      <node id="1323">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="1326">
        <label>dynamic_graph_manager/RunCommand.h</label>
      </node>
      <node id="1321">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="1330">
        <label>dynamic-graph/linear-algebra.h</label>
      </node>
      <node id="1339">
        <label>string</label>
      </node>
      <node id="1338">
        <label>map</label>
      </node>
      <node id="1314">
        <label>wait.h</label>
      </node>
      <node id="1332">
        <label>dynamic_graph_manager/device.hh</label>
        <link refid="device_8hh"/>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1330" relation="include">
        </childnode>
        <childnode refid="1333" relation="include">
        </childnode>
        <childnode refid="1334" relation="include">
        </childnode>
        <childnode refid="1335" relation="include">
        </childnode>
        <childnode refid="1329" relation="include">
        </childnode>
      </node>
      <node id="1328">
        <label>dynamic-graph/python/interpreter.hh</label>
      </node>
      <node id="1310">
        <label>dynamic_graph_manager/ros_init.hh</label>
        <link refid="ros__init_8hh"/>
        <childnode refid="1311" relation="include">
        </childnode>
      </node>
      <node id="1335">
        <label>dynamic_graph_manager/periodic-call.hh</label>
        <link refid="periodic-call_8hh"/>
        <childnode refid="1328" relation="include">
        </childnode>
        <childnode refid="1336" relation="include">
        </childnode>
        <childnode refid="1333" relation="include">
        </childnode>
        <childnode refid="1337" relation="include">
        </childnode>
        <childnode refid="1338" relation="include">
        </childnode>
        <childnode refid="1339" relation="include">
        </childnode>
      </node>
      <node id="1340">
        <label>dynamic_graph_manager/TestUserCmdBool.h</label>
      </node>
      <node id="1322">
        <label>real_time_tools/spinner.hpp</label>
      </node>
      <node id="1327">
        <label>dynamic_graph_manager/RunPythonFile.h</label>
      </node>
      <node id="1319">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="1313">
        <label>unistd.h</label>
      </node>
      <node id="1336">
        <label>dynamic-graph/signal-base.h</label>
      </node>
      <node id="1311">
        <label>ros/ros.h</label>
      </node>
      <node id="1334">
        <label>dynamic-graph/all-signals.h</label>
      </node>
      <node id="1325">
        <label>dynamic_graph_manager/ros_interpreter.hh</label>
        <link refid="ros__interpreter_8hh"/>
        <childnode refid="1311" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
        <childnode refid="1328" relation="include">
        </childnode>
      </node>
      <node id="1333">
        <label>dynamic-graph/entity.h</label>
      </node>
      <node id="1318">
        <label>mutex</label>
      </node>
      <node id="1316">
        <label>chrono</label>
      </node>
      <node id="1331">
        <label>yaml_cpp_catkin/yaml_eigen.h</label>
      </node>
      <node id="1309">
        <label>demos/simple_dgm.hpp</label>
        <link refid="simple_dgm.hpp"/>
        <childnode refid="1310" relation="include">
        </childnode>
        <childnode refid="1312" relation="include">
        </childnode>
        <childnode refid="1340" relation="include">
        </childnode>
      </node>
      <node id="1329">
        <label>dynamic_graph_manager/tools.hh</label>
        <link refid="tools_8hh"/>
        <childnode refid="1330" relation="include">
        </childnode>
        <childnode refid="1331" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1342">
        <label>demos/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="1341">
        <label>demos/simple_dgm.hpp</label>
        <link refid="simple_dgm.hpp"/>
        <childnode refid="1342" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classdynamic__graph__manager_1_1SimpleDGM" prot="public">dynamic_graph_manager::SimpleDGM</innerclass>
    <innernamespace refid="namespacedynamic__graph__manager">dynamic_graph_manager</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Maximilien Naveau (<ulink url="mailto:maximilien.naveau@gmail.com">maximilien.naveau@gmail.com</ulink>) </para></simplesect>
<xrefsect id="license_1_license000002"><xreftitle>License</xreftitle><xrefdescription><para>License BSD-3-Clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-05-22 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ros__init_8hh" kindref="compound">dynamic_graph_manager/ros_init.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dynamic__graph__manager_8hh" kindref="compound">dynamic_graph_manager/dynamic_graph_manager.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dynamic_graph_manager/TestUserCmdBool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="namespacedynamic__graph__manager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedynamic__graph__manager" kindref="compound">dynamic_graph_manager</ref>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="18" refid="classdynamic__graph__manager_1_1SimpleDGM" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdynamic__graph__manager_1_1SimpleDGM" kindref="compound">SimpleDGM</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph_1_1DynamicGraphManager" kindref="compound">dynamic_graph::DynamicGraphManager</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24" refid="classdynamic__graph__manager_1_1SimpleDGM_1abb548458a154ee8e9ae63a32f1191ef6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdynamic__graph__manager_1_1SimpleDGM_1abb548458a154ee8e9ae63a32f1191ef6" kindref="member">SimpleDGM</ref>():<sp/><ref refid="namespacedynamic__graph" kindref="compound">dynamic_graph</ref>::<ref refid="classdynamic__graph_1_1DynamicGraphManager_1afd98424082e5a1f878e6c7cb08a62c4a" kindref="member">DynamicGraphManager</ref>(){</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>boolean_set_by_user_cmd_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30" refid="classdynamic__graph__manager_1_1SimpleDGM_1a250f18b97619c72446074662626423d4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdynamic__graph__manager_1_1SimpleDGM_1a250f18b97619c72446074662626423d4" kindref="member">~SimpleDGM</ref>(){}</highlight></codeline>
<codeline lineno="35" refid="classdynamic__graph__manager_1_1SimpleDGM_1a5d771fc5a9ae6dd524a658d50fbee5d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph__manager_1_1SimpleDGM_1a5d771fc5a9ae6dd524a658d50fbee5d3" kindref="member">initialize_hardware_communication_process</ref>()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>hardware<sp/>communication<sp/>ros<sp/>node<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle&amp;<sp/>ros_node_handle<sp/>=<sp/><ref refid="namespacedynamic__graph_1ab01ece41a91a029cf335e28548cdfc06" kindref="member">dynamic_graph::ros_init</ref>(</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdynamic__graph_1_1DynamicGraphManager_1a415f24927dbe9dfd0ee4a6462428bd48" kindref="member">dynamic_graph::DynamicGraphManager::hw_com_ros_node_name_</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdynamic__graph_1_1DynamicGraphManager_1a0fb35bc44f331db3570c09b75b49cd15" kindref="member">ros_user_commands_</ref>.push_back(ros_node_handle.advertiseService(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;set_a_boolean&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classdynamic__graph__manager_1_1SimpleDGM_1adb40055a916691d326bc6466eab9680b" kindref="member">SimpleDGM::user_command_callback</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49" refid="classdynamic__graph__manager_1_1SimpleDGM_1aa92cd33a31c934835252f834bab7b9f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph__manager_1_1SimpleDGM_1aa92cd33a31c934835252f834bab7b9f4" kindref="member">get_sensors_to_map</ref>(<ref refid="namespacedynamic__graph_1a51212ed7fa4ae81e7b362a27f09b7ab8" kindref="member">dynamic_graph::VectorDGMap</ref>&amp;<sp/>map)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>map[</highlight><highlight class="stringliteral">&quot;encoders&quot;</highlight><highlight class="normal">].setRandom();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>map[</highlight><highlight class="stringliteral">&quot;imu_accelerometer&quot;</highlight><highlight class="normal">].setRandom();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>map[</highlight><highlight class="stringliteral">&quot;imu_gyroscope&quot;</highlight><highlight class="normal">].setRandom();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>map[</highlight><highlight class="stringliteral">&quot;imu&quot;</highlight><highlight class="normal">].setRandom();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62" refid="classdynamic__graph__manager_1_1SimpleDGM_1ad38ccd35cc0c409a0aaefa8565634109" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph__manager_1_1SimpleDGM_1ad38ccd35cc0c409a0aaefa8565634109" kindref="member">set_motor_controls_from_map</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacedynamic__graph_1a51212ed7fa4ae81e7b362a27f09b7ab8" kindref="member">dynamic_graph::VectorDGMap</ref>&amp;<sp/>map)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>desired_torques_<sp/>=<sp/>map.at(</highlight><highlight class="stringliteral">&quot;torques&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>desired_positions_<sp/>=<sp/>map.at(</highlight><highlight class="stringliteral">&quot;positions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classdynamic__graph__manager_1_1SimpleDGM_1a08793eb7410b2820e00e028688d890a9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph__manager_1_1SimpleDGM_1a08793eb7410b2820e00e028688d890a9" kindref="member">get_has_user_command_been_executed</ref>()</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>nee<sp/>to<sp/>protect<sp/>the<sp/>access<sp/>to<sp/>this<sp/>ressource<sp/>as<sp/>it<sp/>may<sp/>conflict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>different<sp/>thread.<sp/>Please<sp/>use<sp/>cond_var_<sp/>to<sp/>make<sp/>sure<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>access<sp/>on<sp/>its<sp/>due<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>boolean_set_by_user_cmd_;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classdynamic__graph__manager_1_1SimpleDGM_1adb40055a916691d326bc6466eab9680b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph__manager_1_1SimpleDGM_1adb40055a916691d326bc6466eab9680b" kindref="member">user_command_callback</ref>(dynamic_graph_manager::TestUserCmdBool::Request&amp;<sp/>req,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynamic_graph_manager::TestUserCmdBool::Response&amp;<sp/>res)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parse<sp/>and<sp/>register<sp/>the<sp/>command<sp/>for<sp/>further<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdynamic__graph_1_1DynamicGraphManager_1a72146c4ddd173869a512e9f174ad48df" kindref="member">add_user_command</ref>(std::bind(&amp;<ref refid="classdynamic__graph__manager_1_1SimpleDGM_1a6ba8314169c29c722cdcea810798f08d" kindref="member">SimpleDGM::user_command</ref>,<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>req.input_boolean));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>whatever<sp/>the<sp/>user<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>res.sanity_check<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>service<sp/>has<sp/>been<sp/>executed<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classdynamic__graph__manager_1_1SimpleDGM_1a5fe81f9feb5d982761d7a427aa31e7b4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph__manager_1_1SimpleDGM_1a5fe81f9feb5d982761d7a427aa31e7b4" kindref="member">is_in_safety_mode</ref>()</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>define<sp/>a<sp/>check<sp/>for<sp/>robot<sp/>specific<sp/>stuff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check<sp/>||<sp/>DynamicGraphManager::is_in_safety_mode();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classdynamic__graph__manager_1_1SimpleDGM_1a37b28e687ce4e724770f5c9f23da4d4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph__manager_1_1SimpleDGM_1a37b28e687ce4e724770f5c9f23da4d4f" kindref="member">compute_safety_controls</ref>()</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>all<sp/>controls<sp/>with<sp/>zero...<sp/>Check<sp/>your<sp/>robot<sp/>to<sp/>imagine<sp/>what<sp/>would<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>safer<sp/>in<sp/>this<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(dynamic_graph::VectorDGMap::iterator<sp/>ctrl<sp/>=<sp/><ref refid="classdynamic__graph_1_1DynamicGraphManager_1a03eabd2f08990a1dcc1caa652b701020" kindref="member">motor_controls_map_</ref>.begin()<sp/>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl<sp/>!=<sp/><ref refid="classdynamic__graph_1_1DynamicGraphManager_1a03eabd2f08990a1dcc1caa652b701020" kindref="member">motor_controls_map_</ref>.end()<sp/>;<sp/>++ctrl)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;second.fill(0.0);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="136" refid="classdynamic__graph__manager_1_1SimpleDGM_1a6ba8314169c29c722cdcea810798f08d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph__manager_1_1SimpleDGM_1a6ba8314169c29c722cdcea810798f08d" kindref="member">user_command</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>user_input)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>something<sp/>with<sp/>the<sp/>internal<sp/>state<sp/>or<sp/>with<sp/>the<sp/>hardware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>boolean_set_by_user_cmd_<sp/>=<sp/>user_input;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>internal<sp/>hardware<sp/>class<sp/>or<sp/>obect.<sp/>Here<sp/>just<sp/>a<sp/>simple<sp/>boolean<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unit<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>std::atomic_bool<sp/>boolean_set_by_user_cmd_;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>dynamicgraph::Vector<sp/>desired_torques_,<sp/>desired_positions_;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<sp/></highlight><highlight class="comment">//namespace</highlight></codeline>
    </programlisting>
    <location file="demos/simple_dgm.hpp"/>
  </compounddef>
</doxygen>

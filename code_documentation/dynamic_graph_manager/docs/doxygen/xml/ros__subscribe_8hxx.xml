<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ros__subscribe_8hxx" kind="file" language="C++">
    <compoundname>ros_subscribe.hxx</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">boost/bind.hpp</includes>
    <includes local="no">boost/date_time/posix_time/posix_time.hpp</includes>
    <includes local="no">dynamic-graph/signal-caster.h</includes>
    <includes local="no">dynamic-graph/linear-algebra.h</includes>
    <includes local="no">dynamic-graph/signal-cast-helper.h</includes>
    <includes local="no">std_msgs/Float64.h</includes>
    <includes local="yes">dynamic_graph_manager/Matrix.h</includes>
    <includes local="yes">dynamic_graph_manager/Vector.h</includes>
    <includes refid="ros__time_8hh" local="yes">ros_time.hh</includes>
    <includedby refid="ros__subscribe_8hh" local="yes">include/ros_entities/ros_subscribe.hh</includedby>
    <incdepgraph>
      <node id="1892">
        <label>dynamic-graph/signal.h</label>
      </node>
      <node id="1891">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="1884">
        <label>dynamic-graph/linear-algebra.h</label>
      </node>
      <node id="1885">
        <label>dynamic-graph/signal-cast-helper.h</label>
      </node>
      <node id="1888">
        <label>dynamic_graph_manager/Vector.h</label>
      </node>
      <node id="1890">
        <label>ros/time.h</label>
      </node>
      <node id="1886">
        <label>std_msgs/Float64.h</label>
      </node>
      <node id="1883">
        <label>dynamic-graph/signal-caster.h</label>
      </node>
      <node id="1882">
        <label>boost/date_time/posix_time/posix_time.hpp</label>
      </node>
      <node id="1880">
        <label>vector</label>
      </node>
      <node id="1889">
        <label>ros_time.hh</label>
        <link refid="ros__time_8hh"/>
        <childnode refid="1890" relation="include">
        </childnode>
        <childnode refid="1891" relation="include">
        </childnode>
        <childnode refid="1892" relation="include">
        </childnode>
        <childnode refid="1893" relation="include">
        </childnode>
      </node>
      <node id="1887">
        <label>dynamic_graph_manager/Matrix.h</label>
      </node>
      <node id="1893">
        <label>dynamic-graph/entity.h</label>
      </node>
      <node id="1881">
        <label>boost/bind.hpp</label>
      </node>
      <node id="1879">
        <label>include/ros_entities/ros_subscribe.hxx</label>
        <link refid="ros_subscribe.hxx"/>
        <childnode refid="1880" relation="include">
        </childnode>
        <childnode refid="1881" relation="include">
        </childnode>
        <childnode refid="1882" relation="include">
        </childnode>
        <childnode refid="1883" relation="include">
        </childnode>
        <childnode refid="1884" relation="include">
        </childnode>
        <childnode refid="1885" relation="include">
        </childnode>
        <childnode refid="1886" relation="include">
        </childnode>
        <childnode refid="1887" relation="include">
        </childnode>
        <childnode refid="1888" relation="include">
        </childnode>
        <childnode refid="1889" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1896">
        <label>src/ros_entities/ros_subscribe.cpp</label>
        <link refid="ros__subscribe_8cpp"/>
      </node>
      <node id="1895">
        <label>include/ros_entities/ros_subscribe.hh</label>
        <link refid="ros__subscribe_8hh"/>
        <childnode refid="1896" relation="include">
        </childnode>
      </node>
      <node id="1894">
        <label>include/ros_entities/ros_subscribe.hxx</label>
        <link refid="ros_subscribe.hxx"/>
        <childnode refid="1895" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structdynamic__graph_1_1internal_1_1Add" prot="public">dynamic_graph::internal::Add</innerclass>
    <innerclass refid="structdynamic__graph_1_1internal_1_1Add_3_01std_1_1pair_3_01T_00_01dg_1_1Vector_01_4_01_4" prot="public">dynamic_graph::internal::Add&lt; std::pair&lt; T, dg::Vector &gt; &gt;</innerclass>
    <innernamespace refid="namespacedynamic__graph">dynamic_graph</innernamespace>
    <innernamespace refid="namespacedynamic__graph_1_1internal">dynamic_graph::internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Maximilien Naveau (<ulink url="mailto:maximilien.naveau@gmail.com">maximilien.naveau@gmail.com</ulink>) </para></simplesect>
<xrefsect id="license_1_license000028"><xreftitle>License</xreftitle><xrefdescription><para>License BSD-3-Clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-05-22 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#ifndef<sp/>DYNAMIC_GRAPH_ROS_SUBSCRIBE_HXX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DYNAMIC_GRAPH_ROS_SUBSCRIBE_HXX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/bind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/date_time/posix_time/posix_time.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;dynamic-graph/signal-caster.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;dynamic-graph/linear-algebra.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;dynamic-graph/signal-cast-helper.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;std_msgs/Float64.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;dynamic_graph_manager/Matrix.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;dynamic_graph_manager/Vector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="ros__time_8hh" kindref="compound">ros_time.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedynamicgraph" kindref="compound">dg</ref><sp/>=<sp/><ref refid="namespacedynamicgraph" kindref="compound">dynamicgraph</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedynamic__graph" kindref="compound">dynamic_graph</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>RosSubscribe::callback</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>(boost::shared_ptr&lt;dynamicgraph::SignalPtr&lt;S,<sp/>int&gt;<sp/>&gt;<sp/>signal,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>R&amp;<sp/>data)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>S<sp/>dg_t;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>dg_t<sp/>value;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacedynamic__graph_1aa00932c9efb8a607efd6997386d78680" kindref="member">converter</ref><sp/>(value,<sp/>data);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>signal-&gt;setConstant<sp/>(value);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>RosSubscribe::callbackTimestamp</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>(boost::shared_ptr&lt;dynamicgraph::SignalPtr&lt;ptime,<sp/>int&gt;<sp/>&gt;<sp/>signal,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>R&amp;<sp/>data)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>ptime<sp/>time<sp/>=</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rosTimeToPtime<sp/>(data-&gt;header.stamp);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>signal-&gt;setConstant(time);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Add</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator<sp/>()<sp/>(RosSubscribe&amp;<sp/>RosSubscribe,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>signal,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>topic)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DgToRos&lt;T&gt;::dg_t<sp/>dg_t;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DgToRos&lt;T&gt;::ros_const_ptr_t<sp/>ros_const_ptr_t;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DgToRos&lt;T&gt;::signalIn_t<sp/>signal_t;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>bindedSignal<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>RosSubscribe::bindedSignal_t<sp/>bindedSignal;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>signal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::format<sp/>signalName<sp/>(</highlight><highlight class="stringliteral">&quot;RosSubscribe(%1%)::%2%&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>signalName<sp/>%<sp/>RosSubscribe.getName<sp/>()<sp/>%<sp/>signal;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;signal_t&gt;<sp/>signal_<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>signal_t<sp/>(0,<sp/>signalName.str<sp/>()));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>DgToRos&lt;T&gt;::setDefault(*signal_);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>bindedSignal.first<sp/>=<sp/>signal_;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>RosSubscribe.signalRegistration<sp/>(*bindedSignal.first);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>subscriber.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::function&lt;void<sp/>(const<sp/>ros_const_ptr_t&amp;<sp/>data)&gt;<sp/><ref refid="namespacedynamic__graph_1adf7d40f2a8d1425af80c14f90e58e961" kindref="member">callback_t</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>callback_t<sp/>callback<sp/>=<sp/>boost::bind</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(&amp;RosSubscribe::callback&lt;ros_const_ptr_t,<sp/>dg_t&gt;,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;RosSubscribe,<sp/>signal_,<sp/>_1);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>bindedSignal.second<sp/>=</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::make_shared&lt;ros::Subscriber&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(RosSubscribe.nh<sp/>().subscribe<sp/>(topic,<sp/>1,<sp/>callback));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>RosSubscribe.bindedSignal<sp/>()[signal]<sp/>=<sp/>bindedSignal;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="89" refid="structdynamic__graph_1_1internal_1_1Add_3_01std_1_1pair_3_01T_00_01dg_1_1Vector_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdynamic__graph_1_1internal_1_1Add" kindref="compound">Add</ref>&lt;<ref refid="namespacestd" kindref="compound">std</ref>::pair&lt;T,<sp/>dg::Vector&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator<sp/>()<sp/>(RosSubscribe&amp;<sp/>RosSubscribe,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>signal,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>topic)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;T,<sp/>dg::Vector&gt;<sp/>type_t;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph_1_1DgToRos" kindref="compound">DgToRos&lt;type_t&gt;::dg_t</ref><sp/>dg_t;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph_1_1DgToRos" kindref="compound">DgToRos&lt;type_t&gt;::ros_const_ptr_t</ref><sp/>ros_const_ptr_t;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph_1_1DgToRos" kindref="compound">DgToRos&lt;type_t&gt;::signalIn_t</ref><sp/>signal_t;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>bindedSignal<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>RosSubscribe::bindedSignal_t<sp/>bindedSignal;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>signal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::format<sp/>signalName<sp/>(</highlight><highlight class="stringliteral">&quot;RosSubscribe(%1%)::%2%&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>signalName<sp/>%<sp/>RosSubscribe.getName<sp/>()<sp/>%<sp/>signal;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;signal_t&gt;<sp/>signal_</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>signal_t<sp/>(0,<sp/>signalName.str<sp/>()));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classdynamic__graph_1_1DgToRos" kindref="compound">DgToRos&lt;T&gt;::setDefault</ref>(*signal_);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>bindedSignal.first<sp/>=<sp/>signal_;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>RosSubscribe.signalRegistration<sp/>(*bindedSignal.first);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>publisher.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::function&lt;void<sp/>(const<sp/>ros_const_ptr_t&amp;<sp/>data)&gt;<sp/><ref refid="namespacedynamic__graph_1adf7d40f2a8d1425af80c14f90e58e961" kindref="member">callback_t</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>callback_t<sp/>callback<sp/>=<sp/>boost::bind</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(&amp;RosSubscribe::callback&lt;ros_const_ptr_t,<sp/>dg_t&gt;,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;RosSubscribe,<sp/>signal_,<sp/>_1);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>bindedSignal.second<sp/>=</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::make_shared&lt;ros::Subscriber&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(RosSubscribe.nh<sp/>().subscribe<sp/>(topic,<sp/>1,<sp/>callback));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>RosSubscribe.bindedSignal<sp/>()[signal]<sp/>=<sp/>bindedSignal;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timestamp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>dynamicgraph::SignalPtr&lt;RosSubscribe::ptime,<sp/>int&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>signalTimestamp_t;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>signalTimestamp<sp/>=</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(boost::format<sp/>(</highlight><highlight class="stringliteral">&quot;%1%%2%&quot;</highlight><highlight class="normal">)<sp/>%<sp/>signal<sp/>%<sp/></highlight><highlight class="stringliteral">&quot;Timestamp&quot;</highlight><highlight class="normal">).str<sp/>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>bindedSignal<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>RosSubscribe::bindedSignal_t<sp/>bindedSignalTimestamp;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>signal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::format<sp/>signalNameTimestamp<sp/>(</highlight><highlight class="stringliteral">&quot;RosSubscribe(%1%)::%2%&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>signalNameTimestamp<sp/>%<sp/>RosSubscribe.name<sp/>%<sp/>signalTimestamp;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;signalTimestamp_t&gt;<sp/>signalTimestamp_</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>signalTimestamp_t<sp/>(0,<sp/>signalNameTimestamp.str<sp/>()));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>RosSubscribe::ptime<sp/>zero<sp/>(rosTimeToPtime<sp/>(ros::Time<sp/>(0,<sp/>0)));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>signalTimestamp_-&gt;setConstant<sp/>(zero);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>bindedSignalTimestamp.first<sp/>=<sp/>signalTimestamp_;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>RosSubscribe.signalRegistration<sp/>(*bindedSignalTimestamp.first);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>publisher.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::function&lt;void<sp/>(const<sp/>ros_const_ptr_t&amp;<sp/>data)&gt;<sp/><ref refid="namespacedynamic__graph_1adf7d40f2a8d1425af80c14f90e58e961" kindref="member">callback_t</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>callback_t<sp/>callbackTimestamp<sp/>=<sp/>boost::bind</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(&amp;RosSubscribe::callbackTimestamp&lt;ros_const_ptr_t&gt;,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;RosSubscribe,<sp/>signalTimestamp_,<sp/>_1);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>bindedSignalTimestamp.second<sp/>=</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::make_shared&lt;ros::Subscriber&gt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(RosSubscribe.nh<sp/>().subscribe<sp/>(topic,<sp/>1,<sp/>callbackTimestamp));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>RosSubscribe.bindedSignal<sp/>()[signalTimestamp]<sp/>=<sp/>bindedSignalTimestamp;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>internal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RosSubscribe::add<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>signal,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>topic)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdynamic__graph_1_1internal_1_1Add" kindref="compound">internal::Add&lt;T&gt;</ref><sp/>()<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>signal,<sp/>topic);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>dynamicgraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="include/ros_entities/ros_subscribe.hxx"/>
  </compounddef>
</doxygen>

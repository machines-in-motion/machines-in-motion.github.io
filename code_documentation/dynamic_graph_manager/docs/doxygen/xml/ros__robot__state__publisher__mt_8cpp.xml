<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ros__robot__state__publisher__mt_8cpp" kind="file" language="C++">
    <compoundname>ros_robot_state_publisher_mt.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">tf/tf.h</includes>
    <includes refid="ros__init_8hh" local="yes">dynamic_graph_manager/ros_init.hh</includes>
    <includes refid="dynamic__graph__manager_8hh" local="yes">dynamic_graph_manager/dynamic_graph_manager.hh</includes>
    <includes refid="converter_8hh" local="yes">ros_entities/converter.hh</includes>
    <includes refid="ros__robot__state__publisher__mt_8hpp" local="yes">ros_entities/ros_robot_state_publisher_mt.hpp</includes>
    <incdepgraph>
      <node id="2406">
        <label>list</label>
      </node>
      <node id="2386">
        <label>atomic</label>
      </node>
      <node id="2381">
        <label>dynamic_graph_manager/dynamic_graph_manager.hh</label>
        <link refid="dynamic__graph__manager_8hh"/>
        <childnode refid="2382" relation="include">
        </childnode>
        <childnode refid="2383" relation="include">
        </childnode>
        <childnode refid="2384" relation="include">
        </childnode>
        <childnode refid="2385" relation="include">
        </childnode>
        <childnode refid="2386" relation="include">
        </childnode>
        <childnode refid="2387" relation="include">
        </childnode>
        <childnode refid="2388" relation="include">
        </childnode>
        <childnode refid="2380" relation="include">
        </childnode>
        <childnode refid="2389" relation="include">
        </childnode>
        <childnode refid="2390" relation="include">
        </childnode>
        <childnode refid="2391" relation="include">
        </childnode>
        <childnode refid="2392" relation="include">
        </childnode>
        <childnode refid="2393" relation="include">
        </childnode>
        <childnode refid="2394" relation="include">
        </childnode>
        <childnode refid="2398" relation="include">
        </childnode>
        <childnode refid="2401" relation="include">
        </childnode>
      </node>
      <node id="2384">
        <label>functional</label>
      </node>
      <node id="2433">
        <label>boost/date_time/date.hpp</label>
      </node>
      <node id="2439">
        <label>dynamic-graph/factory.h</label>
      </node>
      <node id="2389">
        <label>std_srvs/Empty.h</label>
      </node>
      <node id="2393">
        <label>shared_memory/locked_condition_variable.hpp</label>
      </node>
      <node id="2392">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="2427">
        <label>Eigen/Geometry</label>
      </node>
      <node id="2395">
        <label>dynamic_graph_manager/RunCommand.h</label>
      </node>
      <node id="2376">
        <label>src/ros_entities/ros_robot_state_publisher_mt.cpp</label>
        <link refid="ros_robot_state_publisher_mt.cpp"/>
        <childnode refid="2377" relation="include">
        </childnode>
        <childnode refid="2378" relation="include">
        </childnode>
        <childnode refid="2379" relation="include">
        </childnode>
        <childnode refid="2381" relation="include">
        </childnode>
        <childnode refid="2409" relation="include">
        </childnode>
        <childnode refid="2435" relation="include">
        </childnode>
      </node>
      <node id="2414">
        <label>boost/format.hpp</label>
      </node>
      <node id="2390">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="2432">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="2419">
        <label>geometry_msgs/Transform.h</label>
      </node>
      <node id="2410">
        <label>stdexcept</label>
      </node>
      <node id="2399">
        <label>dynamic-graph/linear-algebra.h</label>
      </node>
      <node id="2428">
        <label>Eigen/Core</label>
      </node>
      <node id="2431">
        <label>std_msgs/Header.h</label>
      </node>
      <node id="2409">
        <label>ros_entities/converter.hh</label>
        <link refid="converter_8hh"/>
        <childnode refid="2410" relation="include">
        </childnode>
        <childnode refid="2411" relation="include">
        </childnode>
        <childnode refid="2430" relation="include">
        </childnode>
        <childnode refid="2431" relation="include">
        </childnode>
        <childnode refid="2432" relation="include">
        </childnode>
        <childnode refid="2433" relation="include">
        </childnode>
        <childnode refid="2434" relation="include">
        </childnode>
      </node>
      <node id="2408">
        <label>string</label>
      </node>
      <node id="2407">
        <label>map</label>
      </node>
      <node id="2418">
        <label>dynamic_graph_manager/Vector.h</label>
      </node>
      <node id="2378">
        <label>tf/tf.h</label>
      </node>
      <node id="2383">
        <label>wait.h</label>
      </node>
      <node id="2430">
        <label>ros/time.h</label>
      </node>
      <node id="2401">
        <label>dynamic_graph_manager/device.hh</label>
        <link refid="device_8hh"/>
        <childnode refid="2388" relation="include">
        </childnode>
        <childnode refid="2399" relation="include">
        </childnode>
        <childnode refid="2402" relation="include">
        </childnode>
        <childnode refid="2403" relation="include">
        </childnode>
        <childnode refid="2404" relation="include">
        </childnode>
        <childnode refid="2398" relation="include">
        </childnode>
      </node>
      <node id="2397">
        <label>dynamic-graph/python/interpreter.hh</label>
      </node>
      <node id="2379">
        <label>dynamic_graph_manager/ros_init.hh</label>
        <link refid="ros__init_8hh"/>
        <childnode refid="2380" relation="include">
        </childnode>
      </node>
      <node id="2404">
        <label>dynamic_graph_manager/periodic-call.hh</label>
        <link refid="periodic-call_8hh"/>
        <childnode refid="2397" relation="include">
        </childnode>
        <childnode refid="2405" relation="include">
        </childnode>
        <childnode refid="2402" relation="include">
        </childnode>
        <childnode refid="2406" relation="include">
        </childnode>
        <childnode refid="2407" relation="include">
        </childnode>
        <childnode refid="2408" relation="include">
        </childnode>
      </node>
      <node id="2415">
        <label>std_msgs/Float64.h</label>
      </node>
      <node id="2440">
        <label>dynamic-graph/all-commands.h</label>
      </node>
      <node id="2424">
        <label>dynamic-graph/signal-time-dependent.h</label>
      </node>
      <node id="2391">
        <label>real_time_tools/spinner.hpp</label>
      </node>
      <node id="2396">
        <label>dynamic_graph_manager/RunPythonFile.h</label>
      </node>
      <node id="2388">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="2435">
        <label>ros_entities/ros_robot_state_publisher_mt.hpp</label>
        <link refid="ros__robot__state__publisher__mt_8hpp"/>
        <childnode refid="2436" relation="include">
        </childnode>
        <childnode refid="2437" relation="include">
        </childnode>
        <childnode refid="2387" relation="include">
        </childnode>
        <childnode refid="2438" relation="include">
        </childnode>
        <childnode refid="2402" relation="include">
        </childnode>
        <childnode refid="2439" relation="include">
        </childnode>
        <childnode refid="2440" relation="include">
        </childnode>
        <childnode refid="2403" relation="include">
        </childnode>
        <childnode refid="2399" relation="include">
        </childnode>
        <childnode refid="2380" relation="include">
        </childnode>
        <childnode refid="2441" relation="include">
        </childnode>
        <childnode refid="2442" relation="include">
        </childnode>
        <childnode refid="2443" relation="include">
        </childnode>
        <childnode refid="2390" relation="include">
        </childnode>
        <childnode refid="2391" relation="include">
        </childnode>
      </node>
      <node id="2416">
        <label>std_msgs/UInt32.h</label>
      </node>
      <node id="2434">
        <label>boost/date_time/posix_time/posix_time.hpp</label>
      </node>
      <node id="2420">
        <label>geometry_msgs/TransformStamped.h</label>
      </node>
      <node id="2441">
        <label>sensor_msgs/JointState.h</label>
      </node>
      <node id="2421">
        <label>geometry_msgs/Twist.h</label>
      </node>
      <node id="2382">
        <label>unistd.h</label>
      </node>
      <node id="2405">
        <label>dynamic-graph/signal-base.h</label>
      </node>
      <node id="2412">
        <label>vector</label>
      </node>
      <node id="2413">
        <label>utility</label>
      </node>
      <node id="2411">
        <label>dg_to_ros.hh</label>
        <link refid="dg__to__ros_8hh"/>
        <childnode refid="2412" relation="include">
        </childnode>
        <childnode refid="2413" relation="include">
        </childnode>
        <childnode refid="2414" relation="include">
        </childnode>
        <childnode refid="2415" relation="include">
        </childnode>
        <childnode refid="2416" relation="include">
        </childnode>
        <childnode refid="2417" relation="include">
        </childnode>
        <childnode refid="2418" relation="include">
        </childnode>
        <childnode refid="2419" relation="include">
        </childnode>
        <childnode refid="2420" relation="include">
        </childnode>
        <childnode refid="2421" relation="include">
        </childnode>
        <childnode refid="2422" relation="include">
        </childnode>
        <childnode refid="2423" relation="include">
        </childnode>
        <childnode refid="2424" relation="include">
        </childnode>
        <childnode refid="2399" relation="include">
        </childnode>
        <childnode refid="2425" relation="include">
        </childnode>
        <childnode refid="2426" relation="include">
        </childnode>
      </node>
      <node id="2423">
        <label>geometry_msgs/Vector3Stamped.h</label>
      </node>
      <node id="2380">
        <label>ros/ros.h</label>
      </node>
      <node id="2377">
        <label>iostream</label>
      </node>
      <node id="2426">
        <label>ros_entities/matrix_geometry.hh</label>
        <link refid="matrix__geometry_8hh"/>
        <childnode refid="2427" relation="include">
        </childnode>
        <childnode refid="2428" relation="include">
        </childnode>
        <childnode refid="2399" relation="include">
        </childnode>
        <childnode refid="2429" relation="include">
        </childnode>
      </node>
      <node id="2403">
        <label>dynamic-graph/all-signals.h</label>
      </node>
      <node id="2442">
        <label>tf2_msgs/TFMessage.h</label>
      </node>
      <node id="2436">
        <label>deque</label>
      </node>
      <node id="2429">
        <label>dynamic-graph/eigen-io.h</label>
      </node>
      <node id="2417">
        <label>dynamic_graph_manager/Matrix.h</label>
      </node>
      <node id="2425">
        <label>dynamic-graph/signal-ptr.h</label>
      </node>
      <node id="2394">
        <label>dynamic_graph_manager/ros_interpreter.hh</label>
        <link refid="ros__interpreter_8hh"/>
        <childnode refid="2380" relation="include">
        </childnode>
        <childnode refid="2395" relation="include">
        </childnode>
        <childnode refid="2396" relation="include">
        </childnode>
        <childnode refid="2397" relation="include">
        </childnode>
      </node>
      <node id="2402">
        <label>dynamic-graph/entity.h</label>
      </node>
      <node id="2387">
        <label>mutex</label>
      </node>
      <node id="2385">
        <label>chrono</label>
      </node>
      <node id="2400">
        <label>yaml_cpp_catkin/yaml_eigen.h</label>
      </node>
      <node id="2438">
        <label>thread</label>
      </node>
      <node id="2443">
        <label>realtime_tools/realtime_publisher.h</label>
      </node>
      <node id="2398">
        <label>dynamic_graph_manager/tools.hh</label>
        <link refid="tools_8hh"/>
        <childnode refid="2399" relation="include">
        </childnode>
        <childnode refid="2400" relation="include">
        </childnode>
      </node>
      <node id="2422">
        <label>geometry_msgs/TwistStamped.h</label>
      </node>
      <node id="2437">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacedynamic__graph">dynamic_graph</innernamespace>
    <innernamespace refid="namespacedynamicgraph">dynamicgraph</innernamespace>
    <innernamespace refid="namespacedynamicgraph_1_1command">dynamicgraph::command</innernamespace>
    <innernamespace refid="namespacedynamicgraph_1_1command_1_1ros__state__publish">dynamicgraph::command::ros_state_publish</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Maximilien Naveau (<ulink url="mailto:maximilien.naveau@gmail.com">maximilien.naveau@gmail.com</ulink>) </para></simplesect>
<xrefsect id="license_1_license000060"><xreftitle>License</xreftitle><xrefdescription><para>License BSD-3-Clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-05-22 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tf/tf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ros__init_8hh" kindref="compound">dynamic_graph_manager/ros_init.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dynamic__graph__manager_8hh" kindref="compound">dynamic_graph_manager/dynamic_graph_manager.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="converter_8hh" kindref="compound">ros_entities/converter.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ros__robot__state__publisher__mt_8hpp" kindref="compound">ros_entities/ros_robot_state_publisher_mt.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>namespace<sp/>dynamicgraph::sot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedynamicgraph" kindref="compound">dynamicgraph</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedynamic__graph" kindref="compound">dynamic_graph</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="device_8cpp_1a94009a14081eac806149155d1f289f6d" kindref="member">DYNAMICGRAPH_FACTORY_ENTITY_PLUGIN</ref>(RosRobotStatePublisherMt,<sp/></highlight><highlight class="stringliteral">&quot;RosRobotStatePublisherMt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">RosRobotStatePublisherMt::RosRobotStatePublisherMt(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name<sp/>):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>Entity(<sp/>name<sp/>),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>trigger_signal_<sp/>(boost::bind<sp/>(&amp;RosRobotStatePublisherMt::trigger,<sp/>this,<sp/>_1,<sp/>_2),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacedynamicgraph" kindref="compound">dynamicgraph</ref>::sotNOSIGNAL,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAKE_SIGNAL_STRING(name,<sp/>true,<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;trigger&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>ros_node_handle_(<ref refid="namespacedynamic__graph_1ab01ece41a91a029cf335e28548cdfc06" kindref="member">ros_init</ref>(DynamicGraphManager::dg_ros_node_name_))</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>refresh<sp/>signal<sp/>as<sp/>always<sp/>ready.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>signalRegistration(trigger_signal_);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>trigger_signal_.setNeedUpdateFromAllChildren<sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>publishing<sp/>rate<sp/>management<sp/>mechanism</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>last_time_of_publication_<sp/>=<sp/>ros::Time::now<sp/>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>exc)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>call<sp/>ros::Time::now<sp/>():&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>(exc.what<sp/>()));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Commands:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>std::string<sp/>cmd_name;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>std::string<sp/>docstring;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Commands<sp/>-<sp/>add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>cmd_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>docstring<sp/>=</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Create<sp/>a<sp/>new<sp/>ros<sp/>topic<sp/>that<sp/>will<sp/>publish<sp/>the<sp/>state<sp/>of<sp/>robot<sp/>and<sp/>its<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;base.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>input<sp/>data<sp/>is<sp/>a<sp/>generalized<sp/>coordinates<sp/>configuration<sp/>vector.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>robot<sp/>tf<sp/>are<sp/>published<sp/>in<sp/>the<sp/>/dynamic_graph/world<sp/>FixedFrame\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Input:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-<sp/>type:<sp/>string:<sp/>base<sp/>link<sp/>name\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-<sp/>type:<sp/>string:<sp/>joint<sp/>names<sp/>in<sp/>one<sp/>string<sp/>separated<sp/>with<sp/>space\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-<sp/>type:<sp/>string:<sp/>tf_prefix<sp/>used<sp/>for<sp/>the<sp/>robot_state_publisher\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-<sp/>type:<sp/>string:<sp/>signal_name\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-<sp/>type:<sp/>string:<sp/>joint_state_topic_name\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>addCommand<sp/>(cmd_name,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>command::ros_state_publish::Add(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>docstring));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>way<sp/>we<sp/>publish<sp/>as<sp/>fast<sp/>as<sp/>the<sp/>dynamic_graph<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>rate_<sp/>=<sp/>ros::Duration(0.);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph_1_1RosRobotStatePublisherMt_1a2a3280fbd7d9f71c76481830ad71593c" kindref="member">RosRobotStatePublisherMt::add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>base_link_name,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>joint_names,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>tf_prefix,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>signal_name,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>joint_state_topic_name)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>internal<sp/>structure<sp/>that<sp/>own<sp/>the<sp/>publisher<sp/>pointers:</highlight></codeline>
<codeline lineno="78"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>publishers_[joint_state_topic_name]<sp/>=<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;RosRobotStatePublisherMtInternal&gt;();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>shortcuts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>RosRobotStatePublisherMtInternal&amp;<sp/>pub<sp/>=</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*publishers_[joint_state_topic_name];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>internal<sp/>structure:</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>tf<sp/>publisher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.base_tf_publisher_<sp/>=<sp/>std::make_shared&lt;TfRtPublisher&gt;(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ros_node_handle_,<sp/></highlight><highlight class="stringliteral">&quot;/tf&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.base_tf_publisher_-&gt;msg_.transforms.emplace_back();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>makeHeader(pub.base_tf_publisher_-&gt;msg_.transforms[0].header);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>child_frame_id<sp/>=<sp/>tf_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>base_link_name;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.base_tf_publisher_-&gt;msg_.transforms[0].child_frame_id<sp/>=<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tf::resolve(tf_prefix,<sp/>base_link_name);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.base_tf_publisher_-&gt;msg_.transforms[0].transform.translation.x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.base_tf_publisher_-&gt;msg_.transforms[0].transform.translation.y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.base_tf_publisher_-&gt;msg_.transforms[0].transform.translation.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.base_tf_publisher_-&gt;msg_.transforms[0].transform.rotation.x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.base_tf_publisher_-&gt;msg_.transforms[0].transform.rotation.y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.base_tf_publisher_-&gt;msg_.transforms[0].transform.rotation.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.base_tf_publisher_-&gt;msg_.transforms[0].transform.rotation.w<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>joint<sp/>state<sp/>publisher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.joint_state_publisher_<sp/>=<sp/>std::make_shared&lt;JointStateRtPublisher&gt;(</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ros_node_handle_,<sp/>joint_state_topic_name,<sp/>1);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>joint<sp/>name<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>iss(joint_names);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>joint_names_list(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(std::istream_iterator&lt;std::string&gt;(iss)),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::istream_iterator&lt;std::string&gt;()</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.joint_state_publisher_-&gt;msg_.name<sp/>=<sp/>joint_names_list;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.joint_state_publisher_-&gt;msg_.position.resize(joint_names_list.size());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.joint_state_publisher_-&gt;msg_.velocity.resize(joint_names_list.size());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.joint_state_publisher_-&gt;msg_.effort.resize(joint_names_list.size());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>makeHeader(pub.joint_state_publisher_-&gt;msg_.header);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>signal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ostringstream<sp/>oss_signal_name;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>oss_signal_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;RosRobotStatePublisherMt(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)::&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;input(vector&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>joint_names_list.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;d)::&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>signal_name<sp/>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.robot_state_input_signal_<sp/>=<sp/>std::make_shared&lt;SignalIN&gt;(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>oss_signal_name.str()</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>default<sp/>value<sp/>for<sp/>the<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector<sp/>v;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>v.resize<sp/>(0);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.robot_state_input_signal_-&gt;setConstant<sp/>(v);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>the<sp/>signal<sp/>in<sp/>the<sp/>dynamic<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>signalRegistration<sp/>(*pub.robot_state_input_signal_);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>callback.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.callback_function_<sp/>=<sp/>boost::bind(</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classdynamic__graph_1_1RosRobotStatePublisherMt_1a80a4f8a4d9cf9be7c40927ae05d1897f" kindref="member">RosRobotStatePublisherMt::copy_data_internally</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publishers_[joint_state_topic_name],<sp/>_1);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>publishing<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.spinner_.set_period(0.01);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>l;aunch<sp/>the<sp/>publishing<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>pub.thread_<sp/>=<sp/>std::thread(&amp;<ref refid="classdynamic__graph_1_1RosRobotStatePublisherMt_1ac1826cd456058c929f709b3684d85544" kindref="member">RosRobotStatePublisherMt::send_data</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ref(*publishers_[joint_state_topic_name]));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><ref refid="classdynamic__graph_1_1RosRobotStatePublisherMt_1ab246d4672cb6ccf5d0733dae31c5adbf" kindref="member">RosRobotStatePublisherMt::trigger</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>dummy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dg_time)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>call<sp/>all<sp/>the<sp/>callback<sp/>function:<sp/>(send_data)<sp/>corresponding<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>registered<sp/>topic<sp/>to<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;std::string,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RosRobotStatePublisherMtInternal&gt;&gt;::iterator<sp/>PubItType;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>publish<sp/>as<sp/>fast<sp/>as<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ros::Duration<sp/>dt<sp/>=<sp/>ros::Time::now<sp/>()<sp/>-<sp/>last_time_of_publication_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(dt<sp/>&lt;<sp/>rate_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>dummy;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>last_time_of_publication_<sp/>=<sp/>ros::Time::now();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(PubItType<sp/>pub_it<sp/>=<sp/>publishers_.begin()<sp/>;<sp/>pub_it<sp/>!=<sp/>publishers_.end()<sp/>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pub_it)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_it-&gt;second-&gt;callback_function_(dg_time);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dummy;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph_1_1RosRobotStatePublisherMt_1a80a4f8a4d9cf9be7c40927ae05d1897f" kindref="member">RosRobotStatePublisherMt::copy_data_internally</ref>(</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;RosRobotStatePublisherMtInternal&gt;<sp/>publisher,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dg_time)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>acquiere<sp/>the<sp/>input<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>publisher-&gt;mutex_.lock();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>publisher-&gt;robot_state_<sp/>=<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>publisher-&gt;robot_state_input_signal_-&gt;access(dg_time);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>publisher-&gt;mutex_.unlock();</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph_1_1RosRobotStatePublisherMt_1ac1826cd456058c929f709b3684d85544" kindref="member">RosRobotStatePublisherMt::send_data</ref>(</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>RosRobotStatePublisherMtInternal&amp;<sp/>publisher)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>shortcuts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>geometry_msgs::TransformStamped&amp;<sp/>base_pose_msg<sp/>=<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>publisher.base_tf_publisher_-&gt;msg_.transforms[0];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>sensor_msgs::JointState&amp;<sp/>joint_state_msg<sp/>=<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>publisher.joint_state_publisher_-&gt;msg_;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>copy<sp/>of<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>dynamicgraph::Vector<sp/>robot_state;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>init<sp/>ros<sp/>just<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="namespacedynamic__graph_1ab01ece41a91a029cf335e28548cdfc06" kindref="member">ros_init</ref>(<ref refid="classdynamic__graph_1_1DynamicGraphManager_1a391d7a3f7c3df820d31f2c1d0ff7fc51" kindref="member">DynamicGraphManager::dg_ros_node_name_</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>publisher.stop_publish_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!publisher.stop_publish_)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>the<sp/>loop<sp/>with<sp/>the<sp/>spinner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>publisher.spinner_.spin();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acquiere<sp/>the<sp/>input<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>publisher.mutex_.lock();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_state<sp/>=<sp/>publisher.robot_state_;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>publisher.mutex_.unlock();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>joint_state_size<sp/>=<sp/>joint_state_msg.position.size();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(robot_state.size()<sp/>==<sp/>joint_state_size<sp/>||</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_state.size()<sp/>==<sp/>joint_state_size<sp/>+<sp/>7<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>signal<sp/>has<sp/>the<sp/>wrong<sp/>size.<sp/>The<sp/>expected<sp/>size<sp/>is:<sp/>number<sp/>joint,<sp/>or&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>the<sp/>number<sp/>of<sp/>joint<sp/>+<sp/>7<sp/>(base<sp/>pose<sp/>and<sp/>base<sp/>quaternion)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>base<sp/>pose<sp/>is<sp/>in<sp/>the<sp/>robot<sp/>state<sp/>we<sp/>update<sp/>the<sp/>base<sp/>pose<sp/>msg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(robot_state.size()<sp/>==<sp/>joint_state_size<sp/>+<sp/>7)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(publisher.base_tf_publisher_-&gt;trylock<sp/>())</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_pose_msg.header.stamp<sp/>=<sp/>ros::Time::now<sp/>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_pose_msg.transform.translation.x<sp/>=<sp/>robot_state(0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_pose_msg.transform.translation.y<sp/>=<sp/>robot_state(1);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_pose_msg.transform.translation.z<sp/>=<sp/>robot_state(2);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_pose_msg.transform.rotation.x<sp/><sp/><sp/><sp/>=<sp/>robot_state(3);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_pose_msg.transform.rotation.y<sp/><sp/><sp/><sp/>=<sp/>robot_state(4);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_pose_msg.transform.rotation.z<sp/><sp/><sp/><sp/>=<sp/>robot_state(5);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_pose_msg.transform.rotation.w<sp/><sp/><sp/><sp/>=<sp/>robot_state(6);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize_tf_msg_quaternion(base_pose_msg);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publisher.base_tf_publisher_-&gt;unlockAndPublish<sp/>();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>7;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Else<sp/>we<sp/>set<sp/>the<sp/>base<sp/>pose<sp/>to<sp/>the<sp/>origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(publisher.base_tf_publisher_-&gt;trylock<sp/>())</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_pose_msg.header.stamp<sp/>=<sp/>ros::Time::now<sp/>();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_tf_msg_to_identity(base_pose_msg);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publisher.base_tf_publisher_-&gt;unlockAndPublish<sp/>();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(publisher.joint_state_publisher_-&gt;trylock())</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>publisher.joint_state_publisher_-&gt;msg_.header.stamp<sp/>=<sp/>ros::Time::now<sp/>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0<sp/>;<sp/>i&lt;publisher.joint_state_publisher_-&gt;msg_.position.size()<sp/>;<sp/>++i)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publisher.joint_state_publisher_-&gt;msg_.position[i]<sp/>=<sp/>robot_state(index<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>publisher.joint_state_publisher_-&gt;unlockAndPublish<sp/>();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>while(!publisher.stop_publish)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph_1_1RosRobotStatePublisherMt_1af4d3c3ef459132bcce1d47e3a828f0b9" kindref="member">RosRobotStatePublisherMt::set_tf_msg_to_identity</ref>(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>geometry_msgs::TransformStamped&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>msg.transform.translation.x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>msg.transform.translation.y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>msg.transform.translation.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>msg.transform.rotation.x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>msg.transform.rotation.y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>msg.transform.rotation.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>msg.transform.rotation.w<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdynamic__graph_1_1RosRobotStatePublisherMt_1a191779102a7ffb3a947eb345eb55f3d3" kindref="member">RosRobotStatePublisherMt::normalize_tf_msg_quaternion</ref>(</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>geometry_msgs::TransformStamped&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>x<sp/>=<sp/>msg.transform.rotation.x;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>y<sp/>=<sp/>msg.transform.rotation.y;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>z<sp/>=<sp/>msg.transform.rotation.z;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>w<sp/>=<sp/>msg.transform.rotation.w;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm<sp/>=<sp/>sqrt(x*x<sp/>+y*y<sp/>+<sp/>z*z<sp/>+<sp/>w*w);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(norm<sp/>&lt;<sp/>1e-8)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>/=<sp/>norm;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>/=<sp/>norm;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>z<sp/>/=<sp/>norm;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>/=<sp/>norm;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dynamic_graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedynamicgraph" kindref="compound">dynamicgraph</ref></highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">command</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ros_state_publish</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>Add::Add(<ref refid="classdynamic__graph_1_1RosRobotStatePublisherMt" kindref="compound">dynamic_graph::RosRobotStatePublisherMt</ref>&amp;<sp/>entity,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>docstring):</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>Command(entity,<sp/>boost::assign::list_of<sp/>(Value::STRING)<sp/>(Value::STRING)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(Value::STRING)<sp/>(Value::STRING)<sp/>(Value::STRING),<sp/>docstring)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>Value<sp/>Add::doExecute<sp/>()</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdynamic__graph_1_1RosRobotStatePublisherMt" kindref="compound">dynamic_graph::RosRobotStatePublisherMt</ref>&amp;<sp/>entity<sp/>=</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classdynamic__graph_1_1RosRobotStatePublisherMt" kindref="compound">dynamic_graph::RosRobotStatePublisherMt</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(owner<sp/>());</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Value&gt;<sp/>values<sp/>=<sp/>getParameterValues<sp/>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>base_link_name<sp/>=<sp/>values[0].value<sp/>();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>joint_names<sp/>=<sp/>values[1].value<sp/>();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>tf_prefix<sp/>=<sp/>values[2].value<sp/>();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>signal_name<sp/>=<sp/>values[3].value<sp/>();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>joint_state_topic_name<sp/>=<sp/>values[4].value<sp/>();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>entity.<ref refid="classdynamic__graph_1_1RosRobotStatePublisherMt_1a2a3280fbd7d9f71c76481830ad71593c" kindref="member">add</ref>(base_link_name,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>joint_names,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tf_prefix,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal_name,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>joint_state_topic_name);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Value<sp/>();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ros_state_publish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dynamicgraph</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/ros_entities/ros_robot_state_publisher_mt.cpp"/>
  </compounddef>
</doxygen>

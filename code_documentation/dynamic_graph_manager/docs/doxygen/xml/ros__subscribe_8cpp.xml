<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ros__subscribe_8cpp" kind="file" language="C++">
    <compoundname>ros_subscribe.cpp</compoundname>
    <includes local="no">boost/assign.hpp</includes>
    <includes local="no">boost/bind.hpp</includes>
    <includes local="no">boost/format.hpp</includes>
    <includes local="no">boost/function.hpp</includes>
    <includes local="no">boost/make_shared.hpp</includes>
    <includes local="no">ros/ros.h</includes>
    <includes local="no">std_msgs/Float64.h</includes>
    <includes local="no">std_msgs/UInt32.h</includes>
    <includes local="no">dynamic-graph/factory.h</includes>
    <includes refid="ros__init_8hh" local="yes">dynamic_graph_manager/ros_init.hh</includes>
    <includes refid="dynamic__graph__manager_8hh" local="yes">dynamic_graph_manager/dynamic_graph_manager.hh</includes>
    <includes refid="ros__subscribe_8hh" local="yes">ros_entities/ros_subscribe.hh</includes>
    <incdepgraph>
      <node id="2481">
        <label>list</label>
      </node>
      <node id="2461">
        <label>atomic</label>
      </node>
      <node id="2456">
        <label>dynamic_graph_manager/dynamic_graph_manager.hh</label>
        <link refid="dynamic__graph__manager_8hh"/>
        <childnode refid="2457" relation="include">
        </childnode>
        <childnode refid="2458" relation="include">
        </childnode>
        <childnode refid="2459" relation="include">
        </childnode>
        <childnode refid="2460" relation="include">
        </childnode>
        <childnode refid="2461" relation="include">
        </childnode>
        <childnode refid="2462" relation="include">
        </childnode>
        <childnode refid="2463" relation="include">
        </childnode>
        <childnode refid="2451" relation="include">
        </childnode>
        <childnode refid="2464" relation="include">
        </childnode>
        <childnode refid="2465" relation="include">
        </childnode>
        <childnode refid="2466" relation="include">
        </childnode>
        <childnode refid="2467" relation="include">
        </childnode>
        <childnode refid="2468" relation="include">
        </childnode>
        <childnode refid="2469" relation="include">
        </childnode>
        <childnode refid="2473" relation="include">
        </childnode>
        <childnode refid="2476" relation="include">
        </childnode>
      </node>
      <node id="2459">
        <label>functional</label>
      </node>
      <node id="2509">
        <label>boost/date_time/date.hpp</label>
      </node>
      <node id="2486">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="2516">
        <label>dynamic-graph/signal.h</label>
      </node>
      <node id="2454">
        <label>dynamic-graph/factory.h</label>
      </node>
      <node id="2464">
        <label>std_srvs/Empty.h</label>
      </node>
      <node id="2468">
        <label>shared_memory/locked_condition_variable.hpp</label>
      </node>
      <node id="2467">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="2491">
        <label>Eigen/Geometry</label>
      </node>
      <node id="2470">
        <label>dynamic_graph_manager/RunCommand.h</label>
      </node>
      <node id="2448">
        <label>boost/format.hpp</label>
      </node>
      <node id="2515">
        <label>boost/date_time/posix_time/posix_time_types.hpp</label>
      </node>
      <node id="2465">
        <label>real_time_tools/thread.hpp</label>
      </node>
      <node id="2508">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="2501">
        <label>geometry_msgs/Transform.h</label>
      </node>
      <node id="2495">
        <label>stdexcept</label>
      </node>
      <node id="2474">
        <label>dynamic-graph/linear-algebra.h</label>
      </node>
      <node id="2492">
        <label>Eigen/Core</label>
      </node>
      <node id="2507">
        <label>std_msgs/Header.h</label>
      </node>
      <node id="2494">
        <label>converter.hh</label>
        <link refid="converter_8hh"/>
        <childnode refid="2495" relation="include">
        </childnode>
        <childnode refid="2496" relation="include">
        </childnode>
        <childnode refid="2506" relation="include">
        </childnode>
        <childnode refid="2507" relation="include">
        </childnode>
        <childnode refid="2508" relation="include">
        </childnode>
        <childnode refid="2509" relation="include">
        </childnode>
        <childnode refid="2510" relation="include">
        </childnode>
      </node>
      <node id="2513">
        <label>dynamic-graph/signal-cast-helper.h</label>
      </node>
      <node id="2483">
        <label>string</label>
      </node>
      <node id="2446">
        <label>boost/assign.hpp</label>
      </node>
      <node id="2482">
        <label>map</label>
      </node>
      <node id="2500">
        <label>dynamic_graph_manager/Vector.h</label>
      </node>
      <node id="2458">
        <label>wait.h</label>
      </node>
      <node id="2506">
        <label>ros/time.h</label>
      </node>
      <node id="2489">
        <label>dynamic-graph/command.h</label>
      </node>
      <node id="2476">
        <label>dynamic_graph_manager/device.hh</label>
        <link refid="device_8hh"/>
        <childnode refid="2463" relation="include">
        </childnode>
        <childnode refid="2474" relation="include">
        </childnode>
        <childnode refid="2477" relation="include">
        </childnode>
        <childnode refid="2478" relation="include">
        </childnode>
        <childnode refid="2479" relation="include">
        </childnode>
        <childnode refid="2473" relation="include">
        </childnode>
      </node>
      <node id="2472">
        <label>dynamic-graph/python/interpreter.hh</label>
      </node>
      <node id="2455">
        <label>dynamic_graph_manager/ros_init.hh</label>
        <link refid="ros__init_8hh"/>
        <childnode refid="2451" relation="include">
        </childnode>
      </node>
      <node id="2479">
        <label>dynamic_graph_manager/periodic-call.hh</label>
        <link refid="periodic-call_8hh"/>
        <childnode refid="2472" relation="include">
        </childnode>
        <childnode refid="2480" relation="include">
        </childnode>
        <childnode refid="2477" relation="include">
        </childnode>
        <childnode refid="2481" relation="include">
        </childnode>
        <childnode refid="2482" relation="include">
        </childnode>
        <childnode refid="2483" relation="include">
        </childnode>
      </node>
      <node id="2445">
        <label>src/ros_entities/ros_subscribe.cpp</label>
        <link refid="ros_subscribe.cpp"/>
        <childnode refid="2446" relation="include">
        </childnode>
        <childnode refid="2447" relation="include">
        </childnode>
        <childnode refid="2448" relation="include">
        </childnode>
        <childnode refid="2449" relation="include">
        </childnode>
        <childnode refid="2450" relation="include">
        </childnode>
        <childnode refid="2451" relation="include">
        </childnode>
        <childnode refid="2452" relation="include">
        </childnode>
        <childnode refid="2453" relation="include">
        </childnode>
        <childnode refid="2454" relation="include">
        </childnode>
        <childnode refid="2455" relation="include">
        </childnode>
        <childnode refid="2456" relation="include">
        </childnode>
        <childnode refid="2484" relation="include">
        </childnode>
      </node>
      <node id="2452">
        <label>std_msgs/Float64.h</label>
      </node>
      <node id="2449">
        <label>boost/function.hpp</label>
      </node>
      <node id="2487">
        <label>dynamic-graph/signal-time-dependent.h</label>
      </node>
      <node id="2466">
        <label>real_time_tools/spinner.hpp</label>
      </node>
      <node id="2471">
        <label>dynamic_graph_manager/RunPythonFile.h</label>
      </node>
      <node id="2463">
        <label>yaml-cpp/yaml.h</label>
      </node>
      <node id="2512">
        <label>dynamic-graph/signal-caster.h</label>
      </node>
      <node id="2453">
        <label>std_msgs/UInt32.h</label>
      </node>
      <node id="2510">
        <label>boost/date_time/posix_time/posix_time.hpp</label>
      </node>
      <node id="2502">
        <label>geometry_msgs/TransformStamped.h</label>
      </node>
      <node id="2503">
        <label>geometry_msgs/Twist.h</label>
      </node>
      <node id="2457">
        <label>unistd.h</label>
      </node>
      <node id="2480">
        <label>dynamic-graph/signal-base.h</label>
      </node>
      <node id="2497">
        <label>vector</label>
      </node>
      <node id="2498">
        <label>utility</label>
      </node>
      <node id="2496">
        <label>dg_to_ros.hh</label>
        <link refid="dg__to__ros_8hh"/>
        <childnode refid="2497" relation="include">
        </childnode>
        <childnode refid="2498" relation="include">
        </childnode>
        <childnode refid="2448" relation="include">
        </childnode>
        <childnode refid="2452" relation="include">
        </childnode>
        <childnode refid="2453" relation="include">
        </childnode>
        <childnode refid="2499" relation="include">
        </childnode>
        <childnode refid="2500" relation="include">
        </childnode>
        <childnode refid="2501" relation="include">
        </childnode>
        <childnode refid="2502" relation="include">
        </childnode>
        <childnode refid="2503" relation="include">
        </childnode>
        <childnode refid="2504" relation="include">
        </childnode>
        <childnode refid="2505" relation="include">
        </childnode>
        <childnode refid="2487" relation="include">
        </childnode>
        <childnode refid="2474" relation="include">
        </childnode>
        <childnode refid="2488" relation="include">
        </childnode>
        <childnode refid="2490" relation="include">
        </childnode>
      </node>
      <node id="2505">
        <label>geometry_msgs/Vector3Stamped.h</label>
      </node>
      <node id="2451">
        <label>ros/ros.h</label>
      </node>
      <node id="2514">
        <label>ros_time.hh</label>
        <link refid="ros__time_8hh"/>
        <childnode refid="2506" relation="include">
        </childnode>
        <childnode refid="2515" relation="include">
        </childnode>
        <childnode refid="2516" relation="include">
        </childnode>
        <childnode refid="2477" relation="include">
        </childnode>
      </node>
      <node id="2485">
        <label>iostream</label>
      </node>
      <node id="2490">
        <label>ros_entities/matrix_geometry.hh</label>
        <link refid="matrix__geometry_8hh"/>
        <childnode refid="2491" relation="include">
        </childnode>
        <childnode refid="2492" relation="include">
        </childnode>
        <childnode refid="2474" relation="include">
        </childnode>
        <childnode refid="2493" relation="include">
        </childnode>
      </node>
      <node id="2478">
        <label>dynamic-graph/all-signals.h</label>
      </node>
      <node id="2493">
        <label>dynamic-graph/eigen-io.h</label>
      </node>
      <node id="2499">
        <label>dynamic_graph_manager/Matrix.h</label>
      </node>
      <node id="2488">
        <label>dynamic-graph/signal-ptr.h</label>
      </node>
      <node id="2469">
        <label>dynamic_graph_manager/ros_interpreter.hh</label>
        <link refid="ros__interpreter_8hh"/>
        <childnode refid="2451" relation="include">
        </childnode>
        <childnode refid="2470" relation="include">
        </childnode>
        <childnode refid="2471" relation="include">
        </childnode>
        <childnode refid="2472" relation="include">
        </childnode>
      </node>
      <node id="2477">
        <label>dynamic-graph/entity.h</label>
      </node>
      <node id="2447">
        <label>boost/bind.hpp</label>
      </node>
      <node id="2462">
        <label>mutex</label>
      </node>
      <node id="2460">
        <label>chrono</label>
      </node>
      <node id="2475">
        <label>yaml_cpp_catkin/yaml_eigen.h</label>
      </node>
      <node id="2450">
        <label>boost/make_shared.hpp</label>
      </node>
      <node id="2484">
        <label>ros_entities/ros_subscribe.hh</label>
        <link refid="ros__subscribe_8hh"/>
        <childnode refid="2485" relation="include">
        </childnode>
        <childnode refid="2482" relation="include">
        </childnode>
        <childnode refid="2486" relation="include">
        </childnode>
        <childnode refid="2477" relation="include">
        </childnode>
        <childnode refid="2487" relation="include">
        </childnode>
        <childnode refid="2488" relation="include">
        </childnode>
        <childnode refid="2489" relation="include">
        </childnode>
        <childnode refid="2490" relation="include">
        </childnode>
        <childnode refid="2451" relation="include">
        </childnode>
        <childnode refid="2494" relation="include">
        </childnode>
        <childnode refid="2496" relation="include">
        </childnode>
        <childnode refid="2511" relation="include">
        </childnode>
      </node>
      <node id="2511">
        <label>ros_subscribe.hxx</label>
        <link refid="ros__subscribe_8hxx"/>
        <childnode refid="2497" relation="include">
        </childnode>
        <childnode refid="2447" relation="include">
        </childnode>
        <childnode refid="2510" relation="include">
        </childnode>
        <childnode refid="2512" relation="include">
        </childnode>
        <childnode refid="2474" relation="include">
        </childnode>
        <childnode refid="2513" relation="include">
        </childnode>
        <childnode refid="2452" relation="include">
        </childnode>
        <childnode refid="2499" relation="include">
        </childnode>
        <childnode refid="2500" relation="include">
        </childnode>
        <childnode refid="2514" relation="include">
        </childnode>
      </node>
      <node id="2473">
        <label>dynamic_graph_manager/tools.hh</label>
        <link refid="tools_8hh"/>
        <childnode refid="2474" relation="include">
        </childnode>
        <childnode refid="2475" relation="include">
        </childnode>
      </node>
      <node id="2504">
        <label>geometry_msgs/TwistStamped.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacedynamic__graph">dynamic_graph</innernamespace>
    <innernamespace refid="namespacedynamic__graph_1_1command">dynamic_graph::command</innernamespace>
    <innernamespace refid="namespacedynamic__graph_1_1command_1_1rosSubscribe">dynamic_graph::command::rosSubscribe</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Maximilien Naveau (<ulink url="mailto:maximilien.naveau@gmail.com">maximilien.naveau@gmail.com</ulink>) </para></simplesect>
<xrefsect id="license_1_license000061"><xreftitle>License</xreftitle><xrefdescription><para>License BSD-3-Clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-05-22 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#include<sp/>&lt;boost/assign.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/bind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/format.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/function.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/make_shared.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;std_msgs/Float64.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;std_msgs/UInt32.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dynamic-graph/factory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ros__init_8hh" kindref="compound">dynamic_graph_manager/ros_init.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dynamic__graph__manager_8hh" kindref="compound">dynamic_graph_manager/dynamic_graph_manager.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ros__subscribe_8hh" kindref="compound">ros_entities/ros_subscribe.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedynamic__graph" kindref="compound">dynamic_graph</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="namespacedynamic__graph_1a04797aa55f04bd1e07b64c0caa685c6b" kindref="member">DYNAMICGRAPH_FACTORY_ENTITY_PLUGIN</ref>(RosSubscribe,<sp/></highlight><highlight class="stringliteral">&quot;RosSubscribe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">command</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rosSubscribe</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Clear::Clear</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(RosSubscribe&amp;<sp/>entity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>docstring)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Command</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(entity,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::vector&lt;Value::Type&gt;<sp/>(),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docstring)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Value<sp/>Clear::doExecute<sp/>()</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RosSubscribe&amp;<sp/>entity<sp/>=</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">RosSubscribe&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(owner<sp/>());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.clear<sp/>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Value<sp/>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>List::List</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(RosSubscribe&amp;<sp/>entity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>docstring)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Command</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(entity,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::vector&lt;Value::Type&gt;<sp/>(),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docstring)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Value<sp/>List::doExecute<sp/>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RosSubscribe&amp;<sp/>entity<sp/>=</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">RosSubscribe&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(owner<sp/>());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Value<sp/>(entity.list<sp/>());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Add::Add</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(RosSubscribe&amp;<sp/>entity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>docstring)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Command</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(entity,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::assign::list_of</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Value::STRING)<sp/>(Value::STRING)<sp/>(Value::STRING),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docstring)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Value<sp/>Add::doExecute<sp/>()</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RosSubscribe&amp;<sp/>entity<sp/>=</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">RosSubscribe&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(owner<sp/>());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Value&gt;<sp/>values<sp/>=<sp/>getParameterValues<sp/>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type<sp/>=<sp/>values[0].value<sp/>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>signal<sp/>=<sp/>values[1].value<sp/>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>topic<sp/>=<sp/>values[2].value<sp/>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;double&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.add&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;<sp/>(signal,<sp/>topic);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;unsigned&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.add&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>(signal,<sp/>topic);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;matrix&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.add&lt;dg::Matrix&gt;<sp/>(signal,<sp/>topic);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;vector&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.add&lt;dg::Vector&gt;<sp/>(signal,<sp/>topic);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;vector3&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.add&lt;specific::Vector3&gt;<sp/>(signal,<sp/>topic);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;vector3Stamped&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.add&lt;std::pair&lt;specific::Vector3,<sp/>dg::Vector&gt;<sp/>&gt;<sp/>(signal,<sp/>topic);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;matrixHomo&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.add&lt;MatrixHomogeneous&gt;<sp/>(signal,<sp/>topic);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;matrixHomoStamped&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.add&lt;std::pair&lt;MatrixHomogeneous,<sp/>dg::Vector&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(signal,<sp/>topic);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;twist&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.add&lt;specific::Twist&gt;<sp/>(signal,<sp/>topic);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;twistStamped&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.add&lt;std::pair&lt;specific::Twist,<sp/>dg::Vector&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(signal,<sp/>topic);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;bad<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Value<sp/>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Rm::Rm</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(RosSubscribe&amp;<sp/>entity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>docstring)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Command</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(entity,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::assign::list_of<sp/>(Value::STRING),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docstring)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Value<sp/>Rm::doExecute<sp/>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RosSubscribe&amp;<sp/>entity<sp/>=</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">RosSubscribe&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(owner<sp/>());</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Value&gt;<sp/>values<sp/>=<sp/>getParameterValues<sp/>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>signal<sp/>=<sp/>values[0].value<sp/>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.rm<sp/>(signal);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Value<sp/>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>errorEstimator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>RosSubscribe::docstring_</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Subscribe<sp/>to<sp/>a<sp/>ROS<sp/>topics<sp/>and<sp/>convert<sp/>it<sp/>into<sp/>a<sp/>dynamic-graph<sp/>signals.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Use<sp/>command<sp/>\&quot;add\&quot;<sp/>to<sp/>subscribe<sp/>to<sp/>a<sp/>new<sp/>signal.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>RosSubscribe::RosSubscribe<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>n)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespacedynamicgraph" kindref="compound">dynamicgraph</ref>::Entity(n),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nh_<sp/>(<ref refid="namespacedynamic__graph_1ab01ece41a91a029cf335e28548cdfc06" kindref="member">ros_init</ref>(DynamicGraphManager::dg_ros_node_name_)),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bindedSignal_<sp/>()</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>docstring<sp/>=</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Add<sp/>a<sp/>signal<sp/>reading<sp/>data<sp/>from<sp/>a<sp/>ROS<sp/>topic\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Input:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-<sp/>type:<sp/>string<sp/>among<sp/>[&apos;double&apos;,<sp/>&apos;matrix&apos;,<sp/>&apos;vector&apos;,<sp/>&apos;vector3&apos;,\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;vector3Stamped&apos;,<sp/>&apos;matrixHomo&apos;,<sp/>&apos;matrixHomoStamped&apos;,\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;twist&apos;,<sp/>&apos;twistStamped&apos;],\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-<sp/>signal:<sp/>the<sp/>signal<sp/>name<sp/>in<sp/>dynamic-graph,\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-<sp/>topic:<sp/><sp/>the<sp/>topic<sp/>name<sp/>in<sp/>ROS.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>addCommand<sp/>(</highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>command::rosSubscribe::Add</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>docstring));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>docstring<sp/>=</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Remove<sp/>a<sp/>signal<sp/>reading<sp/>data<sp/>from<sp/>a<sp/>ROS<sp/>topic\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Input:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-<sp/>name<sp/>of<sp/>the<sp/>signal<sp/>to<sp/>remove<sp/>(see<sp/>method<sp/>list<sp/>for<sp/>the<sp/>list<sp/>of<sp/>signals).\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>addCommand<sp/>(</highlight><highlight class="stringliteral">&quot;rm&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>command::rosSubscribe::Rm</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>docstring));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>docstring<sp/>=</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Remove<sp/>all<sp/>signals<sp/>reading<sp/>data<sp/>from<sp/>a<sp/>ROS<sp/>topic\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>No<sp/>input:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>addCommand<sp/>(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>command::rosSubscribe::Clear</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>docstring));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>docstring<sp/>=</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>List<sp/>signals<sp/>reading<sp/>data<sp/>from<sp/>a<sp/>ROS<sp/>topic\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>No<sp/>input:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>addCommand<sp/>(</highlight><highlight class="stringliteral">&quot;list&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>command::rosSubscribe::List</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>docstring));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>RosSubscribe::~RosSubscribe<sp/>()</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RosSubscribe::display<sp/>(std::ostream&amp;<sp/>os)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="190"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>CLASS_NAME<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RosSubscribe::rm<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>signal)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>signalTs<sp/>=<sp/>signal+</highlight><highlight class="stringliteral">&quot;Timestamp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>signalDeregistration(signal);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>bindedSignal_.erase<sp/>(signal);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bindedSignal_.find(signalTs)<sp/>!=<sp/>bindedSignal_.end())</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>signalDeregistration(signalTs);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bindedSignal_.erase(signalTs);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>std::string<sp/>RosSubscribe::list<sp/>()</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>result(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::map&lt;std::string,<sp/>bindedSignal_t&gt;::const_iterator<sp/>it<sp/>=</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bindedSignal_.begin<sp/>();<sp/>it<sp/>!=<sp/>bindedSignal_.end<sp/>();<sp/>it++)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>it-&gt;first<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RosSubscribe::clear<sp/>()</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>bindedSignal_t&gt;::iterator<sp/>it<sp/>=<sp/>bindedSignal_.begin();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>it!=<sp/>bindedSignal_.end();<sp/>)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rm(it-&gt;first);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>bindedSignal_.begin();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>std::string<sp/>RosSubscribe::getDocString<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="230"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>docstring_;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>dynamicgraph.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/ros_entities/ros_subscribe.cpp"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="converter_8hh" kind="file" language="C++">
    <compoundname>converter.hh</compoundname>
    <includes local="no">stdexcept</includes>
    <includes refid="dg__to__ros_8hh" local="yes">dg_to_ros.hh</includes>
    <includes local="no">ros/time.h</includes>
    <includes local="no">std_msgs/Header.h</includes>
    <includes local="no">boost/static_assert.hpp</includes>
    <includes local="no">boost/date_time/date.hpp</includes>
    <includes local="no">boost/date_time/posix_time/posix_time.hpp</includes>
    <includedby refid="ros__publish_8hh" local="yes">include/ros_entities/ros_publish.hh</includedby>
    <includedby refid="ros__queued__subscribe_8hh" local="no">include/ros_entities/ros_queued_subscribe.hh</includedby>
    <includedby refid="ros__subscribe_8hh" local="yes">include/ros_entities/ros_subscribe.hh</includedby>
    <includedby refid="converter_8cpp" local="no">src/ros_entities/converter.cpp</includedby>
    <includedby refid="ros__robot__state__publisher_8cpp" local="yes">src/ros_entities/ros_robot_state_publisher.cpp</includedby>
    <includedby refid="ros__robot__state__publisher__mt_8cpp" local="yes">src/ros_entities/ros_robot_state_publisher_mt.cpp</includedby>
    <includedby refid="ros__time_8cpp" local="yes">src/ros_entities/ros_time.cpp</includedby>
    <incdepgraph>
      <node id="1616">
        <label>boost/date_time/date.hpp</label>
      </node>
      <node id="1610">
        <label>Eigen/Geometry</label>
      </node>
      <node id="1596">
        <label>boost/format.hpp</label>
      </node>
      <node id="1615">
        <label>boost/static_assert.hpp</label>
      </node>
      <node id="1607">
        <label>dynamic-graph/linear-algebra.h</label>
      </node>
      <node id="1601">
        <label>geometry_msgs/Transform.h</label>
      </node>
      <node id="1592">
        <label>stdexcept</label>
      </node>
      <node id="1611">
        <label>Eigen/Core</label>
      </node>
      <node id="1614">
        <label>std_msgs/Header.h</label>
      </node>
      <node id="1591">
        <label>include/ros_entities/converter.hh</label>
        <link refid="converter.hh"/>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1593" relation="include">
        </childnode>
        <childnode refid="1613" relation="include">
        </childnode>
        <childnode refid="1614" relation="include">
        </childnode>
        <childnode refid="1615" relation="include">
        </childnode>
        <childnode refid="1616" relation="include">
        </childnode>
        <childnode refid="1617" relation="include">
        </childnode>
      </node>
      <node id="1600">
        <label>dynamic_graph_manager/Vector.h</label>
      </node>
      <node id="1613">
        <label>ros/time.h</label>
      </node>
      <node id="1597">
        <label>std_msgs/Float64.h</label>
      </node>
      <node id="1606">
        <label>dynamic-graph/signal-time-dependent.h</label>
      </node>
      <node id="1598">
        <label>std_msgs/UInt32.h</label>
      </node>
      <node id="1617">
        <label>boost/date_time/posix_time/posix_time.hpp</label>
      </node>
      <node id="1602">
        <label>geometry_msgs/TransformStamped.h</label>
      </node>
      <node id="1603">
        <label>geometry_msgs/Twist.h</label>
      </node>
      <node id="1594">
        <label>vector</label>
      </node>
      <node id="1595">
        <label>utility</label>
      </node>
      <node id="1593">
        <label>dg_to_ros.hh</label>
        <link refid="dg__to__ros_8hh"/>
        <childnode refid="1594" relation="include">
        </childnode>
        <childnode refid="1595" relation="include">
        </childnode>
        <childnode refid="1596" relation="include">
        </childnode>
        <childnode refid="1597" relation="include">
        </childnode>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
        <childnode refid="1600" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1602" relation="include">
        </childnode>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1604" relation="include">
        </childnode>
        <childnode refid="1605" relation="include">
        </childnode>
        <childnode refid="1606" relation="include">
        </childnode>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
        <childnode refid="1609" relation="include">
        </childnode>
      </node>
      <node id="1605">
        <label>geometry_msgs/Vector3Stamped.h</label>
      </node>
      <node id="1609">
        <label>ros_entities/matrix_geometry.hh</label>
        <link refid="matrix__geometry_8hh"/>
        <childnode refid="1610" relation="include">
        </childnode>
        <childnode refid="1611" relation="include">
        </childnode>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
      </node>
      <node id="1612">
        <label>dynamic-graph/eigen-io.h</label>
      </node>
      <node id="1599">
        <label>dynamic_graph_manager/Matrix.h</label>
      </node>
      <node id="1608">
        <label>dynamic-graph/signal-ptr.h</label>
      </node>
      <node id="1604">
        <label>geometry_msgs/TwistStamped.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1625">
        <label>src/ros_entities/converter.cpp</label>
        <link refid="converter_8cpp"/>
      </node>
      <node id="1619">
        <label>include/ros_entities/ros_publish.hh</label>
        <link refid="ros__publish_8hh"/>
        <childnode refid="1620" relation="include">
        </childnode>
      </node>
      <node id="1627">
        <label>src/ros_entities/ros_robot_state_publisher_mt.cpp</label>
        <link refid="ros__robot__state__publisher__mt_8cpp"/>
      </node>
      <node id="1621">
        <label>include/ros_entities/ros_queued_subscribe.hh</label>
        <link refid="ros__queued__subscribe_8hh"/>
        <childnode refid="1622" relation="include">
        </childnode>
      </node>
      <node id="1618">
        <label>include/ros_entities/converter.hh</label>
        <link refid="converter.hh"/>
        <childnode refid="1619" relation="include">
        </childnode>
        <childnode refid="1621" relation="include">
        </childnode>
        <childnode refid="1623" relation="include">
        </childnode>
        <childnode refid="1625" relation="include">
        </childnode>
        <childnode refid="1626" relation="include">
        </childnode>
        <childnode refid="1627" relation="include">
        </childnode>
        <childnode refid="1628" relation="include">
        </childnode>
      </node>
      <node id="1620">
        <label>src/ros_entities/ros_publish.cpp</label>
        <link refid="ros__publish_8cpp"/>
      </node>
      <node id="1624">
        <label>src/ros_entities/ros_subscribe.cpp</label>
        <link refid="ros__subscribe_8cpp"/>
      </node>
      <node id="1626">
        <label>src/ros_entities/ros_robot_state_publisher.cpp</label>
        <link refid="ros__robot__state__publisher_8cpp"/>
      </node>
      <node id="1623">
        <label>include/ros_entities/ros_subscribe.hh</label>
        <link refid="ros__subscribe_8hh"/>
        <childnode refid="1624" relation="include">
        </childnode>
      </node>
      <node id="1628">
        <label>src/ros_entities/ros_time.cpp</label>
        <link refid="ros__time_8cpp"/>
      </node>
      <node id="1622">
        <label>src/ros_entities/ros_queued_subscribe.cpp</label>
        <link refid="ros__queued__subscribe_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacedynamic__graph">dynamic_graph</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="converter_8hh_1a63952ae235f5309d5e1dbb91136763ef" prot="public" static="no">
        <name>DG_TO_ROS_IMPL</name>
        <param><defname>T</defname></param>
        <initializer>template &lt;&gt;								\
  inline void								\
  converter (DgToRos&lt;T&gt;::ros_t&amp; dst, const DgToRos&lt;T&gt;::dg_t&amp; src)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ros_entities/converter.hh" line="32" column="10" bodyfile="include/ros_entities/converter.hh" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="converter_8hh_1a3d5ba09fc46eae47e88ee8707b6a050f" prot="public" static="no">
        <name>ROS_TO_DG_IMPL</name>
        <param><defname>T</defname></param>
        <initializer>template &lt;&gt;								\
  inline void								\
  converter (DgToRos&lt;T&gt;::dg_t&amp; dst, const DgToRos&lt;T&gt;::ros_t&amp; src)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ros_entities/converter.hh" line="37" column="10" bodyfile="include/ros_entities/converter.hh" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="converter_8hh_1ae02c25236f7cecbfbdbf9cc9239cb785" prot="public" static="no">
        <name>DG_BRIDGE_TO_ROS_MAKE_STAMPED_IMPL</name>
        <param><defname>T</defname></param>
        <param><defname>ATTRIBUTE</defname></param>
        <param><defname>EXTRA</defname></param>
        <initializer>template &lt;&gt;								\
  inline void converter							\
  (DgToRos&lt;std::pair&lt;T, Vector&gt; &gt;::ros_t&amp; dst,			\
   const DgToRos&lt;std::pair&lt;T, Vector&gt; &gt;::dg_t&amp; src)		\
  {									\
    makeHeader(dst.header);						\
    converter&lt;DgToRos&lt;T&gt;::ros_t, DgToRos&lt;T&gt;::dg_t&gt; (dst.ATTRIBUTE, src); \
    do { EXTRA } while (0);						\
  }									\
  struct e_n_d__w_i_t_h__s_e_m_i_c_o_l_o_n</initializer>
        <briefdescription>
<para>This macro generates a converter for a stamped type from dynamic-graph to ROS. </para>        </briefdescription>
        <detaileddescription>
<para>I.e. A data associated with its timestamp. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ros_entities/converter.hh" line="201" column="10" bodyfile="include/ros_entities/converter.hh" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="converter_8hh_1a9de018e745b4235be09aaab744557770" prot="public" static="no">
        <name>DG_BRIDGE_MAKE_SHPTR_IMPL</name>
        <param><defname>T</defname></param>
        <initializer>template &lt;&gt;								\
  inline void converter							\
  (DgToRos&lt;T&gt;::dg_t&amp; dst,						\
   const boost::shared_ptr&lt;DgToRos&lt;T&gt;::ros_t const&gt;&amp; src)		\
  {									\
    converter&lt;DgToRos&lt;T&gt;::dg_t, DgToRos&lt;T&gt;::ros_t&gt; (dst, *src);	\
  }									\
  struct e_n_d__w_i_t_h__s_e_m_i_c_o_l_o_n</initializer>
        <briefdescription>
<para>This macro generates a converter for a shared pointer on a ROS type to a dynamic-graph type. </para>        </briefdescription>
        <detaileddescription>
<para>A converter for the underlying type is required. I.e. to convert a shared_ptr&lt;T&gt; to T&apos;, a converter from T to T&apos; is required. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ros_entities/converter.hh" line="225" column="10" bodyfile="include/ros_entities/converter.hh" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="converter_8hh_1a9ecac683e8b5794b8717b7d2d18c8b22" prot="public" static="no">
        <name>DG_BRIDGE_MAKE_STAMPED_IMPL</name>
        <param><defname>T</defname></param>
        <param><defname>ATTRIBUTE</defname></param>
        <param><defname>EXTRA</defname></param>
        <initializer>template &lt;&gt;								\
  inline void converter							\
  (DgToRos&lt;std::pair&lt;T, Vector&gt; &gt;::dg_t&amp; dst,			\
   const DgToRos&lt;std::pair&lt;T, Vector&gt; &gt;::ros_t&amp; src)		\
  {									\
    converter&lt;DgToRos&lt;T&gt;::dg_t, DgToRos&lt;T&gt;::ros_t&gt; (dst, src.ATTRIBUTE); \
    do { EXTRA } while (0);						\
  }									\
  struct e_n_d__w_i_t_h__s_e_m_i_c_o_l_o_n</initializer>
        <briefdescription>
<para>This macro generates a converter for a stamped type. </para>        </briefdescription>
        <detaileddescription>
<para>I.e. A data associated with its timestamp.</para><para>FIXME: the timestamp is not yet forwarded to the dg signal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ros_entities/converter.hh" line="247" column="10" bodyfile="include/ros_entities/converter.hh" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="converter_8hh_1a2c8d741da8bc5978c852fb7b71ec26e7" prot="public" static="no">
        <name>DG_BRIDGE_MAKE_STAMPED_SHPTR_IMPL</name>
        <param><defname>T</defname></param>
        <param><defname>ATTRIBUTE</defname></param>
        <param><defname>EXTRA</defname></param>
        <initializer>template &lt;&gt;								\
  inline void converter							\
  (DgToRos&lt;std::pair&lt;T, Vector&gt; &gt;::dg_t&amp; dst,			\
   const boost::shared_ptr						\
   &lt;DgToRos&lt;std::pair&lt;T, Vector&gt; &gt;::ros_t const&gt;&amp; src)		\
  {									\
    converter&lt;DgToRos&lt;T&gt;::dg_t, DgToRos&lt;T&gt;::ros_t&gt; (dst, src-&gt;ATTRIBUTE); \
    do { EXTRA } while (0);						\
  }									\
  struct e_n_d__w_i_t_h__s_e_m_i_c_o_l_o_n</initializer>
        <briefdescription>
<para>This macro generates a converter for a shared pointer on a stamped type. </para>        </briefdescription>
        <detaileddescription>
<para>I.e. A data associated with its timestamp.</para><para>FIXME: the timestamp is not yet forwarded to the dg signal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ros_entities/converter.hh" line="266" column="10" bodyfile="include/ros_entities/converter.hh" bodystart="266" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Maximilien Naveau (<ulink url="mailto:maximilien.naveau@gmail.com">maximilien.naveau@gmail.com</ulink>) </para></simplesect>
<xrefsect id="license_1_license000018"><xreftitle>License</xreftitle><xrefdescription><para>License BSD-3-Clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-05-22 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#ifndef<sp/>DYNAMIC_GRAPH_ROS_CONVERTER_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DYNAMIC_GRAPH_ROS_CONVERTER_HH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="dg__to__ros_8hh" kindref="compound">dg_to_ros.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;ros/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;std_msgs/Header.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>not<sp/>used?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>include<sp/>&lt;LinearMath/btMatrix3x3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>include<sp/>&lt;LinearMath/btQuaternion.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MAC_OS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>MAC_OS<sp/>a<sp/>macro<sp/>&quot;tolower&quot;<sp/>when<sp/>__APPLE__<sp/>is<sp/>defined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>compatibility<sp/>reason<sp/>we<sp/>need<sp/>to<sp/>undefine<sp/>it<sp/>as<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>interfere<sp/>with<sp/>the<sp/>std::tolower<sp/>function<sp/>used<sp/>in<sp/>boost/date_time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>undef<sp/>tolower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MAC_OS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/static_assert.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/date_time/date.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/date_time/posix_time/posix_time.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>DG_TO_ROS_IMPL(T)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/>inline<sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/>converter<sp/>(DgToRos&lt;T&gt;::ros_t&amp;<sp/>dst,<sp/>const<sp/>DgToRos&lt;T&gt;::dg_t&amp;<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>ROS_TO_DG_IMPL(T)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/>inline<sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/>converter<sp/>(DgToRos&lt;T&gt;::dg_t&amp;<sp/>dst,<sp/>const<sp/>DgToRos&lt;T&gt;::ros_t&amp;<sp/>src)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedynamic__graph" kindref="compound">dynamic_graph</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>makeHeader(std_msgs::Header&amp;<sp/>header)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>header.seq<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>header.stamp<sp/>=<sp/>ros::Time::now<sp/>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/dynamic_graph/world&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacedynamic__graph_1aa00932c9efb8a607efd6997386d78680" kindref="member">converter</ref><sp/>(D&amp;<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>S&amp;<sp/>src);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>DG_TO_ROS_IMPL(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.data<sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>ROS_TO_DG_IMPL(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>src.data;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>DG_TO_ROS_IMPL(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.data<sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>ROS_TO_DG_IMPL(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>src.data;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>DG_TO_ROS_IMPL(Vector)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.data.resize<sp/>(src.size<sp/>());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>src.size<sp/>();<sp/>++i)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst.data[i]<sp/>=<sp/><sp/>src<sp/>(i);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>ROS_TO_DG_IMPL(Vector)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.resize<sp/>(src.data.size<sp/>());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>src.data.size<sp/>();<sp/>++i)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>(i)<sp/>=<sp/><sp/>src.data[i];</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vector3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>DG_TO_ROS_IMPL(specific::Vector3)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src.size<sp/>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.x<sp/>=<sp/><sp/>src<sp/>(0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src.size<sp/>()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst.y<sp/>=<sp/><sp/>src<sp/>(1);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src.size<sp/>()<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst.z<sp/>=<sp/><sp/>src<sp/>(2);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>ROS_TO_DG_IMPL(specific::Vector3)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.resize<sp/>(3);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>(0)<sp/>=<sp/><sp/>src.x;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>(1)<sp/>=<sp/><sp/>src.y;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>(2)<sp/>=<sp/><sp/>src.z;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>DG_TO_ROS_IMPL(Matrix)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Confirm<sp/>Ros<sp/>Matrix<sp/>Storage<sp/>order.<sp/>It<sp/>changes<sp/>the<sp/>RosMatrix<sp/>to<sp/>ColMajor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.width<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)src.rows<sp/>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.data.resize<sp/>(src.cols<sp/>()<sp/>*<sp/>src.rows<sp/>());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>src.cols<sp/>()<sp/>*<sp/>src.rows<sp/>();<sp/>++i)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst.data[i]<sp/>=<sp/><sp/>src.data()[i];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>ROS_TO_DG_IMPL(Matrix)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.resize<sp/>(src.width,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>src.data.size<sp/>()<sp/>/<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)src.width);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>src.data.size<sp/>();<sp/>++i)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst.data()[i]<sp/>=<sp/><sp/>src.data[i];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Homogeneous<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>DG_TO_ROS_IMPL(MatrixHomogeneous)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>VectorQuaternion<sp/>q(src.linear());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.translation.x<sp/>=<sp/>src.translation()(0);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.translation.y<sp/>=<sp/>src.translation()(1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.translation.z<sp/>=<sp/>src.translation()(2);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.rotation.x<sp/>=<sp/>q.x();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.rotation.y<sp/>=<sp/>q.y();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.rotation.z<sp/>=<sp/>q.z();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.rotation.w<sp/>=<sp/>q.w();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>ROS_TO_DG_IMPL(MatrixHomogeneous)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>VectorQuaternion<sp/>q(src.rotation.w,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.rotation.x,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.rotation.y,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.rotation.z);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.linear()<sp/>=<sp/>q.matrix();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>translation<sp/>component.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.translation()(0)<sp/>=<sp/>src.translation.x;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.translation()(1)<sp/>=<sp/>src.translation.y;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.translation()(2)<sp/>=<sp/>src.translation.z;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Twist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>DG_TO_ROS_IMPL(specific::Twist)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src.size<sp/>()<sp/>!=<sp/>6)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>convert<sp/>invalid<sp/>twist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.linear.x<sp/>=<sp/>src<sp/>(0);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.linear.y<sp/>=<sp/>src<sp/>(1);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.linear.z<sp/>=<sp/>src<sp/>(2);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.angular.x<sp/>=<sp/>src<sp/>(3);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.angular.y<sp/>=<sp/>src<sp/>(4);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.angular.z<sp/>=<sp/>src<sp/>(5);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>ROS_TO_DG_IMPL(specific::Twist)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>dst.resize<sp/>(6);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>(0)<sp/>=<sp/>src.linear.x;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>(1)<sp/>=<sp/>src.linear.y;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>(2)<sp/>=<sp/>src.linear.z;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>(3)<sp/>=<sp/>src.angular.x;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>(4)<sp/>=<sp/>src.angular.y;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>(5)<sp/>=<sp/>src.angular.z;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="converter_8hh_1ae02c25236f7cecbfbdbf9cc9239cb785" refkind="member"><highlight class="preprocessor">#<sp/>define<sp/>DG_BRIDGE_TO_ROS_MAKE_STAMPED_IMPL(T,<sp/>ATTRIBUTE,<sp/>EXTRA)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"><sp/><sp/>inline<sp/>void<sp/>converter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/>(DgToRos&lt;std::pair&lt;T,<sp/>Vector&gt;<sp/>&gt;::ros_t&amp;<sp/>dst,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/>const<sp/>DgToRos&lt;std::pair&lt;T,<sp/>Vector&gt;<sp/>&gt;::dg_t&amp;<sp/>src)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>makeHeader(dst.header);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>converter&lt;DgToRos&lt;T&gt;::ros_t,<sp/>DgToRos&lt;T&gt;::dg_t&gt;<sp/>(dst.ATTRIBUTE,<sp/>src);<sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>EXTRA<sp/>}<sp/>while<sp/>(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/>struct<sp/>e_n_d__w_i_t_h__s_e_m_i_c_o_l_o_n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1ae02c25236f7cecbfbdbf9cc9239cb785" kindref="member">DG_BRIDGE_TO_ROS_MAKE_STAMPED_IMPL</ref>(specific::Vector3,<sp/>vector,<sp/>;);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1ae02c25236f7cecbfbdbf9cc9239cb785" kindref="member">DG_BRIDGE_TO_ROS_MAKE_STAMPED_IMPL</ref>(MatrixHomogeneous,<sp/>transform,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst.child_frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1ae02c25236f7cecbfbdbf9cc9239cb785" kindref="member">DG_BRIDGE_TO_ROS_MAKE_STAMPED_IMPL</ref>(specific::Twist,<sp/>twist,<sp/>;);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="converter_8hh_1a9de018e745b4235be09aaab744557770" refkind="member"><highlight class="preprocessor">#<sp/>define<sp/>DG_BRIDGE_MAKE_SHPTR_IMPL(T)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/>inline<sp/>void<sp/>converter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/>(DgToRos&lt;T&gt;::dg_t&amp;<sp/>dst,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/>const<sp/>boost::shared_ptr&lt;DgToRos&lt;T&gt;::ros_t<sp/>const&gt;&amp;<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>converter&lt;DgToRos&lt;T&gt;::dg_t,<sp/>DgToRos&lt;T&gt;::ros_t&gt;<sp/>(dst,<sp/>*src);<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/>struct<sp/>e_n_d__w_i_t_h__s_e_m_i_c_o_l_o_n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1a9de018e745b4235be09aaab744557770" kindref="member">DG_BRIDGE_MAKE_SHPTR_IMPL</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1a9de018e745b4235be09aaab744557770" kindref="member">DG_BRIDGE_MAKE_SHPTR_IMPL</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1a9de018e745b4235be09aaab744557770" kindref="member">DG_BRIDGE_MAKE_SHPTR_IMPL</ref>(Vector);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1a9de018e745b4235be09aaab744557770" kindref="member">DG_BRIDGE_MAKE_SHPTR_IMPL</ref>(specific::Vector3);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1a9de018e745b4235be09aaab744557770" kindref="member">DG_BRIDGE_MAKE_SHPTR_IMPL</ref>(Matrix);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1a9de018e745b4235be09aaab744557770" kindref="member">DG_BRIDGE_MAKE_SHPTR_IMPL</ref>(MatrixHomogeneous);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1a9de018e745b4235be09aaab744557770" kindref="member">DG_BRIDGE_MAKE_SHPTR_IMPL</ref>(specific::Twist);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="converter_8hh_1a9ecac683e8b5794b8717b7d2d18c8b22" refkind="member"><highlight class="preprocessor">#<sp/>define<sp/>DG_BRIDGE_MAKE_STAMPED_IMPL(T,<sp/>ATTRIBUTE,<sp/>EXTRA)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/>inline<sp/>void<sp/>converter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/>(DgToRos&lt;std::pair&lt;T,<sp/>Vector&gt;<sp/>&gt;::dg_t&amp;<sp/>dst,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/><sp/>const<sp/>DgToRos&lt;std::pair&lt;T,<sp/>Vector&gt;<sp/>&gt;::ros_t&amp;<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>converter&lt;DgToRos&lt;T&gt;::dg_t,<sp/>DgToRos&lt;T&gt;::ros_t&gt;<sp/>(dst,<sp/>src.ATTRIBUTE);<sp/>\</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>EXTRA<sp/>}<sp/>while<sp/>(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"><sp/><sp/>struct<sp/>e_n_d__w_i_t_h__s_e_m_i_c_o_l_o_n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1a9ecac683e8b5794b8717b7d2d18c8b22" kindref="member">DG_BRIDGE_MAKE_STAMPED_IMPL</ref>(specific::Vector3,<sp/>vector,<sp/>;);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1a9ecac683e8b5794b8717b7d2d18c8b22" kindref="member">DG_BRIDGE_MAKE_STAMPED_IMPL</ref>(MatrixHomogeneous,<sp/>transform,<sp/>;);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1a9ecac683e8b5794b8717b7d2d18c8b22" kindref="member">DG_BRIDGE_MAKE_STAMPED_IMPL</ref>(specific::Twist,<sp/>twist,<sp/>;);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="converter_8hh_1a2c8d741da8bc5978c852fb7b71ec26e7" refkind="member"><highlight class="preprocessor">#<sp/>define<sp/>DG_BRIDGE_MAKE_STAMPED_SHPTR_IMPL(T,<sp/>ATTRIBUTE,<sp/>EXTRA)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/>inline<sp/>void<sp/>converter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/>(DgToRos&lt;std::pair&lt;T,<sp/>Vector&gt;<sp/>&gt;::dg_t&amp;<sp/>dst,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/>const<sp/>boost::shared_ptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"><sp/><sp/><sp/>&lt;DgToRos&lt;std::pair&lt;T,<sp/>Vector&gt;<sp/>&gt;::ros_t<sp/>const&gt;&amp;<sp/>src)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>converter&lt;DgToRos&lt;T&gt;::dg_t,<sp/>DgToRos&lt;T&gt;::ros_t&gt;<sp/>(dst,<sp/>src-&gt;ATTRIBUTE);<sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>EXTRA<sp/>}<sp/>while<sp/>(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"><sp/><sp/>struct<sp/>e_n_d__w_i_t_h__s_e_m_i_c_o_l_o_n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1a2c8d741da8bc5978c852fb7b71ec26e7" kindref="member">DG_BRIDGE_MAKE_STAMPED_SHPTR_IMPL</ref>(specific::Vector3,<sp/>vector,<sp/>;);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1a2c8d741da8bc5978c852fb7b71ec26e7" kindref="member">DG_BRIDGE_MAKE_STAMPED_SHPTR_IMPL</ref>(MatrixHomogeneous,<sp/>transform,<sp/>;);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><ref refid="converter_8hh_1a2c8d741da8bc5978c852fb7b71ec26e7" kindref="member">DG_BRIDGE_MAKE_STAMPED_SHPTR_IMPL</ref>(specific::Twist,<sp/>twist,<sp/>;);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="294" refid="namespacedynamic__graph_1a38ff488b8b21c0b4f4d7f44572fa4ee5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacedynamic__graph_1aa00932c9efb8a607efd6997386d78680" kindref="member">converter</ref><sp/>(U&amp;<sp/>dst,<sp/>V&amp;<sp/>src)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>always<sp/>fail<sp/>if<sp/>instantiated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_STATIC_ASSERT<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(U)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::posix_time::ptime<sp/>ptime;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::posix_time::seconds<sp/>seconds;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::posix_time::microseconds<sp/>microseconds;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::posix_time::time_duration<sp/>time_duration;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::gregorian::date<sp/>date;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>boost::posix_time::ptime<sp/>rosTimeToPtime<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ros::Time&amp;<sp/>rosTime);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>ros::Time<sp/>pTimeToRostime<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::posix_time::ptime&amp;<sp/>time);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>namespace<sp/>dynamic_graph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="include/ros_entities/converter.hh"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classtime__series_1_1internal_1_1TimeSeriesBase" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>time_series::internal::TimeSeriesBase</compoundname>
    <basecompoundref refid="classtime__series_1_1TimeSeriesInterface" prot="public" virt="non-virtual">time_series::TimeSeriesInterface&lt; T &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>P</declname>
        <defname>P</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
        <defval>int</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtime__series_1_1internal_1_1TimeSeriesBase_1a6f78dd0d9435126ff803248499fad636" prot="protected" static="no" mutable="no">
        <type>Index</type>
        <definition>Index time_series::internal::TimeSeriesBase&lt; P, T &gt;::start_timeindex_</definition>
        <argsstring></argsstring>
        <name>start_timeindex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="52" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtime__series_1_1internal_1_1TimeSeriesBase_1aec2ed21821c0dc475c9360e9124aa550" prot="protected" static="no" mutable="no">
        <type>Index</type>
        <definition>Index time_series::internal::TimeSeriesBase&lt; P, T &gt;::oldest_timeindex_</definition>
        <argsstring></argsstring>
        <name>oldest_timeindex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="53" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtime__series_1_1internal_1_1TimeSeriesBase_1af82c823d37375e138e8c11c46a506cae" prot="protected" static="no" mutable="no">
        <type>Index</type>
        <definition>Index time_series::internal::TimeSeriesBase&lt; P, T &gt;::newest_timeindex_</definition>
        <argsstring></argsstring>
        <name>newest_timeindex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="54" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtime__series_1_1internal_1_1TimeSeriesBase_1a68c415d1fa3de6d751d3178d0c10006a" prot="protected" static="no" mutable="no">
        <type>Index</type>
        <definition>Index time_series::internal::TimeSeriesBase&lt; P, T &gt;::tagged_timeindex_</definition>
        <argsstring></argsstring>
        <name>tagged_timeindex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="55" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtime__series_1_1internal_1_1TimeSeriesBase_1ac192edc73cd3244e0a5ceb7ba1ff3bb6" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classtime__series_1_1internal_1_1Mutex" kindref="compound">Mutex</ref>&lt; P &gt; &gt;</type>
        <definition>std::shared_ptr&lt;Mutex&lt;P&gt; &gt; time_series::internal::TimeSeriesBase&lt; P, T &gt;::mutex_ptr_</definition>
        <argsstring></argsstring>
        <name>mutex_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="61" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtime__series_1_1internal_1_1TimeSeriesBase_1a728279a5c045f0784c176282cc5ae1fe" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classtime__series_1_1internal_1_1ConditionVariable" kindref="compound">ConditionVariable</ref>&lt; P &gt; &gt;</type>
        <definition>std::shared_ptr&lt;ConditionVariable&lt;P&gt; &gt; time_series::internal::TimeSeriesBase&lt; P, T &gt;::condition_ptr_</definition>
        <argsstring></argsstring>
        <name>condition_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="62" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtime__series_1_1internal_1_1TimeSeriesBase_1aec36178b209eb829fa44f8c0292e1065" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classtime__series_1_1internal_1_1Vector" kindref="compound">Vector</ref>&lt; P, T &gt; &gt;</type>
        <definition>std::shared_ptr&lt;Vector&lt;P, T&gt; &gt; time_series::internal::TimeSeriesBase&lt; P, T &gt;::history_elements_ptr_</definition>
        <argsstring></argsstring>
        <name>history_elements_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="63" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtime__series_1_1internal_1_1TimeSeriesBase_1aa9e47bae6a7e2270a1984bee683d1525" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classtime__series_1_1internal_1_1Vector" kindref="compound">Vector</ref>&lt; P, Timestamp &gt; &gt;</type>
        <definition>std::shared_ptr&lt;Vector&lt;P, Timestamp&gt; &gt; time_series::internal::TimeSeriesBase&lt; P, T &gt;::history_timestamps_ptr_</definition>
        <argsstring></argsstring>
        <name>history_timestamps_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="64" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1a60aa9cdab364cd01a5f070bb75c187a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TimeSeriesBase::TimeSeriesBase</definition>
        <argsstring>(Index start_timeindex=0)</argsstring>
        <name>TimeSeriesBase</name>
        <param>
          <type>Index</type>
          <declname>start_timeindex</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="28" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="6" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1aac02c35ae67fad14a3567dd01565d058" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Index</type>
        <definition>Index TimeSeriesBase::newest_timeindex</definition>
        <argsstring>()</argsstring>
        <name>newest_timeindex</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1a3f15f770cc9620d11ec1e7a123977cf3">newest_timeindex</reimplements>
        <briefdescription>
<para>returns <formula id="2">$ newest $</formula>. waits if the time_series is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="29" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="41" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1a1e384606bee9664d05803f33235a0d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Index</type>
        <definition>Index TimeSeriesBase::count_appended_elements</definition>
        <argsstring>()</argsstring>
        <name>count_appended_elements</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1a46cf7fc73adfcc400fbf40c22aa7268f">count_appended_elements</reimplements>
        <briefdescription>
<para>returns the number of element that has been contained in the queue, i.e. the number of elements that have been added from the start. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="30" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1ace0e19f7ce8e25e50cb704ba58a80d35" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Index</type>
        <definition>Index TimeSeriesBase::oldest_timeindex</definition>
        <argsstring>()</argsstring>
        <name>oldest_timeindex</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1a96635723dc065cebb65d63de4f54b4a9">oldest_timeindex</reimplements>
        <briefdescription>
<para>returns <formula id="7">$ oldest $</formula>. waits if the time_series is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="31" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="62" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1a12bd405933d326fd8396fb2bc1267223" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>T</type>
        <definition>T TimeSeriesBase::newest_element</definition>
        <argsstring>()</argsstring>
        <name>newest_element</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1ad3b66b6b5f0f763d440731c50e41b4cb">newest_element</reimplements>
        <briefdescription>
<para>returns <formula id="8">$ X_{newest} $</formula>. waits if the time_series is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="32" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1aa7267458e4fadff7314037a4bd1d53bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>T</type>
        <definition>T TimeSeriesBase::operator[]</definition>
        <argsstring>(const Index &amp;timeindex)</argsstring>
        <name>operator[]</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1a3149f64961e08315eb06798d0f075333">operator[]</reimplements>
        <param>
          <type>const Index &amp;</type>
          <declname>timeindex</declname>
        </param>
        <briefdescription>
<para>returns <formula id="9">$ X_{timeindex} $</formula>. waits if the time_series is empty or if <formula id="10">$timeindex &gt; newest $</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="33" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="82" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1a1e4c7ca710bb14e7dce57a1dd9c4f929" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Timestamp</type>
        <definition>Timestamp TimeSeriesBase::timestamp_ms</definition>
        <argsstring>(const Index &amp;timeindex)</argsstring>
        <name>timestamp_ms</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1aaeb745c8c13170a645b25170f0b035f1">timestamp_ms</reimplements>
        <param>
          <type>const Index &amp;</type>
          <declname>timeindex</declname>
        </param>
        <briefdescription>
<para>returns the time in miliseconds when <formula id="9">$ X_{timeindex} $</formula> was appended. Waits if the time_series is empty or if <formula id="10">$timeindex &gt; newest $</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="34" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="106" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1aacca694af4c53fa4ae9cd3593c12bf58" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Timestamp</type>
        <definition>Timestamp TimeSeriesBase::timestamp_s</definition>
        <argsstring>(const Index &amp;timeindex)</argsstring>
        <name>timestamp_s</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1acfb468e6e1766fe4b566189d3b888e4d">timestamp_s</reimplements>
        <param>
          <type>const Index &amp;</type>
          <declname>timeindex</declname>
        </param>
        <briefdescription>
<para>returns the time in seconds when <formula id="9">$ X_{timeindex} $</formula> was appended. Waits if the time_series is empty or if <formula id="10">$timeindex &gt; newest $</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="35" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1a5651e522492514408e38a5b99e144a06" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool TimeSeriesBase::wait_for_timeindex</definition>
        <argsstring>(const Index &amp;timeindex, const double &amp;max_duration_s=std::numeric_limits&lt; double &gt;::quiet_NaN())</argsstring>
        <name>wait_for_timeindex</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1aa09c55259a1f34491b5ecdd1505ffdbf">wait_for_timeindex</reimplements>
        <param>
          <type>const Index &amp;</type>
          <declname>timeindex</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>max_duration_s</declname>
          <defval>std::numeric_limits&lt; double &gt;::quiet_NaN()</defval>
        </param>
        <briefdescription>
<para>Wait until the defined time index is reached. If the input time is below the oldest time index that have been registered read an exception is return. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="36" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="136" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1ae6da9bd31ca06b30413f2073bc2e48e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t TimeSeriesBase::length</definition>
        <argsstring>()</argsstring>
        <name>length</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1a90f6ed15d82006dbc7ef7783d9f6ff7a">length</reimplements>
        <briefdescription>
<para>returns the length of the time_series, i.e. <formula id="11">$0$</formula> if it is empty, otherwise <formula id="12">$newest - oldest +1 $</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="39" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="193" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1aee1bf636a094a3068f9de731688c3972" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t TimeSeriesBase::max_length</definition>
        <argsstring>()</argsstring>
        <name>max_length</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1aded8927e82c060aa3367f17dfd59a8ec">max_length</reimplements>
        <briefdescription>
<para>returns the maximum length of the time serie. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::size_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="40" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="201" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1a38511cb227e3e423922eaaea626a15ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool TimeSeriesBase::has_changed_since_tag</definition>
        <argsstring>()</argsstring>
        <name>has_changed_since_tag</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1a2758b463ea41393a24ea37ccd0f5feb4">has_changed_since_tag</reimplements>
        <briefdescription>
<para>returns boolean indicating whether new elements have been appended since the last time the <ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1ad20c1f90dd2f9016f32132caa3f976f7" kindref="member">tag()</ref> function was called. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="41" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1ad20c1f90dd2f9016f32132caa3f976f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void TimeSeriesBase::tag</definition>
        <argsstring>(const Index &amp;timeindex)</argsstring>
        <name>tag</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1a34e881c9496901127baf1d907d7399ac">tag</reimplements>
        <param>
          <type>const Index &amp;</type>
          <declname>timeindex</declname>
        </param>
        <briefdescription>
<para>tags the current time_series, can later be used to check whether new elements have been added </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="42" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="16" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1adadeeff6e42776853e26aa5f74264909" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Index</type>
        <definition>Index TimeSeriesBase::tagged_timeindex</definition>
        <argsstring>()</argsstring>
        <name>tagged_timeindex</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1aa71ab509ac29c5da681aee9dbf65f2d8">tagged_timeindex</reimplements>
        <briefdescription>
<para>returns the index at which the time series has been tagged. Returns the newest timeindex if the time series has never been tagged. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="43" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1a09293ae95cdc492e7de78729b0e0e398" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void TimeSeriesBase::append</definition>
        <argsstring>(const T &amp;element)</argsstring>
        <name>append</name>
        <reimplements refid="classtime__series_1_1TimeSeriesInterface_1a0782c522287cf041fc253529b61041f9">append</reimplements>
        <param>
          <type>const T &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>appends a new element to the time_series, e.g. we go from <formula id="13">$ X_{1:10} $</formula> to <formula id="14">$ X_{1:11} $</formula> (where <formula id="15">$ X_{11}=$</formula> element). if the time_series length is already equal to its max_length, then the oldest element is discarded, e.g. for a max_length = 10 we would go from <formula id="13">$ X_{1:10} $</formula> to <formula id="16">$ X_{2:11} $</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="44" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="167" bodyend="190"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1a1f379b0886fe36f5a7ea99ebb56a3bbf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void time_series::internal::TimeSeriesBase&lt; P, T &gt;::read_indexes</definition>
        <argsstring>()=0</argsstring>
        <name>read_indexes</name>
        <reimplementedby refid="classtime__series_1_1TimeSeries_1acbd2aa3299e5c62811df429896791767">read_indexes</reimplementedby>
        <reimplementedby refid="classtime__series_1_1MultiprocessTimeSeries_1a44445322f664019684a02caa31639c14">read_indexes</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtime__series_1_1internal_1_1TimeSeriesBase_1ae45f307ebdfe4508fa342a6a259aea38" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void time_series::internal::TimeSeriesBase&lt; P, T &gt;::write_indexes</definition>
        <argsstring>()=0</argsstring>
        <name>write_indexes</name>
        <reimplementedby refid="classtime__series_1_1TimeSeries_1a0fdedf27b55bbf78eed4d35f82cf3ace">write_indexes</reimplementedby>
        <reimplementedby refid="classtime__series_1_1MultiprocessTimeSeries_1abc59736f908b8e3f4e6881607e2253a7">write_indexes</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/internal/base.hpp" line="50" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="78">
        <label>time_series::TimeSeriesInterface&lt; T &gt;</label>
        <link refid="classtime__series_1_1TimeSeriesInterface"/>
      </node>
      <node id="77">
        <label>time_series::internal::TimeSeriesBase&lt; P, T &gt;</label>
        <link refid="classtime__series_1_1internal_1_1TimeSeriesBase"/>
        <childnode refid="78" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="80">
        <label>time_series::TimeSeriesInterface&lt; T &gt;</label>
        <link refid="classtime__series_1_1TimeSeriesInterface"/>
      </node>
      <node id="79">
        <label>time_series::internal::TimeSeriesBase&lt; P, T &gt;</label>
        <link refid="classtime__series_1_1internal_1_1TimeSeriesBase"/>
        <childnode refid="80" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/time_series/internal/base.hpp" line="26" column="1" bodyfile="include/time_series/internal/base.hpp" bodystart="25" bodyend="65"/>
    <listofallmembers>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a09293ae95cdc492e7de78729b0e0e398" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>append</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a728279a5c045f0784c176282cc5ae1fe" prot="protected" virt="non-virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>condition_ptr_</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a1e384606bee9664d05803f33235a0d60" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>count_appended_elements</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a38511cb227e3e423922eaaea626a15ee" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>has_changed_since_tag</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1aec36178b209eb829fa44f8c0292e1065" prot="protected" virt="non-virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>history_elements_ptr_</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1aa9e47bae6a7e2270a1984bee683d1525" prot="protected" virt="non-virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>history_timestamps_ptr_</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1ae6da9bd31ca06b30413f2073bc2e48e6" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>length</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1aee1bf636a094a3068f9de731688c3972" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>max_length</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1ac192edc73cd3244e0a5ceb7ba1ff3bb6" prot="protected" virt="non-virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>mutex_ptr_</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a12bd405933d326fd8396fb2bc1267223" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>newest_element</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1aac02c35ae67fad14a3567dd01565d058" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>newest_timeindex</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1af82c823d37375e138e8c11c46a506cae" prot="protected" virt="non-virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>newest_timeindex_</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1ace0e19f7ce8e25e50cb704ba58a80d35" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>oldest_timeindex</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1aec2ed21821c0dc475c9360e9124aa550" prot="protected" virt="non-virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>oldest_timeindex_</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1aa7267458e4fadff7314037a4bd1d53bb" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>operator[]</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a1f379b0886fe36f5a7ea99ebb56a3bbf" prot="protected" virt="pure-virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>read_indexes</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a6f78dd0d9435126ff803248499fad636" prot="protected" virt="non-virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>start_timeindex_</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1ad20c1f90dd2f9016f32132caa3f976f7" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>tag</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1adadeeff6e42776853e26aa5f74264909" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>tagged_timeindex</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a68c415d1fa3de6d751d3178d0c10006a" prot="protected" virt="non-virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>tagged_timeindex_</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a60aa9cdab364cd01a5f070bb75c187a3" prot="public" virt="non-virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>TimeSeriesBase</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a1e4c7ca710bb14e7dce57a1dd9c4f929" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>timestamp_ms</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1aacca694af4c53fa4ae9cd3593c12bf58" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>timestamp_s</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a5651e522492514408e38a5b99e144a06" prot="public" virt="virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>wait_for_timeindex</name></member>
      <member refid="classtime__series_1_1internal_1_1TimeSeriesBase_1ae45f307ebdfe4508fa342a6a259aea38" prot="protected" virt="pure-virtual"><scope>time_series::internal::TimeSeriesBase</scope><name>write_indexes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespacetime__series" kind="namespace" language="C++">
    <compoundname>time_series</compoundname>
    <innerclass refid="classtime__series_1_1MultiprocessTimeSeries" prot="public">time_series::MultiprocessTimeSeries</innerclass>
    <innerclass refid="classtime__series_1_1TimeSeries" prot="public">time_series::TimeSeries</innerclass>
    <innerclass refid="classtime__series_1_1TimeSeriesInterface" prot="public">time_series::TimeSeriesInterface</innerclass>
    <innernamespace refid="namespacetime__series_1_1internal">time_series::internal</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="interface_8hpp_1a58076f07cd788dccb7a898fe711f8461" prot="public" static="no">
        <type>long int</type>
        <definition>typedef long int time_series::Index</definition>
        <argsstring></argsstring>
        <name>Index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/interface.hpp" line="15" column="1" bodyfile="include/time_series/interface.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="interface_8hpp_1a5af99eebeeaa7402b16f6db135efe302" prot="public" static="no">
        <type>long double</type>
        <definition>typedef long double time_series::Timestamp</definition>
        <argsstring></argsstring>
        <name>Timestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/interface.hpp" line="16" column="1" bodyfile="include/time_series/interface.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="multiprocess__time__series_8hpp_1a1ea08aaea3e2d8a47abeffd869396674" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void time_series::clear_memory</definition>
        <argsstring>(std::string segment_id)</argsstring>
        <name>clear_memory</name>
        <param>
          <type>std::string</type>
          <declname>segment_id</declname>
        </param>
        <briefdescription>
<para>Wipe out the corresponding shared memory. </para>        </briefdescription>
        <detaileddescription>
<para>Useful if no instances of <ref refid="classtime__series_1_1MultiprocessTimeSeries" kindref="compound">MultiprocessTimeSeries</ref> cleared the memory on destruction. Reusing the segment id of a non-wiped shared memory may result in the newly created instance to hang. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/time_series/multiprocess_time_series.hpp" line="114" column="1" bodyfile="src/multiprocess_time_series.cpp" bodystart="5" bodyend="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/time_series/interface.hpp" line="14" column="1"/>
  </compounddef>
</doxygen>

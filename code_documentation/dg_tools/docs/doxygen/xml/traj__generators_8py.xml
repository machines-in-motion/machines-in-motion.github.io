<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="traj__generators_8py" kind="file" language="Python">
    <compoundname>traj_generators.py</compoundname>
    <innerclass refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator" prot="public">python::dg_tools::traj_generators::CircularCartesianTrajectoryGenerator</innerclass>
    <innernamespace refid="namespacepython_1_1dg__tools_1_1traj__generators">python::dg_tools::traj_generators</innernamespace>
    <innernamespace refid="namespacedg__blmc__robots">dg_blmc_robots</innernamespace>
    <briefdescription>
<para>This code contains different trajectory generation functions. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Avadesh Meduri </para></simplesect>
<xrefsect id="license_1_license000018"><xreftitle>License</xreftitle><xrefdescription><para>License BSD-3-Clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-02-06 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">@package<sp/>dg_blmc_robots</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">@file<sp/>traj_generators.py</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">@author<sp/>Avadesh<sp/>Meduri</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">@license<sp/>License<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">@copyright<sp/>Copyright<sp/>(c)<sp/>2019,<sp/>New<sp/>York<sp/>University<sp/>and<sp/>Max<sp/>Planck<sp/>Gesellschaft.</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">@date<sp/>2019-02-06</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">@brief<sp/>This<sp/>code<sp/>contains<sp/>different<sp/>trajectory<sp/>generation<sp/>functions</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>dynamic_graph<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>plug</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedynamic__graph_1_1sot_1_1core_1_1math__small__entities" kindref="compound">dynamic_graph.sot.core.math_small_entities</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Multiply_of_double</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>dynamic_graph.sot.tools<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Oscillator,<sp/>CubicInterpolation</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.math_small_entities<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstantVector,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>Add_of_double,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>Multiply_double_vector,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>add_vec_vec,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>Add_of_vector,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstantDouble,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>add_doub_doub_2,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>mul_double_vec_2,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>scale_values,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>mul_doub_doub,</highlight></codeline>
<codeline lineno="26"><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">##########################################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">#<sp/>For<sp/>making<sp/>gain<sp/>input<sp/>dynamic<sp/>through<sp/>terminal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">add_pi<sp/>=<sp/>Add_of_double(</highlight><highlight class="stringliteral">&apos;pi&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">add_pi.sin1.value<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Change<sp/>this<sp/>value<sp/>for<sp/>different<sp/>gains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">add_pi.sin2.value<sp/>=<sp/>np.pi/2.0</highlight></codeline>
<codeline lineno="36"><highlight class="normal">pi<sp/>=<sp/>add_pi.sout</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">###############################################################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">sine_generator(amplitude,<sp/>omega,<sp/>phase,<sp/>bias,<sp/>entityName):</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>generates<sp/>a<sp/>y<sp/>=<sp/>a*sin(W.t<sp/>+<sp/>phi)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_pos<sp/>=<sp/>Oscillator(entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_pos&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_pos.setTimePeriod(0.001)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(omega,<sp/>osc_pos.omega)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(amplitude,<sp/>osc_pos.magnitude)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(phase,<sp/>osc_pos.phase)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>osc_pos.phase.value<sp/>=<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_pos.bias.value<sp/>=<sp/>bias</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_vel<sp/>=<sp/>Oscillator(entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_vel&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_vel.setTimePeriod(0.001)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(osc_pos.omega,<sp/>osc_vel.omega)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(osc_pos.magnitude,<sp/>osc_vel.magnitude)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(add_doub_doub_2(osc_pos.phase,<sp/>pi,<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;phase_add&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osc_vel.phase)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_vel.bias.value<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>unit_vector_pos<sp/>=<sp/>ConstantVector(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.0,<sp/>0.0,<sp/>1.0,<sp/>0.0,<sp/>0.0,<sp/>0.0],<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_unit_vector_pos&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>unit_vector_vel<sp/>=<sp/>ConstantVector(</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.0,<sp/>0.0,<sp/>1.0,<sp/>0.0,<sp/>0.0,<sp/>0.0],<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_unit_vector_vel&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>pos_traj<sp/>=<sp/>mul_double_vec_2(</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osc_pos.sout,<sp/>unit_vector_pos.sout,<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_des_position&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>vel_traj<sp/>=<sp/>mul_double_vec_2(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osc_vel.sout,<sp/>unit_vector_vel.sout,<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_des_velocity&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos_traj,<sp/>vel_traj</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">circular_trajectory_generator(radius_x,<sp/>radius_z,<sp/>omega,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase,<sp/>bias,<sp/>entityName):</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>generates<sp/>a<sp/>circular<sp/>circular_trajectory_generator</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Position################################################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_x<sp/>=<sp/>Oscillator(entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_posx&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_x.setTimePeriod(0.001)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(omega,<sp/>osc_x.omega)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(radius_x,<sp/>osc_x.magnitude)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(phase,<sp/>osc_x.phase)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_x.bias.value<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_xd<sp/>=<sp/>Oscillator(entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_velx&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_xd.setTimePeriod(0.001)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(osc_x.omega,<sp/>osc_xd.omega)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(mul_doub_doub(osc_x.omega,<sp/>osc_x.magnitude,<sp/></highlight><highlight class="stringliteral">&quot;dx&quot;</highlight><highlight class="normal">),<sp/>osc_xd.magnitude)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#plug(osc_x.magnitude,<sp/>osc_xd.magnitude)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(add_doub_doub_2(osc_x.phase,<sp/>pi,<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;phase_addx&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osc_xd.phase)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_xd.bias.value<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_z<sp/>=<sp/>Oscillator(entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_posz&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_z.setTimePeriod(0.001)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(omega,<sp/>osc_z.omega)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(radius_z,<sp/>osc_z.magnitude)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(add_doub_doub_2(osc_x.phase,<sp/>pi,<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;phase_addx&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osc_z.phase)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_z.bias.value<sp/>=<sp/>bias</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_zd<sp/>=<sp/>Oscillator(entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_velz&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_zd.setTimePeriod(0.001)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(osc_z.omega,<sp/>osc_zd.omega)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(mul_doub_doub(osc_z.omega,<sp/>osc_z.magnitude,<sp/></highlight><highlight class="stringliteral">&quot;dz&quot;</highlight><highlight class="normal">),<sp/>osc_zd.magnitude)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plug(osc_z.magnitude,<sp/>osc_zd.magnitude)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(add_doub_doub_2(osc_z.phase,<sp/>pi,<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;phase_addz&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osc_zd.phase)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>osc_zd.bias.value<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>unit_vector_x<sp/>=<sp/>ConstantVector(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[1.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0],<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;unit_vector_x&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>unit_vector_z<sp/>=<sp/>ConstantVector(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.0,<sp/>0.0,<sp/>1.0,<sp/>0.0,<sp/>0.0,<sp/>0.0],<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;unit_vector_z&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>pos_des_x<sp/>=<sp/>mul_double_vec_2(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osc_x.sout,<sp/>unit_vector_x.sout,<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;sine_des_position_x&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>pos_des_z<sp/>=<sp/>mul_double_vec_2(</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osc_z.sout,<sp/>unit_vector_z.sout,<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;sine_des_position_z&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>pos_des<sp/>=<sp/>add_vec_vec(pos_des_x,<sp/>pos_des_z,<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_des_pos&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>unit_vector_xd<sp/>=<sp/>ConstantVector(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[1.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0],<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;unit_vector_xd&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>unit_vector_zd<sp/>=<sp/>ConstantVector(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.0,<sp/>0.0,<sp/>1.0,<sp/>0.0,<sp/>0.0,<sp/>0.0],<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;unit_vector_zd&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>vel_des_x<sp/>=<sp/>mul_double_vec_2(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osc_xd.sout,<sp/>unit_vector_xd.sout,<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;sine_des_velocity_x&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>vel_des_z<sp/>=<sp/>mul_double_vec_2(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osc_zd.sout,<sp/>unit_vector_zd.sout,<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;sine_des_velocity_z&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>vel_des<sp/>=<sp/>add_vec_vec(vel_des_x,<sp/>vel_des_z,<sp/>entityName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_des_vel&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos_des,<sp/>vel_des</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CircularCartesianTrajectoryGenerator(object):</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>generates<sp/>a<sp/>circular<sp/>circular_trajectory_generator</highlight></codeline>
<codeline lineno="142" refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator" refkind="compound"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>prefix=&quot;&quot;,<sp/>time_period=0.001):</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>save<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1a01f19fbdfd5492d5d35d0debbf8ab89a" kindref="member">time_period</ref><sp/>=<sp/>time_period</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>=<sp/>prefix</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dof<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;z&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setup<sp/>the<sp/>oscillation<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof]<sp/>=<sp/>Oscillator(</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;osc_pos_&quot;</highlight><highlight class="normal"><sp/>+<sp/>dof)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].setTimePeriod(time_period)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dof<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;z&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setup<sp/>the<sp/>oscillation<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof]<sp/>=<sp/>Oscillator(</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;osc_vel_&quot;</highlight><highlight class="normal"><sp/>+<sp/>dof)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].setTimePeriod(time_period)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Fully<sp/>plug<sp/>the<sp/>derivatives<sp/>of<sp/>above<sp/>oscillator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>magnitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_magnitude_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof]<sp/>=<sp/>Multiply_of_double(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;osc_vel_magnitude_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].omega,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_magnitude_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sin0)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].magnitude,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_magnitude_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sin1)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_magnitude_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sout,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].magnitude)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>omega</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].omega,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].omega)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_phase_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof]<sp/>=<sp/>Add_of_double(</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;osc_vel_phase_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1a33454143d6c568fea94e58204c055857" kindref="member">pi_by_2</ref><sp/>=<sp/>ConstantDouble(np.pi<sp/>*<sp/>0.5,<sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;pi_by_2&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.pi_by_2.sout,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_phase_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sin1)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].phase,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_phase_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sin2)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_phase_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sout,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].phase)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>bias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].bias.value<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>the<sp/>reference<sp/>cartesian<sp/>position<sp/>and<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>dof<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate([</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;z&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>create<sp/>a<sp/>unit<sp/>vector<sp/>for<sp/>each<sp/>dof</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unit_vector<sp/>=<sp/>[0.0]*6</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unit_vector[i]<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;unit_vector_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof]<sp/>=<sp/>ConstantVector(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unit_vector,<sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;unit_vector_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>multiply<sp/>the<sp/>unit<sp/>vector<sp/>with<sp/>the<sp/>reference<sp/>oscilator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;des_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof]<sp/>=<sp/>Multiply_double_vector(</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;des_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sout,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;des_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sin1)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.__dict__[</highlight><highlight class="stringliteral">&apos;unit_vector_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sout,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;des_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sin2)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;des_vel_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof]<sp/>=<sp/>Multiply_double_vector(</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;des_vel_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sout,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;des_vel_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sin1)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.__dict__[</highlight><highlight class="stringliteral">&apos;unit_vector_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sout,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;des_vel_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].sin2)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Finalize<sp/>by<sp/>summing<sp/>up<sp/>the<sp/>3<sp/>cartesian<sp/>positions<sp/>and<sp/>velocities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1a7e1d9a9bebbf50965b0840ec4d41ecc2" kindref="member">des_pos_xy</ref><sp/>=<sp/>Add_of_vector(self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;des_pos_xy&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.des_pos_x.sout,<sp/>self.des_pos_xy.sin1)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.des_pos_y.sout,<sp/>self.des_pos_xy.sin2)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1a7bbe65759b9210c4762dc0dd73c9a4a5" kindref="member">des_pos</ref><sp/>=<sp/>Add_of_vector(self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;des_pos&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.des_pos_xy.sout,<sp/>self.des_pos.sin1)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.des_pos_z.sout,<sp/>self.des_pos.sin2)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1a3929cda646a0c9ddd9ef04c786564fe3" kindref="member">des_vel_xy</ref><sp/>=<sp/>Add_of_vector(self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;des_vel_xy&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.des_vel_x.sout,<sp/>self.des_vel_xy.sin1)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.des_vel_y.sout,<sp/>self.des_vel_xy.sin2)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1a90de45b8eaab3b2672fe9783fe96cc86" kindref="member">des_vel</ref><sp/>=<sp/>Add_of_vector(self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;des_vel&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.des_vel_xy.sout,<sp/>self.des_vel.sin1)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.des_vel_z.sout,<sp/>self.des_vel.sin2)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1a5863b65052d601d51c1c4f7a7a51ef86" kindref="member">set_time_period</ref>(self,<sp/>time_period):</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>the<sp/>time<sp/>period<sp/>to<sp/>all<sp/>oscillation<sp/>entities</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>dof<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate([</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;z&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].setTimePeriod(time_period)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_vel_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].setTimePeriod(time_period)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">plug(self,<sp/>magnitude,<sp/>omega,<sp/>phase,<sp/>bias):</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plug<sp/>the<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>dof<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate([</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;z&apos;</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(magnitude[i].sout,<sp/>self.__dict__[</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;osc_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].magnitude)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(omega[i].sout,<sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].omega)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(phase[i].sout,<sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].phase)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(bias[i].sout,<sp/>self.__dict__[</highlight><highlight class="stringliteral">&apos;osc_pos_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof].bias)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">trace(self,<sp/>robot):</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dof<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;z&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.add_trace(self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;unit_vector_&apos;</highlight><highlight class="normal"><sp/>+<sp/>dof,<sp/></highlight><highlight class="stringliteral">&apos;sout&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.add_trace(self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;osc_pos_&quot;</highlight><highlight class="normal"><sp/>+<sp/>dof,<sp/></highlight><highlight class="stringliteral">&apos;sout&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.add_trace(self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;des_pos&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;sout&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.add_trace(self.<ref refid="classpython_1_1dg__tools_1_1traj__generators_1_1CircularCartesianTrajectoryGenerator_1ae65dea0551140899f125f67db065f911" kindref="member">prefix</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;des_vel&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;sout&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">cubic_interpolator(init_vector_signal,<sp/>goal_vector_signal,<sp/>entityName):</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>generate<sp/>a<sp/>cubic<sp/>interpolation<sp/>trajectory<sp/>between<sp/>the<sp/>init_vector_signal</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>the<sp/>goal_vector_signal.<sp/>It<sp/>returns<sp/>the<sp/>entity.</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>cubic_interpolator<sp/>=<sp/>CubicInterpolation(entityName)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>cubic_interpolator.setSamplingPeriod(0.001)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(init_vector_signal,<sp/>cubic_interpolator.init)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>plug(goal_vector_signal,<sp/>cubic_interpolator.goal)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>cubic_interpolator.reset()</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cubic_interpolator</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">#############################################################################</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="python/dg_tools/traj_generators.py"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="com__impedance__controller_8cpp" kind="file" language="C++">
    <compoundname>com_impedance_controller.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="ComImpedanceController_8hpp" local="yes">dg_tools/ComImpedanceControl/ComImpedanceController.hpp</includes>
    <includes local="no">sot/core/debug.hh</includes>
    <includes local="no">dynamic-graph/factory.h</includes>
    <incdepgraph>
      <node id="141">
        <label>src/com_impedance_control/com_impedance_controller.cpp</label>
        <link refid="com_impedance_controller.cpp"/>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>dynamic-graph/factory.h</label>
      </node>
      <node id="150">
        <label>sot/core/debug.hh</label>
      </node>
      <node id="146">
        <label>eigen-quadprog/QuadProg.h</label>
      </node>
      <node id="145">
        <label>dynamic-graph/linear-algebra.h</label>
      </node>
      <node id="143">
        <label>dg_tools/ComImpedanceControl/ComImpedanceController.hpp</label>
        <link refid="ComImpedanceController_8hpp"/>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>dynamic-graph/signal-time-dependent.h</label>
      </node>
      <node id="144">
        <label>math.h</label>
      </node>
      <node id="142">
        <label>iostream</label>
      </node>
      <node id="148">
        <label>dynamic-graph/signal-ptr.h</label>
      </node>
      <node id="149">
        <label>dynamic-graph/entity.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="com__impedance__controller_8cpp_1ae4caae83605ef9dfd38f103c8c6cc495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DYNAMICGRAPH_FACTORY_ENTITY_PLUGIN</definition>
        <argsstring>(ComImpedanceControl,&quot;ComImpedanceControl&quot;)</argsstring>
        <name>DYNAMICGRAPH_FACTORY_ENTITY_PLUGIN</name>
        <param>
          <type><ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl" kindref="compound">ComImpedanceControl</ref></type>
        </param>
        <param>
          <type>&quot;ComImpedanceControl&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/com_impedance_control/com_impedance_controller.cpp" line="19" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>impedance<sp/>controller<sp/>implementation<sp/>for<sp/>COM<sp/>(used<sp/>for<sp/>quadruped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author<sp/>:<sp/>Avadesh<sp/>Meduri</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Date<sp/>:<sp/>25/03/19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ComImpedanceController_8hpp" kindref="compound">dg_tools/ComImpedanceControl/ComImpedanceController.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sot/core/debug.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dynamic-graph/factory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedynamicgraph_1_1sot" kindref="compound">dynamicgraph::sot</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedynamicgraph" kindref="compound">dynamicgraph</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">DYNAMICGRAPH_FACTORY_ENTITY_PLUGIN(<ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl" kindref="compound">ComImpedanceControl</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">ComImpedanceControl::ComImpedanceControl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>name)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>:Entity(name)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>,TimeStep(0)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>,KpSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::Kp&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>,KpAngSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::Kp_ang&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>,KdAngSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::Kd_ang&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>,KdSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::Kd&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>,positionSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::position&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>,desiredpositionSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::des_pos&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>,biasedpositionSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::biased_pos&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>,velocitySIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::velocity&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>,desiredvelocitySIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::des_vel&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>,biasedvelocitySIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::biased_vel&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>,feedforwardforceSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::des_fff&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>,inertiaSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::inertia&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>,massSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::mass&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>,oriSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::ori&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>,desoriSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::des_ori&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>,angvelSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::angvel&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>,desiredangvelSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::des_ang_vel&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>,feedforwardtorquesSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::des_fft&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>,cntsensorSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::cnt_sensor&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>,thrcntvalueSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::thr_cnt_value&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>,lqrerrorSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::lqr_error&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>,lqrgainSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::lqr_gain&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>,lctrlSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::lctrl&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>,actrlSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::actrl&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>,hessSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(Matrix)::hess&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>,g0SIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::g0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>,ceSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(Matrix)::ce&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>,ce0SIN(NULL,<sp/>&quot;ComImpedanceControl(&quot;+name+&quot;)::input(vector)::ce0&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>,ciSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(Matrix)::ci&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>,ci0SIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::ci0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>,regSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(Matrix)::reg&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>,leglengthflSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(Matrix)::leg_length_fl&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>,leglengthhlSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(Matrix)::leg_length_hl&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>,absendeffposSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::abs_end_eff_pos&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>,absendeffvelSIN(NULL,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::input(vector)::abs_end_eff_vel&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>,controlSOUT(<sp/>boost::bind(&amp;<ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl" kindref="compound">ComImpedanceControl</ref>::return_control_torques,<sp/>this,<sp/>_1,_2),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KpSIN<sp/>&lt;&lt;<sp/>KdSIN<sp/>&lt;&lt;<sp/>positionSIN<sp/>&lt;&lt;<sp/>desiredpositionSIN<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocitySIN<sp/>&lt;&lt;<sp/>desiredvelocitySIN<sp/>&lt;&lt;<sp/>feedforwardforceSIN<sp/>,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::output(vector)::tau&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>,angcontrolSOUT(<sp/>boost::bind(&amp;<ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl" kindref="compound">ComImpedanceControl</ref>::return_angcontrol_torques,<sp/>this,<sp/>_1,_2),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KpSIN<sp/>&lt;&lt;<sp/>KdSIN<sp/>&lt;&lt;<sp/>inertiaSIN<sp/>&lt;&lt;angvelSIN<sp/>&lt;&lt;<sp/>desiredangvelSIN</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>feedforwardtorquesSIN,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::output(vector)::angtau&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>,SetPosBiasSOUT(<sp/>boost::bind(&amp;<ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl" kindref="compound">ComImpedanceControl</ref>::set_pos_bias,<sp/>this,<sp/>_1,_2),</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>positionSIN<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::output(vector)::set_pos_bias&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>,SetVelBiasSOUT(<sp/>boost::bind(&amp;<ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl" kindref="compound">ComImpedanceControl</ref>::set_vel_bias,<sp/>this,<sp/>_1,_2),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocitySIN,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::output(vector)::set_vel_bias&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>,ThrCntSensorSOUT(<sp/>boost::bind(&amp;<ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl" kindref="compound">ComImpedanceControl</ref>::threshold_cnt_sensor,<sp/>this,<sp/>_1,<sp/>_2),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cntsensorSIN,<sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::output(vector)::thr_cnt_sensor&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>,lqrcontrolSOUT(<sp/>boost::bind(&amp;<ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl" kindref="compound">ComImpedanceControl</ref>::return_lqr_tau,<sp/>this,<sp/>_1,_2),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lqrgainSIN,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::output(vector)::lqrtau&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>,endefflqrcontrolSOUT(<sp/>boost::bind(&amp;<ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl" kindref="compound">ComImpedanceControl</ref>::return_end_eff_lqr_tau,<sp/>this,<sp/>_1,_2),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lqrgainSIN,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::output(vector)::end_eff_lqr_tau&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>,wbcontrolSOUT(<sp/>boost::bind(&amp;<ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl" kindref="compound">ComImpedanceControl</ref>::compute_end_eff_forces,<sp/>this,<sp/>_1,<sp/>_2),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lctrlSIN<sp/>&lt;&lt;<sp/>actrlSIN<sp/>&lt;&lt;<sp/>hessSIN<sp/>&lt;&lt;<sp/>g0SIN<sp/>&lt;&lt;<sp/>ceSIN</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ciSIN<sp/>&lt;&lt;<sp/>ci0SIN<sp/>&lt;&lt;<sp/>absendeffvelSIN,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::output(vector)::wbctrl&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>,descomposSOUT(<sp/>boost::bind(&amp;<ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl" kindref="compound">ComImpedanceControl</ref>::compute_des_com_pos,<sp/>this,<sp/>_1,<sp/>_2),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leglengthflSIN<sp/>&lt;&lt;<sp/>leglengthhlSIN,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ComImpedanceControl(&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;)::output(vector)::compute_des_com_pos&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>,isbiasset(0)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>,safetyswitch(0)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>,init_flag_pos(1)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>,init_flag_vel(1)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>,bias_time(100)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>init(TimeStep);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>Entity::signalRegistration(</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>positionSIN<sp/>&lt;&lt;<sp/>velocitySIN<sp/>&lt;&lt;<sp/>SetPosBiasSOUT<sp/>&lt;&lt;<sp/>SetVelBiasSOUT<sp/>&lt;&lt;<sp/>KpSIN<sp/>&lt;&lt;<sp/>KdSIN<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>KdAngSIN<sp/>&lt;&lt;<sp/>KpAngSIN<sp/>&lt;&lt;<sp/>inertiaSIN<sp/>&lt;&lt;<sp/>biasedpositionSIN<sp/>&lt;&lt;<sp/>biasedvelocitySIN<sp/>&lt;&lt;<sp/>desiredpositionSIN<sp/>&lt;&lt;<sp/>massSIN<sp/>&lt;&lt;<sp/>cntsensorSIN</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>ThrCntSensorSOUT<sp/><sp/>&lt;&lt;<sp/>desiredvelocitySIN<sp/>&lt;&lt;<sp/>feedforwardforceSIN<sp/>&lt;&lt;<sp/><sp/>controlSOUT<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>oriSIN<sp/>&lt;&lt;<sp/>desoriSIN<sp/>&lt;&lt;<sp/>angvelSIN<sp/>&lt;&lt;<sp/>desiredangvelSIN<sp/>&lt;&lt;<sp/>endefflqrcontrolSOUT</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>feedforwardtorquesSIN<sp/>&lt;&lt;<sp/>thrcntvalueSIN<sp/>&lt;&lt;<sp/>absendeffposSIN<sp/>&lt;&lt;<sp/>absendeffvelSIN</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>angcontrolSOUT<sp/>&lt;&lt;<sp/>lqrerrorSIN<sp/>&lt;&lt;<sp/>lqrgainSIN<sp/>&lt;&lt;<sp/>lqrcontrolSOUT<sp/>&lt;&lt;<sp/>lctrlSIN</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>actrlSIN<sp/>&lt;&lt;<sp/>hessSIN<sp/>&lt;&lt;<sp/>g0SIN<sp/>&lt;&lt;<sp/>ceSIN<sp/>&lt;&lt;<sp/>ciSIN<sp/>&lt;&lt;<sp/>ci0SIN<sp/>&lt;&lt;<sp/>regSIN<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>wbcontrolSOUT<sp/>&lt;&lt;<sp/>leglengthflSIN<sp/>&lt;&lt;<sp/>leglengthhlSIN<sp/>&lt;&lt;<sp/>descomposSOUT</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">dynamicgraph::Vector&amp;<sp/><ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl_1a6c33c88c2a5ae61dbde00dbd001355ca" kindref="member">ComImpedanceControl::</ref></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl_1a6c33c88c2a5ae61dbde00dbd001355ca" kindref="member">  return_lqr_tau</ref>(<sp/>dynamicgraph::Vector<sp/>&amp;lqrtau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t){</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGIN(15);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>lqr_vector<sp/>=<sp/>lqrgainSIN(t);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>position<sp/>=<sp/>biasedpositionSIN(t);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_pos<sp/>=<sp/>desiredpositionSIN(t);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>velocity<sp/>=<sp/>biasedvelocitySIN(t);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_vel<sp/>=<sp/>desiredvelocitySIN(t);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_fff<sp/>=<sp/>feedforwardforceSIN(t);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_ori<sp/>=<sp/>desoriSIN(t);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>ori<sp/>=<sp/>oriSIN(t);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>omega<sp/>=<sp/>angvelSIN(t);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_omega<sp/>=<sp/>desiredangvelSIN(t);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>hd_des<sp/>=<sp/>feedforwardtorquesSIN(t);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>lqrtau.resize(6);lqrtau.setZero();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(lqr_vector.size()==78);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*-------<sp/>computing<sp/>delta<sp/>X<sp/>-----------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>delta_x.resize(13);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>lqr_pos_error.array()<sp/>=<sp/>position.array()<sp/>-<sp/>des_pos.array();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>lqr_vel_error.array()<sp/>=<sp/>velocity.array()<sp/>-<sp/>des_vel.array();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>lqr_ang_vel_error.array()<sp/>=<sp/>omega.array()<sp/>-<sp/>des_omega.array();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>des_ori_quat.w()<sp/>=<sp/>des_ori[3];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>des_ori_quat.vec()[0]<sp/>=<sp/>des_ori[0];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>des_ori_quat.vec()[1]<sp/>=<sp/>des_ori[1];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>des_ori_quat.vec()[2]<sp/>=<sp/>des_ori[2];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>ori_quat.w()<sp/>=<sp/>ori[3];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>ori_quat.vec()[0]<sp/>=<sp/>ori[0];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>ori_quat.vec()[1]<sp/>=<sp/>ori[1];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>ori_quat.vec()[2]<sp/>=<sp/>ori[2];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>des_ori_se3<sp/>=<sp/>des_ori_quat.toRotationMatrix();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>ori_se3<sp/>=<sp/>ori_quat.toRotationMatrix();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>ori_error_se3<sp/>=<sp/>des_ori_se3.transpose()<sp/>*<sp/>ori_se3;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>ori_error_quat<sp/>=<sp/>ori_error_se3;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>lqr_ori_error(0)<sp/>=<sp/>ori_error_quat.vec()[0];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>lqr_ori_error(1)<sp/>=<sp/>ori_error_quat.vec()[1];</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>lqr_ori_error(2)<sp/>=<sp/>ori_error_quat.vec()[2];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>lqr_ori_error(3)<sp/>=<sp/>ori_error_quat.w();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>delta_x<sp/>&lt;&lt;<sp/>lqr_pos_error,<sp/>lqr_vel_error,<sp/>lqr_ori_error,<sp/>lqr_ang_vel_error;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*---------<sp/>reshaping<sp/>the<sp/>lqr_vector<sp/>into<sp/>a<sp/>6*13<sp/>matrix<sp/>------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>K.resize(6,13);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>lqr_vector<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(0)<sp/>=<sp/>lqr_vector.segment(0,13),</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(1)<sp/>=<sp/>lqr_vector.segment(13,13),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(2)<sp/>=<sp/>lqr_vector.segment(26,13),</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(3)<sp/>=<sp/>lqr_vector.segment(39,13),</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(4)<sp/>=<sp/>lqr_vector.segment(52,13),</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(5)<sp/>=<sp/>lqr_vector.segment(65,13);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>K<sp/>&lt;&lt;<sp/>-200,<sp/>0,<sp/>0,<sp/>-20,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>-200,<sp/>0,<sp/>0,<sp/>-20,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>-130,<sp/>0,<sp/>0,<sp/>0,<sp/>-.5,<sp/>0,<sp/>0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,-130,0<sp/>,0,<sp/>0,<sp/>-1.,<sp/>0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>-130,0,<sp/>0,<sp/>0,<sp/>-.5;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>K<sp/>&lt;&lt;<sp/>&quot;\n&quot;<sp/>&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/****<sp/>computing<sp/>the<sp/>centroidal<sp/>forces<sp/>at<sp/>current<sp/>timestep<sp/>----*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>F<sp/>=<sp/>F*<sp/>-<sp/>K*delta_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>f_des.resize(6);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>f_des<sp/>&lt;&lt;<sp/>des_fff,<sp/>hd_des;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>lqrtau<sp/>=<sp/>f_des<sp/>+<sp/>K<sp/>*<sp/>delta_x;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lqrtau(3)<sp/>=<sp/>lqr_ori_error(0)<sp/>*<sp/>lqrtau(3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lqrtau(4)<sp/>=<sp/>lqr_ori_error(1)<sp/>*<sp/>lqrtau(4);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lqrtau(5)<sp/>=<sp/>lqr_ori_error(2)<sp/>*<sp/>lqrtau(5);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGOUT(15);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lqrtau;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>dynamicgraph::Vector&amp;<sp/>ComImpedanceControl::</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_angcontrol_torques(<sp/>dynamicgraph::Vector<sp/>&amp;angtau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t){</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sotDEBUGIN(15);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>Kp_ang<sp/>=<sp/>KpAngSIN(t);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>Kd_ang<sp/>=<sp/>KdAngSIN(t);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>inertia<sp/>=<sp/>inertiaSIN(t);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_ori<sp/>=<sp/>desoriSIN(t);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>ori<sp/>=<sp/>oriSIN(t);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>omega<sp/>=<sp/>angvelSIN(t);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_omega<sp/>=<sp/>desiredangvelSIN(t);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>hd_des<sp/>=<sp/>feedforwardtorquesSIN(t);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isbiasset){</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*-----<sp/>assertions<sp/>of<sp/>sizes<sp/>-------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(Kp_ang.size()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(Kd_ang.size()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(des_ori.size()<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ori.size()<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(omega.size()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(des_omega.size()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(hd_des.size()==3);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(inertia.size()==3);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>des_ori_quat.w()<sp/>=<sp/>des_ori[3];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>des_ori_quat.vec()[0]<sp/>=<sp/>des_ori[0];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>des_ori_quat.vec()[1]<sp/>=<sp/>des_ori[1];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>des_ori_quat.vec()[2]<sp/>=<sp/>des_ori[2];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ori_quat.w()<sp/>=<sp/>ori[3];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ori_quat.vec()[0]<sp/>=<sp/>ori[0];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ori_quat.vec()[1]<sp/>=<sp/>ori[1];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ori_quat.vec()[2]<sp/>=<sp/>ori[2];</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>des_ori_se3<sp/>=<sp/>des_ori_quat.toRotationMatrix();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ori_se3<sp/>=<sp/>ori_quat.toRotationMatrix();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ori_error_se3<sp/>=<sp/>des_ori_se3.transpose()<sp/>*<sp/>ori_se3;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ori_error_quat<sp/>=<sp/>ori_error_se3;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//todo:<sp/>multiply<sp/>as<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ori_error.resize(3);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ori_error[0]<sp/>=<sp/>-2.0*((ori_error_quat.w()*ori_error_quat.vec()[0]<sp/>*<sp/>Kp_ang[0])<sp/>+<sp/>(Kp_ang[2]<sp/>-<sp/>Kp_ang[1])*(ori_error_quat.vec()[1]*ori_error_quat.vec()[2]));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ori_error[1]<sp/>=<sp/>-2.0*((ori_error_quat.w()*ori_error_quat.vec()[1]<sp/>*<sp/>Kp_ang[1])<sp/>+<sp/>(Kp_ang[0]<sp/>-<sp/>Kp_ang[2])*(ori_error_quat.vec()[0]*ori_error_quat.vec()[2]));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ori_error[2]<sp/>=<sp/>-2.0*((ori_error_quat.w()*ori_error_quat.vec()[2]<sp/>*<sp/>Kp_ang[2])<sp/>+<sp/>(Kp_ang[1]<sp/>-<sp/>Kp_ang[0])*(ori_error_quat.vec()[1]*ori_error_quat.vec()[0]));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*----------<sp/>computing<sp/>ang<sp/>error<sp/>----*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_error.array()<sp/>=<sp/>inertia.array()*(omega.array()<sp/>-<sp/>des_omega.array());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angtau.array()<sp/>=<sp/>hd_des.array()<sp/>+<sp/>Kd_ang.array()<sp/>*<sp/>h_error.array()<sp/>+<sp/>ori_error.array();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>angtau.array()<sp/>=<sp/>omega.array()<sp/>-<sp/>omega.array();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*------------<sp/>Safety<sp/>checks<sp/>-------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(h_error[])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>ang_tau[1]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sotDEBUGOUT(15);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>angtau;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">dynamicgraph::Vector&amp;<sp/><ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl_1a3df6780c7565af64536541c04c7e55f4" kindref="member">ComImpedanceControl::</ref></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><ref refid="classdynamicgraph_1_1sot_1_1ComImpedanceControl_1a3df6780c7565af64536541c04c7e55f4" kindref="member">  return_end_eff_lqr_tau</ref>(<sp/>dynamicgraph::Vector<sp/>&amp;end_eff_lqr_tau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>end_eff_lqr_tau.resize(12);end_eff_lqr_tau.setZero();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>lqr_vector<sp/>=<sp/>lqrgainSIN(t);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>position<sp/>=<sp/>biasedpositionSIN(t);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_pos<sp/>=<sp/>desiredpositionSIN(t);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>velocity<sp/>=<sp/>biasedvelocitySIN(t);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_vel<sp/>=<sp/>desiredvelocitySIN(t);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_fff<sp/>=<sp/>feedforwardforceSIN(t);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_ori<sp/>=<sp/>desoriSIN(t);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>ori<sp/>=<sp/>oriSIN(t);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>omega<sp/>=<sp/>angvelSIN(t);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_omega<sp/>=<sp/>desiredangvelSIN(t);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(lqr_vector.size()==156);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*-------<sp/>computing<sp/>delta<sp/>X<sp/>-----------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>delta_x.resize(13);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>lqr_pos_error.array()<sp/>=<sp/>position.array()<sp/>-<sp/>des_pos.array();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>lqr_vel_error.array()<sp/>=<sp/>velocity.array()<sp/>-<sp/>des_vel.array();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>lqr_ori_error.array()<sp/>=<sp/>ori.array()<sp/>-<sp/>des_ori.array();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>lqr_ang_vel_error.array()<sp/>=<sp/>omega.array()<sp/>-<sp/>des_omega.array();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>delta_x<sp/>&lt;&lt;<sp/>lqr_pos_error,<sp/>lqr_vel_error,<sp/>lqr_ori_error,<sp/>lqr_ang_vel_error;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*---------<sp/>reshaping<sp/>the<sp/>lqr_vector<sp/>into<sp/>a<sp/>6*13<sp/>matrix<sp/>------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>K.resize(12,13);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>lqr_vector<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(0)<sp/>=<sp/>lqr_vector.segment(0,13),</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(1)<sp/>=<sp/>lqr_vector.segment(13,13),</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(2)<sp/>=<sp/>lqr_vector.segment(26,13),</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(3)<sp/>=<sp/>lqr_vector.segment(39,13),</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(4)<sp/>=<sp/>lqr_vector.segment(52,13),</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(5)<sp/>=<sp/>lqr_vector.segment(65,13);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(6)<sp/>=<sp/>lqr_vector.segment(78,13),</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(7)<sp/>=<sp/>lqr_vector.segment(91,13),</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(8)<sp/>=<sp/>lqr_vector.segment(104,13),</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(9)<sp/>=<sp/>lqr_vector.segment(117,13),</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(10)<sp/>=<sp/>lqr_vector.segment(130,13),</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>K.row(11)<sp/>=<sp/>lqr_vector.segment(143,13);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>K<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/****<sp/>computing<sp/>the<sp/>centroidal<sp/>forces<sp/>at<sp/>current<sp/>timestep<sp/>----*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>F<sp/>=<sp/>F*<sp/>-<sp/>K*delta_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>end_eff_lqr_tau<sp/>=<sp/>des_fff<sp/>+<sp/>K<sp/>*<sp/>delta_x;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGOUT(15);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end_eff_lqr_tau;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">dynamicgraph::Vector&amp;<sp/>ComImpedanceControl::</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>return_control_torques(<sp/>dynamicgraph::Vector<sp/>&amp;tau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t){</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGIN(15);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>Kp<sp/>=<sp/>KpSIN(t);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>Kd<sp/>=<sp/>KdSIN(t);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>position<sp/>=<sp/>biasedpositionSIN(t);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_pos<sp/>=<sp/>desiredpositionSIN(t);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>velocity<sp/>=<sp/>biasedvelocitySIN(t);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_vel<sp/>=<sp/>desiredvelocitySIN(t);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>des_fff<sp/>=<sp/>feedforwardforceSIN(t);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>mass<sp/>=<sp/>massSIN(t);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*-----<sp/>assertions<sp/>of<sp/>sizes<sp/>-------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(Kp.size()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(Kd.size()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(position.size()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(des_pos.size()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(velocity.size()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(des_vel.size()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(des_fff.size()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;isbiasset&quot;<sp/>&lt;&lt;<sp/>isbiasset<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isbiasset){</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!safetyswitch){</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*----------<sp/>computing<sp/>position<sp/>error<sp/>----*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_error.array()<sp/>=<sp/>des_pos.array()<sp/>-<sp/>position.array();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_error.array()<sp/>=<sp/>des_vel.array()<sp/>-<sp/>velocity.array();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*----------<sp/>computing<sp/>tourques<sp/>----*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau.array()<sp/>=<sp/>des_fff.array()<sp/>+<sp/>mass.array()*(pos_error.array()*Kp.array()</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>vel_error.array()*Kd.array());</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quick<sp/>hack<sp/>to<sp/>return<sp/>zeros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tau.array()<sp/>=<sp/>des_pos.array()<sp/>-<sp/>des_pos.array();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGOUT(15);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tau;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">dynamicgraph::Vector&amp;<sp/>ComImpedanceControl::</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>compute_end_eff_forces(dynamicgraph::Vector<sp/>&amp;<sp/>end_forces,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t){</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGIN(15);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/****<sp/>based<sp/>on<sp/>forced<sp/>distribution<sp/>from<sp/>qp<sp/>*********/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>lctrl<sp/>=<sp/>lctrlSIN(t);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>actrl<sp/>=<sp/>actrlSIN(t);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Matrix&amp;<sp/>hess<sp/>=<sp/>hessSIN(t);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>g0<sp/>=<sp/>g0SIN(t);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Matrix&amp;<sp/>ce<sp/>=<sp/>ceSIN(t);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Matrix&amp;<sp/>ci<sp/>=<sp/>ciSIN(t);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>ci0<sp/>=<sp/>ci0SIN(t);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Matrix&amp;<sp/>reg<sp/>=<sp/>regSIN(t);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>thrcntvalue<sp/>=<sp/>thrcntvalueSIN(t);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>abs_end_eff_vel<sp/>=<sp/>absendeffvelSIN(t);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>end_forces.resize(30);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(thrcntvalue.size()==4);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isbiasset){</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thrcntvalue.sum()<sp/>&gt;<sp/>0.5){</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce0.resize(18);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce0.setZero();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;started<sp/>&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(lctrl.size()==3);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(actrl.size()==3);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(g0.size()==<sp/>30);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ce0.size()==18);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new<sp/>=<sp/>hess;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new<sp/>=<sp/>ce;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*******<sp/>setting<sp/>up<sp/>the<sp/>QP<sp/>*************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce0[0]<sp/>=<sp/>lctrl[0];<sp/>ce0[1]<sp/>=<sp/>lctrl[1];<sp/>ce0[2]<sp/>=<sp/>lctrl[2];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce0[3]<sp/>=<sp/>actrl[0];<sp/>ce0[4]<sp/>=<sp/>actrl[1];<sp/>ce0[5]<sp/>=<sp/>actrl[2];</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>updating<sp/>ce_new<sp/>based<sp/>on<sp/>the<sp/>desired<sp/>absolute<sp/>end<sp/>effector<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(absendeffposSIN.isPlugged())<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>abs_end_eff_pos<sp/>=<sp/>absendeffposSIN(t);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>abs_end_eff_pos(3<sp/>*<sp/>i);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>abs_end_eff_pos(3<sp/>*<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Always<sp/>assumed<sp/>to<sp/>be<sp/>on<sp/>the<sp/>floor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new.block&lt;3,<sp/>3&gt;(3,<sp/>3<sp/>*<sp/>i)<sp/>&lt;&lt;<sp/>0,<sp/>-z,<sp/><sp/>y,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z,<sp/><sp/>0,<sp/>-x,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-y,<sp/><sp/>x,<sp/><sp/>0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>12;<sp/>i<sp/>++){</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new(i+6,i)<sp/>=<sp/>abs_end_eff_vel(i);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/********<sp/>setting<sp/>elements<sp/>of<sp/>matrix<sp/>to<sp/>zero<sp/>when<sp/>foot<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*********<sp/>on<sp/>the<sp/>ground<sp/>***********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qp.problem(30,<sp/>18,<sp/>18);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thrcntvalue[0]<sp/>&lt;<sp/>0.2){</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setting<sp/>the<sp/>columns<sp/>related<sp/>to<sp/>Fl<sp/>to<sp/>zero<sp/>since<sp/>it<sp/>is<sp/>not<sp/>on<sp/>the<sp/>ground</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;FL<sp/>not<sp/>on<sp/>ground&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new.col(0).setZero();</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new.col(1).setZero();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new.col(2).setZero();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new.col(0).setZero();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new.col(1).setZero();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new.col(2).setZero();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thrcntvalue[1]<sp/>&lt;<sp/>0.2){</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setting<sp/>the<sp/>cols<sp/>related<sp/>to<sp/>Fl<sp/>to<sp/>zero<sp/>since<sp/>it<sp/>is<sp/>not<sp/>on<sp/>the<sp/>ground</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;FR<sp/>not<sp/>on<sp/>ground&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new.col(3).setZero();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new.col(4).setZero();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new.col(5).setZero();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new.col(3).setZero();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new.col(4).setZero();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new.col(5).setZero();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thrcntvalue[2]<sp/>&lt;<sp/>0.2){</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setting<sp/>the<sp/>cols<sp/>related<sp/>to<sp/>Fl<sp/>to<sp/>zero<sp/>since<sp/>it<sp/>is<sp/>not<sp/>on<sp/>the<sp/>ground</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;HL<sp/>on<sp/>not<sp/>ground&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new.col(6).setZero();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new.col(7).setZero();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new.col(8).setZero();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new.col(6).setZero();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new.col(7).setZero();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new.col(8).setZero();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thrcntvalue[3]<sp/>&lt;<sp/>0.2){</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setting<sp/>the<sp/>cols<sp/>related<sp/>to<sp/>Fl<sp/>to<sp/>zero<sp/>since<sp/>it<sp/>is<sp/>not<sp/>on<sp/>the<sp/>ground</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;HR<sp/>on<sp/>ground&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new.col(9).setZero();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new.col(10).setZero();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new.col(11).setZero();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new.col(9).setZero();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new.col(10).setZero();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ce_new.col(11).setZero();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>regularizing<sp/>hessian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hess_new<sp/>+=<sp/>reg;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qp.solve(hess_new,<sp/>g0,<sp/>ce_new,<sp/>ce0,<sp/>ci,<sp/>ci0);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_forces<sp/>=<sp/>qp.result();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>legs<sp/>are<sp/>off<sp/>the<sp/>ground.<sp/>Can<sp/>not<sp/>control<sp/>the<sp/>COM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_forces.setZero();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;not<sp/>set&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_forces.setZero();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>end_forces.array()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end_forces;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal">dynamicgraph::Vector&amp;<sp/>ComImpedanceControl::</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>compute_des_com_pos(dynamicgraph::Vector&amp;<sp/>des_com_pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t){</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>computes<sp/>the<sp/>desired<sp/>com<sp/>position<sp/>to<sp/>balance<sp/>a<sp/>planck<sp/>with<sp/>force<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGIN(15);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>leg_length_fl<sp/>=<sp/>leglengthflSIN(t);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>leg_length_hl<sp/>=<sp/>leglengthhlSIN(t);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(leg_length_fl.size()<sp/>==<sp/>6);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(leg_length_hl.size()<sp/>==<sp/>6);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>des_com_pos.resize(3);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>des_com_pos[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>des_com_pos[2]<sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>diff.resize(3);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>diff[2]<sp/>=<sp/>leg_length_fl[2]<sp/>-<sp/>leg_length_hl[2];</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>diff[0]<sp/>=<sp/>leg_length_fl[0]<sp/>-<sp/>leg_length_hl[0]<sp/>+<sp/>0.42;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>diff[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>des_com_pos[0]<sp/>=<sp/>0.1*atan(diff[2]/diff[0]);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>des_com_pos[0]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGOUT(15);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>des_com_pos;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">dynamicgraph::Vector&amp;<sp/>ComImpedanceControl::</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>set_pos_bias(dynamicgraph::Vector&amp;<sp/>pos_bias,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t){</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE<sp/>:<sp/>when<sp/>a<sp/>value<sp/>of<sp/>the<sp/>signal<sp/>is<sp/>not<sp/>computed<sp/>at<sp/>all<sp/>timesteps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>another<sp/>variable<sp/>tp<sp/>compute<sp/>the<sp/>value<sp/>and<sp/>assign<sp/>it<sp/>to<sp/>the<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>all<sp/>time<sp/>steps<sp/>to<sp/>ensure<sp/>that<sp/>the<sp/>value<sp/>of<sp/>the<sp/>signal<sp/>is<sp/>constant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>not<sp/>done,<sp/>the<sp/>signal<sp/>value<sp/>fluctuates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGIN(15);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>position<sp/>=<sp/>positionSIN(t);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>position_bias.resize(3);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>pos_bias.resize(3);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(init_flag_pos){</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t_start<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>position_bias.setZero();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos_bias.setZero();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>init_flag_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isbiasset){</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;bias<sp/>set&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3<sp/>;<sp/>j++){</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_bias[j]<sp/>=<sp/>position_bias[j];</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isbiasset<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>3;<sp/>i<sp/>++){</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position_bias[i]<sp/>=<sp/>position[i];</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_bias[i]<sp/>=<sp/>position_bias[i];</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>pos_bias[2]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGOUT(15);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos_bias;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal">dynamicgraph::Vector&amp;<sp/>ComImpedanceControl::</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>set_vel_bias(dynamicgraph::Vector&amp;<sp/>vel_bias,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t){</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGIN(15);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>velocity<sp/>=<sp/>velocitySIN(t);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>velocity_bias.resize(3);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>vel_bias.resize(3);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(velocity.size()==3);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(init_flag_vel){</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t_start<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>velocity_bias.setZero();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vel_bias.setZero();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>init_flag_vel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isbiasset){</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;bias<sp/>set&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3<sp/>;<sp/>j++){</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_bias[j]<sp/>=<sp/>velocity_bias[j];</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isbiasset<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>3;<sp/>i<sp/>++){</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_bias[i]<sp/>+=<sp/>velocity[i];</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_bias[i]<sp/>=<sp/>velocity_bias[i];</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGOUT(15);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vel_bias;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal">dynamicgraph::Vector&amp;<sp/>ComImpedanceControl::</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>threshold_cnt_sensor(dynamicgraph::Vector&amp;<sp/>thr_cnt_sensor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t){</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>thresholds<sp/>the<sp/>values<sp/>of<sp/>the<sp/>contact<sp/>sensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>less<sp/>than<sp/>0.2<sp/>is<sp/>set<sp/>to<sp/>zero,<sp/>and<sp/>greater<sp/>than<sp/>0.8<sp/>is<sp/>set<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>neccessary<sp/>because<sp/>the<sp/>cnt_sensor<sp/>is<sp/>noisy<sp/>at<sp/>the<sp/>extremes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGIN(15);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dynamicgraph::Vector&amp;<sp/>cnt_sensor<sp/>=<sp/>cntsensorSIN(t);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>thr_cnt_sensor.resize(4);<sp/>thr_cnt_sensor.fill(0.);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++){</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt_sensor[i]<sp/>&lt;<sp/>0.20){</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thr_cnt_sensor[i]<sp/>=<sp/>0.0<sp/>;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>if<sp/>(cnt_sensor[i]<sp/>&gt;<sp/>0.8){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>thr_cnt_sensor[i]<sp/>=<sp/>1.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thr_cnt_sensor[i]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cnt<sp/>sensor<sp/>return<sp/>0<sp/>when<sp/>in<sp/>contact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negating<sp/>it<sp/>to<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thr_cnt_sensor[i]<sp/>=<sp/>1<sp/>-<sp/>thr_cnt_sensor[i];</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>sotDEBUGOUT(15);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thr_cnt_sensor;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
    </programlisting>
    <location file="src/com_impedance_control/com_impedance_controller.cpp"/>
  </compounddef>
</doxygen>

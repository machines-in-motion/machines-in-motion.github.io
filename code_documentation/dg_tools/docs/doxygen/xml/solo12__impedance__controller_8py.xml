<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="solo12__impedance__controller_8py" kind="file" language="Python">
    <compoundname>solo12_impedance_controller.py</compoundname>
    <innerclass refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController" prot="public">python::dg_tools::leg_impedance_control::solo12_impedance_controller::Solo12ComController</innerclass>
    <innerclass refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController" prot="public">python::dg_tools::leg_impedance_control::solo12_impedance_controller::Solo12LegImpedanceController</innerclass>
    <innerclass refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ImpedanceController" prot="public">python::dg_tools::leg_impedance_control::solo12_impedance_controller::Solo12ImpedanceController</innerclass>
    <innernamespace refid="namespacepython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller">python::dg_tools::leg_impedance_control::solo12_impedance_controller</innernamespace>
    <innernamespace refid="namespacedg__blmc__robots">dg_blmc_robots</innernamespace>
    <briefdescription>
<para>Implement leg impedance controller and 4 leg control for solo12. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Julian Viereck </para></simplesect>
<simplesect kind="author"><para>Avadesh Meduri </para></simplesect>
<xrefsect id="license_1_license000015"><xreftitle>License</xreftitle><xrefdescription><para>License BSD-3-Clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-11-27 Differences between solo8 and solo12 code:<itemizedlist>
<listitem><para>Using 3-dim vector to specify desired position and velocity instead of 6-dim</para></listitem><listitem><para>Use kp and kd value for each leg separately </para></listitem></itemizedlist>
</para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">@package<sp/>dg_blmc_robots</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">@file<sp/>solo12_impedance_controller.py</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">@author<sp/>Julian<sp/>Viereck</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">@author<sp/>Avadesh<sp/>Meduri</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">@license<sp/>License<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">@copyright<sp/>Copyright<sp/>(c)<sp/>2019,<sp/>New<sp/>York<sp/>University<sp/>and<sp/>Max<sp/>Planck<sp/>Gesellschaft.</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">@date<sp/>2019-11-27</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">@brief<sp/>Implement<sp/>leg<sp/>impedance<sp/>controller<sp/>and<sp/>4<sp/>leg<sp/>control<sp/>for<sp/>solo12.</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral">Differences<sp/>between<sp/>solo8<sp/>and<sp/>solo12<sp/>code:</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">-<sp/>Using<sp/>3-dim<sp/>vector<sp/>to<sp/>specify<sp/>desired<sp/>position<sp/>and<sp/>velocity<sp/>instead<sp/>of<sp/>6-dim</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">-<sp/>Use<sp/>kp<sp/>and<sp/>kd<sp/>value<sp/>for<sp/>each<sp/>leg<sp/>separately</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>robot_properties_solo.config<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Solo12Config</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dynamic_graph.sot.dynamics_pinocchio<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>dp</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dynamic_graph<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>dg</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>dg_tools.utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>dg_tools.leg_impedance_control.quad_leg_impedance_controller<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>QuadrupedComControl</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dynamic_graph.sot.dynamics_pinocchio<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>dp</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacedynamic__graph_1_1sot_1_1core_1_1math__small__entities" kindref="compound">dynamic_graph.sot.core.math_small_entities</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>Selec_of_matrix</highlight></codeline>
<codeline lineno="27"><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController" kindref="compound">Solo12ComController</ref>(QuadrupedComControl):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">init_robot_properties(self):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1ace0ee7e179807ba79a56934d7b59e217" kindref="member">robot_vicon_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;solo12&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1ad70a7f80bba4d02ae10de3120e707160" kindref="member">robot_mass</ref><sp/>=<sp/>3<sp/>*<sp/>[Solo12Config.mass]</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Provide<sp/>the<sp/>new<sp/>base<sp/>inertia<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a6b1c48613a8203b4f0570e1f68e34623" kindref="member">robot_base_inertia</ref><sp/>=<sp/>[0.00578574,<sp/>0.01938108,<sp/>0.02476124]</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a42fa317b51400e7b913ef630f78c22ba" kindref="member">robot_pin</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a386f7ccf7b6fc883ca4f9ca361283ff1" kindref="member">track_com</ref>(self):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Instead<sp/>of<sp/>tracking<sp/>the<sp/>biased<sp/>base<sp/>position<sp/>and<sp/>velocity,<sp/>track<sp/>the</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>biased<sp/>com<sp/>and<sp/>vcom<sp/>position.</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Init<sp/>a<sp/>dg<sp/>pinocchio<sp/>robot<sp/>here<sp/>for<sp/>com<sp/>and<sp/>vcom<sp/>computation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a42fa317b51400e7b913ef630f78c22ba" kindref="member">robot_pin</ref><sp/>=<sp/>Solo12Config.buildRobotWrapper()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a5ef9467a3fbeb3db16fa2ef62c8e54ac" kindref="member">robot_dg</ref><sp/>=<sp/>dp.DynamicPinocchio(self.EntityName<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_pinocchio&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot_dg.setModel(self.robot_pin.model)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot_dg.setData(self.robot_pin.data)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a8afc141b6cddfaaeda52454e4cd51e25" kindref="member">robot_position</ref><sp/>=<sp/>stack_two_vectors(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.get_biased_base_position(),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot.device.joint_positions,<sp/>6,<sp/>12)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a5430b78f98c1ab5f303eb844b0c8dc05" kindref="member">robot_velocity</ref><sp/>=<sp/>stack_two_vectors(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.get_biased_base_velocity(),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot.device.joint_velocities,<sp/>6,<sp/>12)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dg.plug(self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a8afc141b6cddfaaeda52454e4cd51e25" kindref="member">robot_position</ref>,<sp/>self.robot_dg.position)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dg.plug(self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a5430b78f98c1ab5f303eb844b0c8dc05" kindref="member">robot_velocity</ref>,<sp/>self.robot_dg.velocity)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot_dg.acceleration.value<sp/>=<sp/>18<sp/>*<sp/>[0.,]</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>These<sp/>are<sp/>used<sp/>in<sp/>the<sp/>reactive_stepper.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a39bbcebb28650b3e9d350a31fcbef1ea" kindref="member">robot_com</ref><sp/>=<sp/>vectorIdentity(self.robot_dg.com,<sp/>3,<sp/>self.EntityName<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_pin_com&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a52edd425b4c7f9ecea9d8e3949b80f83" kindref="member">robot_vcom</ref><sp/>=<sp/>multiply_mat_vec(</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot_dg.Jcom,<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a5430b78f98c1ab5f303eb844b0c8dc05" kindref="member">robot_velocity</ref>,<sp/>self.EntityName<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_pin_vcom&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dg.plug(self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a39bbcebb28650b3e9d350a31fcbef1ea" kindref="member">robot_com</ref>,<sp/>self.com_imp_ctrl.biased_pos)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dg.plug(self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a52edd425b4c7f9ecea9d8e3949b80f83" kindref="member">robot_vcom</ref>,<sp/>self.com_imp_ctrl.biased_vel)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">record_data(self):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(Solo12ComController,<sp/>self).record_data()</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a42fa317b51400e7b913ef630f78c22ba" kindref="member">robot_pin</ref>:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot.add_trace(self.EntityName<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_pin_com&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;sout&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot.add_trace(self.EntityName<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_pin_vcom&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;sout&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a6791d1b7bbdcca3859cb85358822bb07" kindref="member">return_com_torques</ref>(self,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>@return<sp/>12-dim<sp/>vector<sp/>with<sp/>forces<sp/>at<sp/>each<sp/>endeffector.</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(Solo12ComController,<sp/>self).<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ComController_1a6791d1b7bbdcca3859cb85358822bb07" kindref="member">return_com_torques</ref>(*args,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.wb_ctrl</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController" kindref="compound">Solo12LegImpedanceController</ref>(object):</highlight></codeline>
<codeline lineno="83" refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Impedance<sp/>controller<sp/>for<sp/>single<sp/>leg<sp/>on<sp/>solo12.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1aa956e758651721d07585b2c1d6f197c7" kindref="member">__init__</ref>(self,<sp/>leg_name,<sp/>joint_indices_range):</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leg_name:<sp/>(str)<sp/>Name<sp/>of<sp/>the<sp/>leg,<sp/>like<sp/>&quot;FL&quot;</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>joint_indices_range:<sp/>(array)<sp/>Indices<sp/>on<sp/>the<sp/>joint<sp/>array<sp/>of<sp/>this<sp/>leg.</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref><sp/>=<sp/>leg_name</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1aba15200059ad006bb30d667200bd9635" kindref="member">joint_indices_range</ref><sp/>=<sp/>joint_indices_range</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1aceb6feff2edfbc8d691bb6ce0236ca27" kindref="member">robot_pin</ref><sp/>=<sp/>Solo12Config.buildRobotWrapper()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1aa7cfe737d3bd9e103747bcbeff061c27" kindref="member">robot_dg</ref><sp/>=<sp/>dp.DynamicPinocchio(self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot_dg.setModel(self.robot_pin.model)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot_dg.setData(self.robot_pin.data)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot_dg.createJacobianEndEffWorld(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;jac_cnt_&apos;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>,<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_ANKLE&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot_dg.createPosition(</highlight><highlight class="stringliteral">&apos;pos_hip_&apos;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>,<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_HFE&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot_dg.createPosition(</highlight><highlight class="stringliteral">&apos;pos_foot_&apos;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>,<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&apos;_ANKLE&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot_dg.acceleration.value<sp/>=<sp/>18<sp/>*<sp/>(0.0,<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a88f9163d5f8d8868c17309297b86a9b2" kindref="member">joint_positions_sin</ref><sp/>=<sp/>self.robot_dg.position</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1aa02f5974a5edb985308f96bb6064070e" kindref="member">joint_velocities_sin</ref><sp/>=<sp/>self.robot_dg.velocity</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a304acaa7c8804da7b9c5421bf9f1eb67" kindref="member">_compute_leg_length</ref>(self):</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Computes<sp/>current<sp/>leg<sp/>length.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a94d40e8bf8cf618d860e06ea8f21b080" kindref="member">xyzpos_hip</ref><sp/>=<sp/>hom2pos(self.robot_dg.signal(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pos_hip_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>),<sp/></highlight><highlight class="stringliteral">&quot;xyzpos_hip_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1ac765ed4b0b16d8520f7b908b0c616abe" kindref="member">xyzpos_foot</ref><sp/>=<sp/>hom2pos(self.robot_dg.signal(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pos_foot_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>),<sp/></highlight><highlight class="stringliteral">&quot;xyzpos_foot_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Relative<sp/>position<sp/>of<sp/>foot<sp/>with<sp/>respect<sp/>to<sp/>the<sp/>base<sp/>of<sp/>the<sp/>foot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a88a97eb550554d65f6f3648df7b812c5" kindref="member">rel_pos_foot</ref><sp/>=<sp/>subtract_vec_vec(</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1ac765ed4b0b16d8520f7b908b0c616abe" kindref="member">xyzpos_foot</ref>,<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a94d40e8bf8cf618d860e06ea8f21b080" kindref="member">xyzpos_hip</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rel_pos_foot_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a88a97eb550554d65f6f3648df7b812c5" kindref="member">rel_pos_foot</ref></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cd43033ff5ac89001656ccb968c2c14" kindref="member">_compute_jacobian</ref>(self):</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Slice<sp/>the<sp/>jacobian<sp/>to<sp/>keep<sp/>only<sp/>the<sp/>parts<sp/>needed<sp/>for<sp/>this<sp/>leg.</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:<sp/>Jacobian<sp/>at<sp/>the<sp/>endeffector,<sp/>size<sp/>6<sp/>x<sp/>3<sp/>matrix.</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jac_sub<sp/>=<sp/>Selec_of_matrix(</highlight><highlight class="stringliteral">&apos;jac_cnt_&apos;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jac_sub.selecRows(0,<sp/>3)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jac_sub.selecCols(6<sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1aba15200059ad006bb30d667200bd9635" kindref="member">joint_indices_range</ref>[0],<sp/>6<sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1aba15200059ad006bb30d667200bd9635" kindref="member">joint_indices_range</ref>[1])</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dg.plug(self.robot_dg.signal(</highlight><highlight class="stringliteral">&quot;jac_cnt_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>),<sp/>jac_sub.sin)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jac_sub.sout</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a76309b4d0de6543fa99768e34e6f8844" kindref="member">_compute_control_torques</ref>(self):</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Computes<sp/>torques<sp/>tau<sp/>=<sp/>JacT*(errors).</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1acb0410734f37d4d64f42bd93673c40bb" kindref="member">jacT</ref><sp/>=<sp/>transpose_mat(self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1ad2a344961469700abd1d42c0621930bd" kindref="member">jac</ref>,<sp/></highlight><highlight class="stringliteral">&quot;jacTranspose&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>multiplying<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors<sp/>=<sp/>mul_double_vec(-1.0,<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1af4bcfbaea84442ba137bd07329c4cc6e" kindref="member">total_error</ref>,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;neg_op_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>control_torques<sp/>=<sp/>multiply_mat_vec(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1acb0410734f37d4d64f42bd93673c40bb" kindref="member">jacT</ref>,<sp/>errors,<sp/></highlight><highlight class="stringliteral">&quot;compute_control_torques_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>control_torques</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">compute_control_torques(self,<sp/>kp,<sp/>kd,<sp/>kf,<sp/>des_pos,<sp/>des_vel,<sp/>fff,<sp/>pos_global=False):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Impedance<sp/>controller<sp/>implementation.<sp/>Creates<sp/>a<sp/>virtual<sp/>spring</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>damper<sp/>system<sp/>the<sp/>base<sp/>and<sp/>foot<sp/>of<sp/>the<sp/>leg</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kp:<sp/>proportional<sp/>gain</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kd:<sp/>derivative<sp/>gain</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>des_pos:<sp/>desired<sp/>position<sp/>(size<sp/>:<sp/>1*3<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>des_vel:<sp/>desired<sp/>velocity<sp/>(size<sp/>:<sp/>1*3<sp/>)</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kf:<sp/>feed<sp/>forward<sp/>force<sp/>gain<sp/>(safety)</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fff:<sp/>feed<sp/>forward<sp/>force<sp/>(size<sp/>:<sp/>1*)</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_global:<sp/>If<sp/>true,<sp/>assume<sp/>the<sp/>des_pos<sp/>is<sp/>in<sp/>global<sp/>world<sp/>coordinates.</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Otherwise,<sp/>use<sp/>local<sp/>coordinate<sp/>system<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a72720a53cc95bbb643591d5c0ab4f12c" kindref="member">rct_args</ref><sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a72720a53cc95bbb643591d5c0ab4f12c" kindref="member">rct_args</ref>[</highlight><highlight class="stringliteral">&quot;kp&quot;</highlight><highlight class="normal">]<sp/>=<sp/>kp</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a72720a53cc95bbb643591d5c0ab4f12c" kindref="member">rct_args</ref>[</highlight><highlight class="stringliteral">&quot;des_pos&quot;</highlight><highlight class="normal">]<sp/>=<sp/>des_pos</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a72720a53cc95bbb643591d5c0ab4f12c" kindref="member">rct_args</ref>[</highlight><highlight class="stringliteral">&quot;kd&quot;</highlight><highlight class="normal">]<sp/>=<sp/>kd</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a72720a53cc95bbb643591d5c0ab4f12c" kindref="member">rct_args</ref>[</highlight><highlight class="stringliteral">&quot;des_vel&quot;</highlight><highlight class="normal">]<sp/>=<sp/>des_vel</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a72720a53cc95bbb643591d5c0ab4f12c" kindref="member">rct_args</ref>[</highlight><highlight class="stringliteral">&quot;kf&quot;</highlight><highlight class="normal">]<sp/>=<sp/>kf</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a72720a53cc95bbb643591d5c0ab4f12c" kindref="member">rct_args</ref>[</highlight><highlight class="stringliteral">&quot;fff&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fff</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a72720a53cc95bbb643591d5c0ab4f12c" kindref="member">rct_args</ref>[</highlight><highlight class="stringliteral">&quot;pos_global&quot;</highlight><highlight class="normal">]<sp/>=<sp/>pos_global</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1ad2a344961469700abd1d42c0621930bd" kindref="member">jac</ref><sp/>=<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cd43033ff5ac89001656ccb968c2c14" kindref="member">_compute_jacobian</ref>()</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a88a97eb550554d65f6f3648df7b812c5" kindref="member">rel_pos_foot</ref><sp/>=<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a304acaa7c8804da7b9c5421bf9f1eb67" kindref="member">_compute_leg_length</ref>()</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pos_global:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a55a1b776288c42531c2174f5aead3bc6" kindref="member">pos_error</ref><sp/>=<sp/>subtract_vec_vec(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1ac765ed4b0b16d8520f7b908b0c616abe" kindref="member">xyzpos_foot</ref>,<sp/>des_pos,<sp/></highlight><highlight class="stringliteral">&quot;pos_error_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a55a1b776288c42531c2174f5aead3bc6" kindref="member">pos_error</ref><sp/>=<sp/>subtract_vec_vec(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a88a97eb550554d65f6f3648df7b812c5" kindref="member">rel_pos_foot</ref>,<sp/>des_pos,<sp/></highlight><highlight class="stringliteral">&quot;pos_error_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mul_kp_gains_split<sp/>=<sp/>Multiply_of_vector(</highlight><highlight class="stringliteral">&quot;kp_split_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(kp,<sp/>mul_kp_gains_split.sin0)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a55a1b776288c42531c2174f5aead3bc6" kindref="member">pos_error</ref>,<sp/>mul_kp_gains_split.sin1)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_error_with_gains<sp/>=<sp/>mul_kp_gains_split.sout</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kd<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>des_vel<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Kd<sp/>!!!!!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leg_joint_dq<sp/>=<sp/>selec_vector(self.robot_dg.velocity,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1aba15200059ad006bb30d667200bd9635" kindref="member">joint_indices_range</ref>[0],<sp/>6<sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1aba15200059ad006bb30d667200bd9635" kindref="member">joint_indices_range</ref>[1],<sp/></highlight><highlight class="stringliteral">&apos;dq_&apos;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a70ac9204066939edc30310bfa2c4b086" kindref="member">rel_vel_foot</ref><sp/>=<sp/>multiply_mat_vec(</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1ad2a344961469700abd1d42c0621930bd" kindref="member">jac</ref>,<sp/>leg_joint_dq,<sp/></highlight><highlight class="stringliteral">&quot;rel_vel_foot_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1acaf0372b3216dc91132ac293bc2fbe7d" kindref="member">vel_error</ref><sp/>=<sp/>subtract_vec_vec(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a70ac9204066939edc30310bfa2c4b086" kindref="member">rel_vel_foot</ref>,<sp/>des_vel,<sp/></highlight><highlight class="stringliteral">&quot;vel_error_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mul_kd_gains_split<sp/>=<sp/>Multiply_of_vector(</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kd_split_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(kd,<sp/>mul_kd_gains_split.sin0)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1acaf0372b3216dc91132ac293bc2fbe7d" kindref="member">vel_error</ref>,<sp/>mul_kd_gains_split.sin1)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_error_with_gains<sp/>=<sp/>mul_kd_gains_split.sout</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4c6d85da9eb61eb37c1d65831194ba83" kindref="member">pd_error</ref><sp/>=<sp/>add_vec_vec(</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_error_with_gains,<sp/>vel_error_with_gains,<sp/></highlight><highlight class="stringliteral">&quot;pd_error_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4c6d85da9eb61eb37c1d65831194ba83" kindref="member">pd_error</ref><sp/>=<sp/>pos_error_with_gains</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kf<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>fff<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;fff<sp/>is<sp/>plugged<sp/>....&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mul_kf_gains<sp/>=<sp/>Multiply_double_vector(</highlight><highlight class="stringliteral">&quot;Kf_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(kf,<sp/>mul_kf_gains.sin1)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plug(fff,<sp/>mul_kf_gains.sin2)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fff_with_gains<sp/>=<sp/>mul_kf_gains.sout</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1af4bcfbaea84442ba137bd07329c4cc6e" kindref="member">total_error</ref><sp/>=<sp/>add_vec_vec(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fff_with_gains,<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4c6d85da9eb61eb37c1d65831194ba83" kindref="member">pd_error</ref>,<sp/></highlight><highlight class="stringliteral">&quot;total_error_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a43ce76842cdfa999ce245a450e875691" kindref="member">estimated_foot_force</ref><sp/>=<sp/>add_vec_vec(</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_error_with_gains,<sp/>fff_with_gains,<sp/></highlight><highlight class="stringliteral">&quot;est_f_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1af4bcfbaea84442ba137bd07329c4cc6e" kindref="member">total_error</ref><sp/>=<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4c6d85da9eb61eb37c1d65831194ba83" kindref="member">pd_error</ref></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a43ce76842cdfa999ce245a450e875691" kindref="member">estimated_foot_force</ref><sp/>=<sp/>add_vec_vec(pos_error_with_gains,<sp/>zero_vec(</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;zero_vec_est_f&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>),<sp/></highlight><highlight class="stringliteral">&quot;est_f_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a98ac0df383d1b2da4ec02a747eb61b88" kindref="member">control_torques</ref><sp/>=<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a76309b4d0de6543fa99768e34e6f8844" kindref="member">_compute_control_torques</ref>()</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a98ac0df383d1b2da4ec02a747eb61b88" kindref="member">control_torques</ref></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">record_data(self,<sp/>robot):</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.add_trace(</highlight><highlight class="stringliteral">&quot;rel_pos_foot_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sout&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>robot.add_ros_and_trace(&quot;rel_pos_foot_&quot;<sp/>+<sp/>self.leg_name,<sp/>&quot;sout&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.add_trace(</highlight><highlight class="stringliteral">&quot;rel_vel_foot_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sout&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>robot.add_ros_and_trace(&quot;rel_vel_foot_&quot;<sp/>+<sp/>self.leg_name,<sp/>&quot;sout&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.add_trace(</highlight><highlight class="stringliteral">&quot;pos_error_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sout&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>robot.add_ros_and_trace(&quot;pos_error_&quot;<sp/>+<sp/>self.leg_name,<sp/>&quot;sout&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.add_trace(</highlight><highlight class="stringliteral">&quot;vel_error_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sout&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>robot.add_ros_and_trace(&quot;vel_error_&quot;<sp/>+<sp/>self.leg_name,<sp/>&quot;sout&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.add_trace(</highlight><highlight class="stringliteral">&quot;est_f_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sout&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>robot.add_ros_and_trace(&quot;est_f_&quot;<sp/>+<sp/>self.leg_name,<sp/>&quot;sout&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a72720a53cc95bbb643591d5c0ab4f12c" kindref="member">rct_args</ref>[</highlight><highlight class="stringliteral">&quot;kf&quot;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a72720a53cc95bbb643591d5c0ab4f12c" kindref="member">rct_args</ref>[</highlight><highlight class="stringliteral">&quot;fff&quot;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot.add_trace(</highlight><highlight class="stringliteral">&quot;total_error_&quot;</highlight><highlight class="normal"><sp/>+<sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1a4cbb793ede6548fefce01df481181429" kindref="member">leg_name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sout&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>robot.add_ros_and_trace(&quot;total_error_&quot;<sp/>+<sp/>self.leg_name,<sp/>&quot;sout&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ImpedanceController" kindref="compound">Solo12ImpedanceController</ref>(object):</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Implements<sp/>leg<sp/>impedance<sp/>controller<sp/>for<sp/>the<sp/>solo12<sp/>robot.</highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Compared<sp/>to<sp/>the<sp/>solo8<sp/>implementation,<sp/>this<sp/>uses<sp/>the<sp/>full<sp/>solo12<sp/>urdf.</highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Especially,<sp/>it<sp/>computes<sp/>the<sp/>desired<sp/>torque<sp/>at<sp/>the<sp/>actual<sp/>legs<sp/>instead<sp/>of</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>using<sp/>the<sp/>same<sp/>&quot;teststand&quot;<sp/>leg<sp/>at<sp/>each<sp/>joint.</highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController_1aa956e758651721d07585b2c1d6f197c7" kindref="member">__init__</ref>(self,<sp/>robot):</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot<sp/>=<sp/>robot</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_idx<sp/>=<sp/>[[0,<sp/>3],<sp/>[3,<sp/>6],<sp/>[6,<sp/>9],<sp/>[9,<sp/>12]]</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>leg_name,<sp/>leg_idx<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip([</highlight><highlight class="stringliteral">&apos;FL&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;FR&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;HL&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;HR&apos;</highlight><highlight class="normal">],<sp/>self.leg_idx):</highlight></codeline>
<codeline lineno="256" refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ImpedanceController" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl.append(</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12LegImpedanceController" kindref="compound">Solo12LegImpedanceController</ref>(leg_name,<sp/>leg_idx))</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ImpedanceController_1a0ed38547e9f0e814964e9fdef989e09c" kindref="member">abs_end_eff_pos</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ImpedanceController_1af260596a80b7d4c68bf58201e79f0ce3" kindref="member">abs_end_eff_vel</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ImpedanceController_1a835e5c02a065b87bf50d9496d79c6a3e" kindref="member">com_end_eff_pos</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_compute_leg_control_torques(self,<sp/>leg_idx,<sp/>kp,<sp/>kd,<sp/>kf,<sp/>des_pos,<sp/>des_vel,<sp/>fff):</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_contrl</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ImpedanceController_1a0782f26b37ab4ada7b2443685975a673" kindref="member">_slice_vec</ref>(self,<sp/>vec,<sp/>leg_idx,<sp/>name):</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Helper<sp/>for<sp/>slicing<sp/>the<sp/>desired<sp/>vector<sp/>for<sp/>a<sp/>leg.</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec:<sp/>(1*12<sp/>vector<sp/>or<sp/>None)<sp/>Vector<sp/>to<sp/>slice<sp/>for<sp/>a<sp/>given<sp/>leg</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leg_idx:<sp/>(int)<sp/>Leg<sp/>index<sp/>to<sp/>slice<sp/>the<sp/>vector<sp/>for</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name:<sp/>(str)<sp/>Name<sp/>for<sp/>the<sp/>slicing<sp/>operator<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1*3<sp/>vector<sp/>slice<sp/>for<sp/>the<sp/>leg,<sp/>None<sp/>if<sp/>vec<sp/>was<sp/>None.</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>vec<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>selec_vector(vec,<sp/>3<sp/>*<sp/>leg_idx,<sp/>3<sp/>*<sp/>leg_idx<sp/>+<sp/>3,<sp/>name)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ImpedanceController_1a017fe788183d6d226ac80c5857633158" kindref="member">compute_control_torques</ref>(self,<sp/>kp,<sp/>des_pos,<sp/>kd=None,<sp/>des_vel=None,<sp/>kf=None,<sp/>fff=None,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_position=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>base_velocity=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>pos_global=</highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Computes<sp/>the<sp/>desired<sp/>joint<sp/>torques<sp/>for<sp/>desired<sp/>configuration<sp/>using<sp/>impedance<sp/>controller.</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>no<sp/>base<sp/>position<sp/>or<sp/>velocity<sp/>is<sp/>provided,<sp/>assume<sp/>the<sp/>base<sp/>if<sp/>fixed<sp/>at<sp/>the<sp/>origin.</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kp:<sp/>(double)<sp/>proportional<sp/>gain<sp/>(double)</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>des_pos:<sp/>(1*12<sp/>vector)<sp/>desired_position<sp/>in<sp/>current<sp/>time<sp/>step</highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kd:<sp/>derivative<sp/>gain<sp/>(double)</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>des_vel:<sp/>(1*12<sp/>vector)<sp/>desired_velocity<sp/>in<sp/>current<sp/>time<sp/>step</highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fff:<sp/>(1*12<sp/>vector)<sp/>Feed<sp/>forward<sp/>force</highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_position:<sp/>(1*7<sp/>vector,<sp/>optional)<sp/>Base<sp/>position<sp/>(translation<sp/>+<sp/>quaternion)</highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_velocity:<sp/>(1*6<sp/>vector,<sp/>optional)<sp/>Base<sp/>velocity<sp/>(translation<sp/>+<sp/>rotation)</highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_global:<sp/>If<sp/>true,<sp/>track<sp/>des_pos<sp/>in<sp/>global<sp/>frame.</highlight></codeline>
<codeline lineno="299"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Requires<sp/>base_position<sp/>and<sp/>base_velocity<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Final<sp/>joint<sp/>torques<sp/>(1<sp/>*<sp/>12<sp/>vector)</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.robot<sp/>=<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.des_pos<sp/>=<sp/>vectorIdentity(des_pos,<sp/>12,<sp/></highlight><highlight class="stringliteral">&quot;imp_ctrl_des_pos&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.des_vel<sp/>=<sp/>vectorIdentity(des_vel,<sp/>12,<sp/></highlight><highlight class="stringliteral">&quot;imp_ctrl_des_vel&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fff<sp/>=<sp/>vectorIdentity(fff,<sp/>12,<sp/></highlight><highlight class="stringliteral">&quot;imp_ctrl_fff&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.joint_positions<sp/>=<sp/>self.robot.device.joint_positions</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.joint_velocities<sp/>=<sp/>self.robot.device.joint_velocities</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>no<sp/>base<sp/>information<sp/>is<sp/>provided,<sp/>assume<sp/>the<sp/>base<sp/>is<sp/>fixed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>base_position<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>base_velocity<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_position<sp/>=<sp/>constVector([0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0])</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_velocity<sp/>=<sp/>constVector([0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0])</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>the<sp/>base_position<sp/>into<sp/>PoseRPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_pose_rpy<sp/>=<sp/>basePoseQuat2PoseRPY(base_position)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot_position<sp/>=<sp/>stack_two_vectors(base_pose_rpy,<sp/>self.joint_positions,<sp/>6,<sp/>12)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot_velocity<sp/>=<sp/>stack_two_vectors(base_velocity,<sp/>self.joint_velocities,<sp/>6,<sp/>12)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>leg_idx,<sp/>imp_controller<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.leg_imp_ctrl):</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leg_name<sp/>=<sp/>imp_controller.leg_name</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dg.plug(self.robot_position,<sp/>imp_controller.robot_dg.position)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dg.plug(self.robot_velocity,<sp/>imp_controller.robot_dg.velocity)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plug<sp/>the<sp/>desired<sp/>position,<sp/>velocity<sp/>and<sp/>forces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imp_controller.compute_control_torques(</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._slice_vec(kp,<sp/>leg_idx,<sp/></highlight><highlight class="stringliteral">&apos;kp_&apos;</highlight><highlight class="normal"><sp/>+<sp/>leg_name),</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._slice_vec(kd,<sp/>leg_idx,<sp/></highlight><highlight class="stringliteral">&apos;kd_&apos;</highlight><highlight class="normal"><sp/>+<sp/>leg_name),</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kf,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._slice_vec(self.des_pos,<sp/>leg_idx,<sp/></highlight><highlight class="stringliteral">&apos;des_pos_slice_&apos;</highlight><highlight class="normal"><sp/>+<sp/>leg_name),</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._slice_vec(self.des_vel,<sp/>leg_idx,<sp/></highlight><highlight class="stringliteral">&apos;des_vel_slice_&apos;</highlight><highlight class="normal"><sp/>+<sp/>leg_name),</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._slice_vec(fff,<sp/>leg_idx,<sp/></highlight><highlight class="stringliteral">&apos;fff_slice_&apos;</highlight><highlight class="normal"><sp/>+<sp/>leg_name),</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_global=pos_global)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Combine<sp/>the<sp/>computed<sp/>torques<sp/>from<sp/>the<sp/>impedance<sp/>controllers<sp/>into<sp/>single<sp/>torque<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.control_torques<sp/>=<sp/>VectorSignal(stack_two_vectors(</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_two_vectors(</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl[0].control_torques,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl[1].control_torques,<sp/>3,<sp/>3),</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_two_vectors(</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl[2].control_torques,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl[3].control_torques,<sp/>3,<sp/>3),</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6,<sp/>6</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/>12)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.control_torques</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ImpedanceController_1ac3f58073543cac89ec91bccb0e4ab680" kindref="member">compute_com_end_eff_pos</ref>(self):</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>endeffector<sp/>positions<sp/>wrt<sp/>com<sp/>position<sp/>in<sp/>world<sp/>frame.</highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="352"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Signal&lt;dg::Vector,<sp/>size=12&gt;<sp/>Stack<sp/>of<sp/>the<sp/>four<sp/>endeffector<sp/>positions</highlight></codeline>
<codeline lineno="354"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.com_end_eff_pos:</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.com_end_eff_pos</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>com_signal<sp/>=<sp/>self.leg_imp_ctrl[0].robot_dg.com</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.com_end_eff_pos<sp/>=<sp/>stack_two_vectors(</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_two_vectors(</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtract_vec_vec(self.leg_imp_ctrl[0].xyzpos_foot,<sp/>com_signal),</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtract_vec_vec(self.leg_imp_ctrl[1].xyzpos_foot,<sp/>com_signal),</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>3),</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_two_vectors(</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtract_vec_vec(self.leg_imp_ctrl[2].xyzpos_foot,<sp/>com_signal),</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtract_vec_vec(self.leg_imp_ctrl[3].xyzpos_foot,<sp/>com_signal),</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>3),</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6,<sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;imp_ctrl_com_end_eff_pos&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.com_end_eff_pos</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ImpedanceController_1a4c2e260a3a8750f9490763a74d139788" kindref="member">compute_abs_end_eff_pos</ref>(self):</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>endeffector<sp/>positions<sp/>wrt<sp/>world<sp/>frame.</highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Signal&lt;dg::Vector,<sp/>size=12&gt;<sp/>Stack<sp/>of<sp/>the<sp/>four<sp/>endeffector<sp/>positions</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.abs_end_eff_pos:</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.abs_end_eff_pos</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.abs_end_eff_pos<sp/>=<sp/>stack_two_vectors(</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_two_vectors(</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl[0].xyzpos_foot,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl[1].xyzpos_foot,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>3),</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_two_vectors(</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl[2].xyzpos_foot,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl[3].xyzpos_foot,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>3),</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6,<sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;imp_ctrl_abs_end_eff_pos&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.abs_end_eff_pos</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpython_1_1dg__tools_1_1leg__impedance__control_1_1solo12__impedance__controller_1_1Solo12ImpedanceController_1aeac195c145f446cf632b10e6390c667e" kindref="member">compute_abs_end_eff_vel</ref>(self):</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>endeffector<sp/>velocity<sp/>signal.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.abs_end_eff_vel:</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.abs_end_eff_vel</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.abs_end_eff_vel<sp/>=<sp/>stack_two_vectors(</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_two_vectors(</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl[0].rel_vel_foot,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl[1].rel_vel_foot,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>3),</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack_two_vectors(</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl[2].rel_vel_foot,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.leg_imp_ctrl[3].rel_vel_foot,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>3),</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6,<sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;imp_ctrl_abs_end_eff_vel&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.abs_end_eff_pos</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">record_data(self):</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>imp_controller<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.leg_imp_ctrl:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imp_controller.record_data(self.robot)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.compute_abs_end_eff_pos()</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.compute_abs_end_eff_vel()</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot.add_trace(</highlight><highlight class="stringliteral">&quot;imp_ctrl_des_pos&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sout&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot.add_trace(</highlight><highlight class="stringliteral">&quot;imp_ctrl_des_vel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sout&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot.add_trace(</highlight><highlight class="stringliteral">&quot;imp_ctrl_fff&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sout&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot.add_trace(</highlight><highlight class="stringliteral">&quot;imp_ctrl_abs_end_eff_pos&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sout&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.robot.add_trace(</highlight><highlight class="stringliteral">&quot;imp_ctrl_abs_end_eff_vel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sout&quot;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="python/dg_tools/leg_impedance_control/solo12_impedance_controller.py"/>
  </compounddef>
</doxygen>
